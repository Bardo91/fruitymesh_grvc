/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "" + chunkId + ".bundle.js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(99);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("react-bootstrap");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.FATAL = exports.ERROR = exports.WARNING = exports.INFO = exports.DEBUG = exports.TRACE = exports.ATTRIBUTE_VALUE_CHANGED = exports.ERROR_OCCURED = exports.DEVICE_ENABLE_EVENTS = exports.DEVICE_DISABLE_EVENTS = exports.DEVICE_SECURITY_STORE_OWN_PARAMS = exports.DEVICE_SECURITY_STORE_PEER_PARAMS = exports.DEVICE_PASSKEY_KEYPRESS_SENT = exports.DEVICE_PASSKEY_KEYPRESS_RECEIVED = exports.DEVICE_AUTHKEY_STATUS = exports.DEVICE_LESC_OOB_REQUEST = exports.DEVICE_AUTHKEY_REQUEST = exports.DEVICE_PASSKEY_DISPLAY = exports.DEVICE_SECURITY_REQUEST = exports.DEVICE_PAIRING_STATUS = exports.DEVICE_TOGGLE_AUTO_CONN_UPDATE = exports.DEVICE_CONNECTION_PARAMS_UPDATED = exports.DEVICE_CONNECTION_PARAM_UPDATE_STATUS = exports.DEVICE_CONNECTION_PARAM_UPDATE_REQUEST = exports.DEVICE_SECURITY_REQUEST_TIMEOUT = exports.DEVICE_AUTH_SUCCESS_OCCURED = exports.DEVICE_AUTH_ERROR_OCCURED = exports.DEVICE_ADD_BOND_INFO = exports.DEVICE_SECURITY_CHANGED = exports.DEVICE_INITIATE_PAIRING = exports.DEVICE_CONNECT_CANCELED = exports.DEVICE_CANCEL_CONNECT = exports.DEVICE_DISCONNECTED = exports.DEVICE_DISCONNECT = exports.DEVICE_CONNECT_TIMEOUT = exports.DEVICE_CONNECTED = exports.DEVICE_CONNECT = exports.DEVICE_DISCOVERED = exports.ADAPTER_ADVERTISEMENT_TIMEOUT = exports.ADAPTER_SCAN_TIMEOUT = exports.ADAPTER_RESET_PERFORMED = exports.ADAPTER_STATE_CHANGED = exports.ADAPTER_ERROR = exports.ADAPTER_REMOVED = exports.ADAPTER_ADDED = exports.ADAPTER_CLOSED = exports.ADAPTER_OPENED = exports.ADAPTER_OPEN = undefined;
	exports.findAdapters = findAdapters;
	exports.programAdapter = programAdapter;
	exports.openAdapter = openAdapter;
	exports.closeAdapter = closeAdapter;
	exports.connectToDevice = connectToDevice;
	exports.disconnectFromDevice = disconnectFromDevice;
	exports.pairWithDevice = pairWithDevice;
	exports.acceptPairing = acceptPairing;
	exports.rejectPairing = rejectPairing;
	exports.replyNumericalComparisonMatch = replyNumericalComparisonMatch;
	exports.replyAuthKey = replyAuthKey;
	exports.replyLescOob = replyLescOob;
	exports.sendKeypress = sendKeypress;
	exports.cancelConnect = cancelConnect;
	exports.updateDeviceConnectionParams = updateDeviceConnectionParams;
	exports.rejectDeviceConnectionParams = rejectDeviceConnectionParams;
	exports.toggleAutoConnUpdate = toggleAutoConnUpdate;
	exports.disableDeviceEvents = disableDeviceEvents;
	exports.enableDeviceEvents = enableDeviceEvents;
	
	var _underscore = __webpack_require__(36);
	
	var _underscore2 = _interopRequireDefault(_underscore);
	
	var _semver = __webpack_require__(155);
	
	var _semver2 = _interopRequireDefault(_semver);
	
	var _os = __webpack_require__(35);
	
	var _os2 = _interopRequireDefault(_os);
	
	var _serialport = __webpack_require__(156);
	
	var _pcBleDriverJs = __webpack_require__(23);
	
	var _logging = __webpack_require__(4);
	
	var _deviceDetailsActions = __webpack_require__(16);
	
	var _common = __webpack_require__(11);
	
	var _errorDialogActions = __webpack_require__(12);
	
	var _firmwareUpdateActions = __webpack_require__(27);
	
	var _stringUtil = __webpack_require__(14);
	
	var _pcNrfjprogJs = __webpack_require__(57);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const ADAPTER_OPEN = exports.ADAPTER_OPEN = 'ADAPTER_OPEN';
	const ADAPTER_OPENED = exports.ADAPTER_OPENED = 'ADAPTER_OPENED';
	const ADAPTER_CLOSED = exports.ADAPTER_CLOSED = 'ADAPTER_CLOSED';
	const ADAPTER_ADDED = exports.ADAPTER_ADDED = 'ADAPTER_ADDED';
	const ADAPTER_REMOVED = exports.ADAPTER_REMOVED = 'ADAPTER_REMOVED';
	const ADAPTER_ERROR = exports.ADAPTER_ERROR = 'ADAPTER_ERROR';
	const ADAPTER_STATE_CHANGED = exports.ADAPTER_STATE_CHANGED = 'ADAPTER_STATE_CHANGED';
	const ADAPTER_RESET_PERFORMED = exports.ADAPTER_RESET_PERFORMED = 'ADAPTER_RESET_PERFORMED';
	const ADAPTER_SCAN_TIMEOUT = exports.ADAPTER_SCAN_TIMEOUT = 'ADAPTER_SCAN_TIMEOUT';
	const ADAPTER_ADVERTISEMENT_TIMEOUT = exports.ADAPTER_ADVERTISEMENT_TIMEOUT = 'ADAPTER_ADVERTISEMENT_TIMEOUT';
	
	const DEVICE_DISCOVERED = exports.DEVICE_DISCOVERED = 'DEVICE_DISCOVERED';
	const DEVICE_CONNECT = exports.DEVICE_CONNECT = 'DEVICE_CONNECT';
	const DEVICE_CONNECTED = exports.DEVICE_CONNECTED = 'DEVICE_CONNECTED';
	const DEVICE_CONNECT_TIMEOUT = exports.DEVICE_CONNECT_TIMEOUT = 'DEVICE_CONNECT_TIMEOUT';
	const DEVICE_DISCONNECT = exports.DEVICE_DISCONNECT = 'DEVICE_DISCONNECT';
	const DEVICE_DISCONNECTED = exports.DEVICE_DISCONNECTED = 'DEVICE_DISCONNECTED';
	const DEVICE_CANCEL_CONNECT = exports.DEVICE_CANCEL_CONNECT = 'DEVICE_CANCEL_CONNECT';
	const DEVICE_CONNECT_CANCELED = exports.DEVICE_CONNECT_CANCELED = 'DEVICE_CONNECT_CANCELED';
	const DEVICE_INITIATE_PAIRING = exports.DEVICE_INITIATE_PAIRING = 'DEVICE_INITIATE_PAIRING';
	const DEVICE_SECURITY_CHANGED = exports.DEVICE_SECURITY_CHANGED = 'DEVICE_SECURITY_CHANGED';
	const DEVICE_ADD_BOND_INFO = exports.DEVICE_ADD_BOND_INFO = 'DEVICE_ADD_BOND_INFO';
	const DEVICE_AUTH_ERROR_OCCURED = exports.DEVICE_AUTH_ERROR_OCCURED = 'DEVICE_AUTH_ERROR_OCCURED';
	const DEVICE_AUTH_SUCCESS_OCCURED = exports.DEVICE_AUTH_SUCCESS_OCCURED = 'DEVICE_AUTH_SUCCESS_OCCURED';
	const DEVICE_SECURITY_REQUEST_TIMEOUT = exports.DEVICE_SECURITY_REQUEST_TIMEOUT = 'DEVICE_SECURITY_REQUEST_TIMEOUT';
	
	const DEVICE_CONNECTION_PARAM_UPDATE_REQUEST = exports.DEVICE_CONNECTION_PARAM_UPDATE_REQUEST = 'DEVICE_CONNECTION_PARAM_UPDATE_REQUEST';
	const DEVICE_CONNECTION_PARAM_UPDATE_STATUS = exports.DEVICE_CONNECTION_PARAM_UPDATE_STATUS = 'DEVICE_CONNECTION_PARAM_UPDATE_STATUS';
	const DEVICE_CONNECTION_PARAMS_UPDATED = exports.DEVICE_CONNECTION_PARAMS_UPDATED = 'DEVICE_CONNECTION_PARAMS_UPDATED';
	const DEVICE_TOGGLE_AUTO_CONN_UPDATE = exports.DEVICE_TOGGLE_AUTO_CONN_UPDATE = 'DEVICE_TOGGLE_AUTO_CONN_UPDATE';
	
	const DEVICE_PAIRING_STATUS = exports.DEVICE_PAIRING_STATUS = 'DEVICE_PAIRING_STATUS';
	const DEVICE_SECURITY_REQUEST = exports.DEVICE_SECURITY_REQUEST = 'DEVICE_SECURITY_REQUEST';
	const DEVICE_PASSKEY_DISPLAY = exports.DEVICE_PASSKEY_DISPLAY = 'DEVICE_PASSKEY_DISPLAY';
	const DEVICE_AUTHKEY_REQUEST = exports.DEVICE_AUTHKEY_REQUEST = 'DEVICE_AUTHKEY_REQUEST';
	const DEVICE_LESC_OOB_REQUEST = exports.DEVICE_LESC_OOB_REQUEST = 'DEVICE_LESC_OOB_REQUEST';
	const DEVICE_AUTHKEY_STATUS = exports.DEVICE_AUTHKEY_STATUS = 'DEVICE_AUTHKEY_STATUS';
	const DEVICE_PASSKEY_KEYPRESS_RECEIVED = exports.DEVICE_PASSKEY_KEYPRESS_RECEIVED = 'DEVICE_PASSKEY_KEYPRESS_RECEIVED';
	const DEVICE_PASSKEY_KEYPRESS_SENT = exports.DEVICE_PASSKEY_KEYPRESS_SENT = 'DEVICE_PASSKEY_KEYPRESS_SENT';
	
	const DEVICE_SECURITY_STORE_PEER_PARAMS = exports.DEVICE_SECURITY_STORE_PEER_PARAMS = 'DEVICE_SECURITY_STORE_PEER_PARAMS';
	const DEVICE_SECURITY_STORE_OWN_PARAMS = exports.DEVICE_SECURITY_STORE_OWN_PARAMS = 'DEVICE_SECURITY_STORE_OWN_PARAMS';
	
	const DEVICE_DISABLE_EVENTS = exports.DEVICE_DISABLE_EVENTS = 'DEVICE_DISABLE_EVENTS';
	const DEVICE_ENABLE_EVENTS = exports.DEVICE_ENABLE_EVENTS = 'DEVICE_ENABLE_EVENTS';
	
	const ERROR_OCCURED = exports.ERROR_OCCURED = 'ERROR_OCCURED';
	
	const ATTRIBUTE_VALUE_CHANGED = exports.ATTRIBUTE_VALUE_CHANGED = 'ADAPTER_ATTRIBUTE_VALUE_CHANGED';
	
	const TRACE = exports.TRACE = 0;
	const DEBUG = exports.DEBUG = 1;
	const INFO = exports.INFO = 2;
	const WARNING = exports.WARNING = 3;
	const ERROR = exports.ERROR = 4;
	const FATAL = exports.FATAL = 5;
	
	const _adapterFactory = _pcBleDriverJs.api.AdapterFactory.getInstance();
	
	// TODO: move to security reducer?
	const secKeyset = {
	    keys_own: {
	        enc_key: null,
	        id_key: null,
	        sign_key: null,
	        pk: null
	    },
	    keys_peer: {
	        enc_key: null,
	        id_key: null,
	        sign_key: null,
	        pk: null
	    }
	};
	
	const attrChange = {
	    lastAttrChangeTime: process.hrtime(),
	    numAttrChanged: 0,
	    lastAttrHandleChanged: 0
	};
	
	let throttledValueChangedDispatch;
	
	const latestFirmwareVersion = '1.1.0';
	
	// Internal functions
	
	function _getAdapters(dispatch) {
	    return new Promise((resolve, reject) => {
	        // Register listeners for adapters added/removed
	        _adapterFactory.removeAllListeners();
	        _adapterFactory.on('added', adapter => {
	            dispatch(adapterAddedAction(adapter));
	        });
	        _adapterFactory.on('removed', adapter => {
	            dispatch(adapterRemovedAction(adapter));
	        });
	        _adapterFactory.on('error', error => {
	            dispatch((0, _errorDialogActions.showErrorDialog)(new Error(error.message)));
	        });
	
	        _adapterFactory.getAdapters((error, adapters) => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve();
	            }
	        });
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _setupListeners(dispatch, getState, adapterToUse) {
	    // Remove all old listeners before adding new ones
	    adapterToUse.removeAllListeners();
	
	    // Listen to errors from this adapter since we are opening it now
	    adapterToUse.on('error', error => {
	        // TODO: separate between what is an non recoverable adapter error
	        // TODO: and a recoverable error.
	        // TODO: adapterErrorAction should only be used if it is an unrecoverable errors.
	        // TODO: errorOccuredAction should be used for recoverable errors.
	        const message = error.description && error.description.errcode ? `${error.message} (${error.description.errcode})` : `${error.message}`;
	        dispatch((0, _errorDialogActions.showErrorDialog)(new Error(message)));
	    });
	
	    adapterToUse.on('warning', warning => {
	        if (warning.message.includes('not supported')) {
	            _logging.logger.warn(warning.message);
	        } else {
	            _logging.logger.info(warning.message);
	        }
	    });
	
	    adapterToUse.on('logMessage', _onLogMessage);
	
	    // Listen to adapter changes
	    adapterToUse.on('stateChanged', state => {
	        dispatch(adapterStateChangedAction(adapterToUse, state));
	    });
	
	    adapterToUse.on('deviceDiscovered', device => {
	        _handleDeviceEvent(device, getState, () => {
	            dispatch(deviceDiscoveredAction(device));
	        });
	    });
	
	    adapterToUse.on('deviceConnected', device => {
	        _handleDeviceEvent(device, getState, () => {
	            _onDeviceConnected(dispatch, getState, device);
	        });
	    });
	
	    adapterToUse.on('deviceDisconnected', (device, reason) => {
	        _handleDeviceEvent(device, getState, () => {
	            dispatch(deviceDisconnectedAction(device, reason));
	        });
	    });
	
	    adapterToUse.on('connectTimedOut', deviceAddress => {
	        dispatch(deviceConnectTimeoutAction(deviceAddress));
	    });
	
	    adapterToUse.on('scanTimedOut', () => {
	        dispatch(scanTimeoutAction(adapterToUse));
	    });
	
	    adapterToUse.on('advertiseTimedOut', () => {
	        dispatch(advertiseTimeoutAction(adapterToUse));
	    });
	
	    adapterToUse.on('securityRequestTimedOut', device => {
	        _handleDeviceEvent(device, getState, () => {
	            dispatch(deviceSecurityRequestTimedOutAction(device));
	        });
	    });
	
	    adapterToUse.on('connParamUpdateRequest', (device, requestedConnectionParams) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onConnParamUpdateRequest(dispatch, getState, device, requestedConnectionParams);
	        });
	    });
	
	    adapterToUse.on('connParamUpdate', (device, connectionParams) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onConnParamUpdate(dispatch, getState, device, connectionParams);
	        });
	    });
	
	    adapterToUse.on('attMtuChanged', (device, mtu) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onAttMtuChanged(dispatch, getState, device, mtu);
	        });
	    });
	
	    adapterToUse.on('characteristicValueChanged', characteristic => {
	        _onAttributeValueChanged(dispatch, getState, characteristic, characteristic.valueHandle);
	    });
	
	    adapterToUse.on('descriptorValueChanged', descriptor => {
	        _onAttributeValueChanged(dispatch, getState, descriptor, descriptor.handle);
	    });
	
	    adapterToUse.on('securityChanged', (device, connectionSecurity) => {
	        _handleDeviceEvent(device, getState, () => {
	            dispatch(securityChangedAction(device, connectionSecurity));
	        });
	    });
	
	    adapterToUse.on('securityRequest', (device, params) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onSecurityRequest(dispatch, getState, device, params);
	        });
	    });
	
	    adapterToUse.on('secParamsRequest', (device, peerParams) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onSecParamsRequest(dispatch, getState, device, peerParams);
	        });
	    });
	
	    adapterToUse.on('secInfoRequest', (device, params) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onSecInfoRequest(dispatch, getState, device, params);
	        });
	    });
	
	    adapterToUse.on('authKeyRequest', (device, keyType) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onAuthKeyRequest(dispatch, getState, device, keyType);
	        });
	    });
	
	    adapterToUse.on('passkeyDisplay', (device, matchRequest, passkey) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onPasskeyDisplay(dispatch, getState, device, matchRequest, passkey);
	        });
	    });
	
	    adapterToUse.on('lescDhkeyRequest', (device, peerPublicKey, oobDataRequired) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onLescDhkeyRequest(dispatch, getState, device, peerPublicKey, oobDataRequired);
	        });
	    });
	
	    adapterToUse.on('keyPressed', (device, keypressType) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onKeyPressed(dispatch, getState, device, keypressType);
	        });
	    });
	
	    adapterToUse.on('authStatus', (device, params) => {
	        _handleDeviceEvent(device, getState, () => {
	            _onAuthStatus(dispatch, getState, device, params);
	        });
	    });
	
	    adapterToUse.on('status', status => {
	        _onStatus(dispatch, getState, status);
	    });
	}
	
	function _handleDeviceEvent(device, getState, handleFn) {
	    if (!getState().adapter.ignoredDeviceAddresses.has(device.address)) {
	        handleFn();
	    }
	}
	
	function _checkVersion(version) {
	    if (!version) {
	        return false;
	    }
	
	    // Require higher than or equal to version, but disallow increment in major version number
	    const versionRule = '^' + latestFirmwareVersion;
	    if (!_semver2.default.satisfies(version, versionRule)) {
	        return false;
	    }
	
	    return true;
	}
	
	function _checkProgram(dispatch, getState, adapter) {
	    return new Promise((resolve, reject) => {
	        // Check if we already have an adapter open, if so, close it
	        if (getState().adapter.api.selectedAdapter === null) {
	            resolve();
	            return;
	        }
	
	        _closeAdapter(dispatch, getState().adapter.api.selectedAdapter).then(() => {
	            resolve();
	        }).catch(error => {
	            reject(error);
	        });
	    }).then(() => {
	        return _validatePort(dispatch, getState, adapter);
	    }).then(adapterToUse => {
	        const serialNumber = parseInt(adapterToUse.state.serialNumber, 10);
	        return _getVersion(dispatch, getState, adapter, serialNumber);
	    }).then(versionInfo => {
	        return _openAdapter(dispatch, getState, adapter, versionInfo);
	    }).catch(err => {
	        if (err) {
	            dispatch((0, _errorDialogActions.showErrorDialog)(err));
	        }
	    });
	}
	
	function _validatePort(dispatch, getState, adapter) {
	    const adapterToUse = getState().adapter.api.adapters.find(x => {
	        return x.state.port === adapter;
	    });
	
	    return new Promise((resolve, reject) => {
	        if (adapterToUse === null) {
	            reject(new Error(`Not able to find ${adapter}.`));
	        }
	
	        const port = new _serialport.SerialPort(adapter, {}, false);
	
	        port.open(err => {
	            if (err) {
	                reject(new Error(`Could not open the port. Please power cycle the device and try again.`));
	                _logging.logger.debug(`Serial port error: ${err}`);
	                return;
	            }
	
	            resolve(port);
	        });
	    }).then(port => {
	        return new Promise((resolve, reject) => {
	            port.close(err => {
	                if (err) {
	                    reject();
	                    _logging.logger.debug(`Serial port error: ${err}`);
	                    return;
	                }
	
	                resolve();
	            });
	        });
	    }).then(() => {
	        return adapterToUse;
	    });
	}
	
	function _getVersion(dispatch, getState, adapter, serialNumber) {
	    return new Promise((resolve, reject) => {
	        const probe = new _pcNrfjprogJs.DebugProbe();
	
	        probe.getVersion(serialNumber, (err, version) => {
	            setTimeout(() => {
	                if (err && err.errcode === 'CouldNotLoadDLL') {
	                    _logging.logger.info('Could not load nrfjprog DLL, firmware detection and programming will not be available.');
	                    // Don't proceed if we were not able to read out the version
	                    resolve();
	                    return;
	                } else if (err && (err.errcode === 'CouldNotConnectToDevice' || err.errcode === 'CouldNotOpenDevice')) {
	                    _logging.logger.info('Could not connect to debug probe, firmware detection and programming will not be available.');
	                    resolve();
	                    return;
	                } else if (err && err.errcode !== 'WrongMagicNumber') {
	                    // Wrong Magic Number is not an actual error for us, so we should continue execution
	                    _logging.logger.info('Could not connect to debug probe, firmware detection and programming will not be available.');
	                    resolve();
	                    return;
	                }
	
	                const versionString = version ? _semver2.default.clean(version.string) : null;
	
	                if (!_checkVersion(versionString)) {
	                    dispatch((0, _firmwareUpdateActions.showFirmwareUpdateRequest)(adapter, versionString, latestFirmwareVersion));
	                    reject();
	                } else {
	                    _logging.logger.info(`Connectivity firmware version ${versionString} detected`);
	                    _logging.logger.debug(`Connectivity firmware info: sdBleApiVersion: ${version.sdBleApiVersion}, baudRate: ${version.baudRate}, transportType: ${version.transportType}`);
	                    resolve(version);
	                }
	            }, 500);
	        });
	    });
	}
	
	function _getBaudRate(versionInfo) {
	    const defaultBaudRate = _os2.default.type() === 'Darwin' ? 115200 : 1000000;
	
	    if (!versionInfo || !versionInfo.baudRate) {
	        return defaultBaudRate;
	    }
	
	    if (versionInfo.baudRate < 0 && versionInfo.baudRate > 1000000) {
	        return defaultBaudRate;
	    }
	
	    return versionInfo.baudRate;
	}
	
	function _openAdapter(dispatch, getState, adapter, versionInfo) {
	    return new Promise((resolve, reject) => {
	        // Check if we already have an adapter open, if so, close it
	        if (getState().adapter.api.selectedAdapter !== null) {
	            _closeAdapter(dispatch, getState().adapter.api.selectedAdapter).then(() => {
	                resolve();
	            }).catch(error => {
	                reject(error);
	            });
	        } else {
	            resolve();
	        }
	    }).then(() => {
	        const baudRate = _getBaudRate(versionInfo);
	        return Promise.resolve(baudRate);
	    }).then(baudRate => {
	        return new Promise((resolve, reject) => {
	            const options = {
	                baudRate: baudRate,
	                parity: 'none',
	                flowControl: 'none',
	                eventInterval: 10,
	                logLevel: 'debug',
	                enableBLE: false
	            };
	
	            const adapterToUse = getState().adapter.api.adapters.find(x => {
	                return x.state.port === adapter;
	            });
	
	            if (adapterToUse === null) {
	                reject(new Error(`Not able to find ${adapter}.`));
	                return;
	            }
	
	            getState().adapter.api.selectedAdapter = adapterToUse;
	
	            dispatch(adapterOpenAction(adapterToUse));
	
	            _setupListeners(dispatch, getState, adapterToUse);
	
	            adapterToUse.open(options, error => {
	                if (error) {
	                    reject(error); // Let the error event inform the user about the error.
	                } else {
	                    resolve(adapterToUse);
	                }
	            });
	        }).then(adapter => {
	            dispatch(adapterOpenedAction(adapter));
	        });
	    }).catch(error => {
	        getState().adapter.api.selectedAdapter = null;
	        // Let the error event inform the user about the error.
	    });
	}
	
	function _onDeviceConnected(dispatch, getState, device) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	
	    if (!adapterToUse) {
	        _logging.logger.warn('No adapter');
	        return;
	    }
	
	    const bondInfo = getState().adapter.getIn(['adapters', getState().adapter.selectedAdapter, 'security', 'bondStore', device.address]);
	
	    if (device.role === 'peripheral' && bondInfo) {
	        const isLesc = bondInfo.getIn(['keys_own', 'enc_key', 'enc_info', 'lesc']);
	
	        let encInfo;
	        let masterId;
	
	        if (isLesc) {
	            encInfo = bondInfo.getIn(['keys_own', 'enc_key', 'enc_info']).toJS();
	            masterId = bondInfo.getIn(['keys_own', 'enc_key', 'master_id']).toJS();
	        } else {
	            encInfo = bondInfo.getIn(['keys_peer', 'enc_key', 'enc_info']).toJS();
	            masterId = bondInfo.getIn(['keys_peer', 'enc_key', 'master_id']).toJS();
	        }
	
	        adapterToUse.encrypt(device.instanceId, masterId, encInfo, error => {
	            if (error) {
	                _logging.logger.warn(`Encrypt procedure failed: ${error}`);
	            }
	
	            _logging.logger.debug(`Encrypt, masterId: ${JSON.stringify(masterId)}, encInfo: ${JSON.stringify(encInfo)}`);
	        });
	    }
	
	    dispatch(deviceConnectedAction(device));
	    dispatch((0, _deviceDetailsActions.discoverServices)(device));
	}
	
	function _onAttributeValueChanged(dispatch, getState, attribute, handle) {
	    let val;
	    if (Array.isArray(attribute.value)) {
	        val = attribute.value;
	    } else if (attribute.value) {
	        val = attribute.value[Object.keys(attribute.value)[0]];
	    }
	
	    _logging.logger.info(`Attribute value changed, handle: 0x${(0, _stringUtil.toHexString)(handle)}, value (0x): ${(0, _stringUtil.toHexString)(val)}`);
	
	    if (!throttledValueChangedDispatch) {
	        throttledValueChangedDispatch = _underscore2.default.throttle((attribute, value) => {
	            dispatch(attributeValueChangedAction(attribute, value));
	        }, 500);
	    }
	
	    throttledValueChangedDispatch(attribute, attribute.value);
	}
	
	function _onConnParamUpdateRequest(dispatch, getState, device, requestedConnectionParams) {
	    if (getState().adapter.autoConnUpdate === true) {
	        requestedConnectionParams.maxConnectionInterval = requestedConnectionParams.minConnectionInterval;
	        _updateDeviceConnectionParams(dispatch, getState, -1, device, requestedConnectionParams);
	    } else {
	        dispatch(deviceConnParamUpdateRequestAction(device, requestedConnectionParams));
	    }
	}
	
	function _onConnParamUpdate(dispatch, getState, device, connectionParams) {
	    if (device.role === 'central' && !getState().adapter.autoConnUpdate) {
	        dispatch(deviceConnParamUpdateRequestAction(device, connectionParams));
	    }
	
	    dispatch(connectionParamUpdateStatusAction(-1, device, -1));
	    dispatch(connectionParamsUpdatedAction(device));
	}
	
	function _onAttMtuChanged(dispatch, getState, device, mtu) {
	    _logging.logger.info(`ATT MTU changed, new value is ${mtu}`);
	}
	
	function _onSecurityRequest(dispatch, getState, device, params) {
	    const state = getState();
	    const selectedAdapter = state.adapter.getIn(['adapters', state.adapter.selectedAdapter]);
	    const defaultSecParams = selectedAdapter.security.securityParams;
	
	    if (!defaultSecParams) {
	        _logging.logger.warn('Security request received but security state is undefined');
	        return;
	    }
	
	    if (selectedAdapter.security.autoAcceptPairing) {
	        dispatch(storeSecurityOwnParamsAction(device, defaultSecParams));
	        _authenticate(dispatch, getState, device, defaultSecParams);
	    } else {
	        dispatch(securityRequestAction(device, params));
	    }
	}
	
	function _onSecParamsRequest(dispatch, getState, device, peerParams) {
	    const state = getState();
	    const selectedAdapter = state.adapter.getIn(['adapters', state.adapter.selectedAdapter]);
	    const defaultSecParams = selectedAdapter.security.securityParams;
	
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	
	    dispatch(storeSecurityPeerParamsAction(device, peerParams));
	
	    secKeyset.keys_own.pk = { pk: adapterToUse.computePublicKey() };
	
	    if (device.role === 'central') {
	        if (device.ownPeriphInitiatedPairingPending) {
	            // If pairing initiated by own peripheral, proceed directly with replySecParams
	            let periphInitSecParams = getState().adapter.getIn(['adapters', getState().adapter.selectedAdapter, 'security', 'connectionsSecParameters', device.address, 'ownParams']);
	
	            if (!periphInitSecParams) {
	                _logging.logger.info(`Could not retrieve stored security params, using default params`);
	                periphInitSecParams = defaultSecParams;
	            }
	
	            adapterToUse.replySecParams(device.instanceId, 0, periphInitSecParams, secKeyset, error => {
	                if (error) {
	                    _logging.logger.warn(`Error when calling replySecParams: ${error}`);
	                    dispatch(deviceAuthErrorOccuredAction(device));
	                }
	
	                _logging.logger.debug(`ReplySecParams, secParams: ${periphInitSecParams}`);
	                dispatch(storeSecurityOwnParamsAction(device, periphInitSecParams));
	            });
	        } else {
	            if (selectedAdapter.security.autoAcceptPairing) {
	                _acceptPairing(dispatch, getState, -1, device, defaultSecParams);
	            } else {
	                const secParams = {
	                    bond: peerParams.bond,
	                    mitm: peerParams.mitm,
	                    lesc: peerParams.lesc,
	                    keypress: peerParams.keypress
	                };
	                dispatch(securityRequestAction(device, secParams));
	            }
	        }
	    } else if (device.role === 'peripheral') {
	        adapterToUse.replySecParams(device.instanceId, 0, null, secKeyset, error => {
	            if (error) {
	                _logging.logger.warn(`Error when calling replySecParams: ${error}`);
	                dispatch(deviceAuthErrorOccuredAction(device));
	            }
	
	            _logging.logger.debug(`ReplySecParams, secParams: null`);
	        });
	    }
	}
	
	function _onSecInfoRequest(dispatch, getState, device, params) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	
	    const bondInfo = getState().adapter.getIn(['adapters', getState().adapter.selectedAdapter, 'security', 'bondStore', device.address]);
	
	    let encInfo;
	    let idInfo;
	
	    if (bondInfo) {
	        encInfo = bondInfo.getIn(['keys_own', 'enc_key', 'enc_info']).toJS();
	        idInfo = bondInfo.getIn(['keys_own', 'id_key', 'id_info']).toJS();
	    } else {
	        _logging.logger.info(`Peer requested encryption, but no keys are found for address ${device.address}`);
	        encInfo = null;
	        idInfo = null;
	    }
	
	    adapterToUse.secInfoReply(device.instanceId, encInfo, idInfo, null, error => {
	        if (error) {
	            _logging.logger.warn(`Error when calling secInfoReply: ${error}`);
	            dispatch(deviceAuthErrorOccuredAction(device));
	        }
	
	        _logging.logger.debug(`SecInfoReply, ${JSON.stringify(encInfo)}, ${JSON.stringify(idInfo)}`);
	    });
	}
	
	function _onAuthKeyRequest(dispatch, getState, device, keyType) {
	    // TODO: add if enableKeypress shall be sent
	    // Find sec params info regarding if keypress notification shall be sent
	    const secParameters = getState().adapter.getIn(['adapters', getState().adapter.selectedAdapter, 'security', 'connectionsSecParameters', device.address]);
	    const sendKeypress = secParameters.peerParams.keypress === true && secParameters.ownParams.keypress === true;
	
	    dispatch(authKeyRequestAction(device, keyType, sendKeypress));
	}
	
	function _onPasskeyDisplay(dispatch, getState, device, matchRequest, passkey) {
	    const secParameters = getState().adapter.getIn(['adapters', getState().adapter.selectedAdapter, 'security', 'connectionsSecParameters', device.address]);
	    const receiveKeypress = secParameters.peerParams.keypress === true && secParameters.ownParams.keypress === true;
	    dispatch(passkeyDisplayAction(device, matchRequest, passkey, receiveKeypress));
	}
	
	function _onLescDhkeyRequest(dispatch, getState, device, peerPublicKey, oobdRequired) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	
	    const dhKey = adapterToUse.computeSharedSecret(peerPublicKey);
	
	    adapterToUse.replyLescDhkey(device.instanceId, dhKey, error => {
	        if (error) {
	            _logging.logger.warn(`Error when sending LESC DH key`);
	            dispatch(deviceAuthErrorOccuredAction(device));
	            return;
	        }
	    });
	
	    const publicKey = adapterToUse.computePublicKey();
	    adapterToUse.getLescOobData(device.instanceId, publicKey, (error, ownOobData) => {
	        if (error) {
	            _logging.logger.warn(`Error in getLescOobData: ${error.message}`);
	            dispatch(deviceAuthErrorOccuredAction(device));
	            return;
	        }
	
	        _logging.logger.debug(`Own OOB data: ${JSON.stringify(ownOobData)}`);
	
	        if (oobdRequired) {
	            dispatch(lescOobRequestAction(device, ownOobData));
	        }
	    });
	}
	
	function _onKeyPressed(dispatch, getState, device, keypressType) {
	    dispatch(keypressReceivedAction(device, keypressType));
	}
	
	function _onAuthStatus(dispatch, getState, device, params) {
	    if (params.auth_status !== 0) {
	        _logging.logger.warn(`Authentication failed with status ${params.auth_status_name}`);
	        dispatch(deviceAuthErrorOccuredAction(device));
	        return;
	    }
	
	    dispatch(deviceAuthSuccessOccuredAction(device));
	
	    if (!(params.keyset && params.keyset.keys_own && params.keyset.keys_own.pk && params.keyset.keys_own.enc_key && params.keyset.keys_own.id_key)) {
	        return;
	    }
	
	    if (!params.bonded) {
	        _logging.logger.debug('No bonding performed, do not store keys');
	        return;
	    }
	
	    dispatch(addBondInfo(device, params));
	}
	
	function _authenticate(dispatch, getState, device, securityParams) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	
	    return new Promise((resolve, reject) => {
	        adapterToUse.authenticate(device.instanceId, securityParams, error => {
	            if (error) {
	                reject(new Error(error.message));
	                dispatch(deviceAuthErrorOccuredAction(device));
	            }
	
	            resolve(adapterToUse);
	        });
	    });
	}
	
	function _onLogMessage(severity, message) {
	    switch (severity) {
	        case TRACE:
	        case DEBUG:
	            _logging.logger.debug(message);
	            break;
	        case INFO:
	            _logging.logger.info(message);
	            break;
	        case WARNING:
	            _logging.logger.warn(message);
	            break;
	        case ERROR:
	        case FATAL:
	            _logging.logger.error(message);
	            break;
	        default:
	            _logging.logger.warn(`Log message of unknown severity ${severity} received: ${message}`);
	    }
	}
	
	function _onStatus(dispatch, getState, status) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	
	    if (adapterToUse === undefined || adapterToUse === null) {
	        _logging.logger.error('Received status callback, but adapter is not selected yet.');
	        return;
	    }
	
	    // Check if it is a reset performed status and if selectedAdapter is set.
	    // selectedAdapter is set in the immutable state of the application after the adapter has been successfully opened.
	    if (status.name === 'RESET_PERFORMED') {
	        if (adapterToUse) {
	            dispatch(adapterResetPerformedAction(adapterToUse));
	        }
	    } else if (status.name === 'CONNECTION_ACTIVE') {
	        _enableBLE(dispatch, adapterToUse);
	    } else {
	        _logging.logger.error(`Received status with code ${status.id} ${status.name}, message: '${status.message}'`);
	    }
	}
	
	function _enableBLE(dispatch, adapter) {
	    // Adapter has been through state RESET and has now transitioned to CONNECTION_ACTIVE, we now need to enable the BLE stack
	    if (!adapter) {
	        _logging.logger.error('Trying to enable BLE, but adapter not provided.');
	        return;
	    }
	
	    return new Promise((resolve, reject) => {
	        adapter.enableBLE(null, error => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve();
	            }
	        });
	    }).then(() => {
	        // Initiate fetching of adapter state, let API emit state changes
	        return new Promise((resolve, reject) => {
	            adapter.getState(error => {
	                if (error) {
	                    reject(new Error(error.message));
	                } else {
	                    resolve();
	                }
	            });
	        });
	    }).then(() => {
	        _logging.logger.debug('SoftDevice BLE stack enabled.');
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _closeAdapter(dispatch, adapter) {
	    return new Promise((resolve, reject) => {
	        adapter.close(error => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve(adapter);
	            }
	        });
	    }).then(adapter => {
	        dispatch(adapterClosedAction(adapter));
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _updateDeviceConnectionParams(dispatch, getState, id, device, connectionParams) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        adapterToUse.updateConnectionParameters(device.instanceId, connectionParams, (error, device) => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve(device);
	            }
	        });
	    }).then(device => {
	        dispatch(connectionParamUpdateStatusAction(id, device, _common.BLEEventState.SUCCESS));
	    }).catch(error => {
	        dispatch(connectionParamUpdateStatusAction(id, device, _common.BLEEventState.ERROR));
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _rejectConnectionParams(dispatch, getState, id, device) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected!'));
	        }
	
	        adapterToUse.rejectConnParams(device.instanceId, error => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve();
	            }
	        });
	    }).then(() => {
	        dispatch(connectionParamUpdateStatusAction(id, device, _common.BLEEventState.REJECTED));
	    }).catch(error => {
	        dispatch(connectionParamUpdateStatusAction(id, device, _common.BLEEventState.ERROR));
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _rejectPairing(dispatch, getState, id, device) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected!'));
	        }
	
	        if (device.role === 'peripheral') {
	            adapterToUse.authenticate(device.instanceId, null, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                }
	
	                resolve();
	            });
	        } else if (device.role === 'central') {
	            const PAIRING_NOT_SUPPORTED = 0x85;
	            adapterToUse.replySecParams(device.instanceId, PAIRING_NOT_SUPPORTED, null, null, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                }
	
	                resolve();
	            });
	        } else {
	            reject(new Error('Invalid role'));
	        }
	    }).then(() => {
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.REJECTED));
	    }).catch(() => {
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.ERROR));
	    });
	}
	
	function _replyAuthKey(dispatch, getState, id, device, keyType, key) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	    const driver = adapterToUse.driver;
	
	    if (adapterToUse === null) {
	        dispatch((0, _errorDialogActions.showErrorDialog)(new Error('No adapter selected!')));
	    }
	
	    // Check if we shall send keypressEnd based
	    // on keypressStart has been sent previously
	    const sendKeypress = getState().bleEvent.getIn(['events', id, 'keypressStartSent']);
	
	    return new Promise((resolve, reject) => {
	        if (sendKeypress === true) {
	            adapterToUse.notifyKeypress(device.instanceId, driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_END, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                } else {
	                    resolve();
	                }
	            });
	        } else {
	            resolve();
	        }
	    }).then(() => {
	        if (sendKeypress === true) {
	            dispatch(keypressSentAction(id, device, 'BLE_GAP_KP_NOT_TYPE_PASSKEY_END'));
	        }
	
	        return new Promise((resolve, reject) => {
	            const keyTypeInt = keyType === 'BLE_GAP_AUTH_KEY_TYPE_PASSKEY' ? 1 : keyType === 'BLE_GAP_AUTH_KEY_TYPE_OOB' ? 2 : 0;
	
	            adapterToUse.replyAuthKey(device.instanceId, keyTypeInt, key, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                }
	
	                resolve();
	            });
	        }).then(() => {
	            dispatch(pairingStatusAction(id, device, _common.BLEEventState.PENDING));
	        }).catch(error => {
	            dispatch((0, _errorDialogActions.showErrorDialog)(error));
	            dispatch(authKeyStatusAction(id, device, _common.BLEEventState.ERROR));
	        });
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _replyLescOob(dispatch, getState, id, device, peerOob, ownOobData) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	        let peerOobData;
	
	        if (peerOob.confirm === '' || peerOob.random === '') {
	            peerOobData = null;
	        } else {
	            peerOobData = {
	                addr: {
	                    address: device.address,
	                    type: device.addressType
	                },
	                r: (0, _stringUtil.hexStringToArray)(peerOob.random),
	                c: (0, _stringUtil.hexStringToArray)(peerOob.confirm)
	            };
	        }
	
	        _logging.logger.debug(`setLescOobData, ownOobData: ${JSON.stringify(ownOobData)}, peerOobData: ${JSON.stringify(peerOobData)}`);
	
	        adapterToUse.setLescOobData(device.instanceId, ownOobData, peerOobData, error => {
	            if (error) {
	                reject(new Error(error.message));
	            }
	
	            resolve();
	        });
	    }).then(() => {
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.PENDING));
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	        dispatch(authKeyStatusAction(id, device, _common.BLEEventState.ERROR));
	    });
	}
	
	function _sendKeypress(dispatch, getState, eventId, device, keypressType) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	    const driver = adapterToUse.driver;
	
	    const keypressStartSent = getState().bleEvent.getIn(['events', eventId, 'keypressStartSent']);
	
	    if (adapterToUse === null) {
	        dispatch((0, _errorDialogActions.showErrorDialog)('No adapter selected!'));
	        return;
	    }
	
	    return new Promise((resolve, reject) => {
	        if (keypressStartSent !== true) {
	            adapterToUse.notifyKeypress(device.instanceId, driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_START, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                } else {
	                    resolve();
	                }
	            });
	        } else {
	            resolve();
	        }
	    }).then(() => {
	        dispatch(keypressSentAction(eventId, device, 'BLE_GAP_KP_NOT_TYPE_PASSKEY_START'));
	
	        return new Promise((resolve, reject) => {
	            let keypressTypeValue;
	
	            if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_START') {
	                keypressTypeValue = driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_START;
	            } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_END') {
	                keypressTypeValue = driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_END;
	            } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN') {
	                keypressTypeValue = driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN;
	            } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT') {
	                keypressTypeValue = driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT;
	            } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR') {
	                keypressTypeValue = driver.BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR;
	            } else {
	                reject(new Error('Unknown keypress received.'));
	                return;
	            }
	
	            adapterToUse.notifyKeypress(device.instanceId, keypressTypeValue, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                } else {
	                    resolve();
	                }
	            });
	        }).then(() => {
	            dispatch(keypressSentAction(eventId, device, keypressType));
	        }).catch(error => {
	            dispatch((0, _errorDialogActions.showErrorDialog)(error));
	        });
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _acceptPairing(dispatch, getState, id, device, securityParams) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected!'));
	        }
	
	        secKeyset.keys_own.pk = { pk: adapterToUse.computePublicKey() };
	
	        if (device.role === 'peripheral') {
	            adapterToUse.authenticate(device.instanceId, securityParams, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                }
	
	                _logging.logger.debug(`Authenticate, secParams: ${securityParams}`);
	                resolve();
	            });
	        } else if (device.role === 'central') {
	            adapterToUse.replySecParams(device.instanceId, 0, securityParams, secKeyset, error => {
	                if (error) {
	                    reject(new Error(error.message));
	                }
	
	                _logging.logger.debug(`ReplySecParams, secParams: ${JSON.stringify(securityParams)}, secKeyset: ${JSON.stringify(secKeyset)}`);
	                resolve();
	            });
	        } else {
	            reject(new Error('Unknown role'));
	        }
	    }).then(() => {
	        dispatch(storeSecurityOwnParamsAction(device, securityParams));
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.PENDING));
	    }).catch(() => {
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.ERROR));
	    });
	}
	
	function _pairWithDevice(dispatch, getState, id, device, securityParams) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (!adapterToUse) {
	            reject(new Error('No adapter selected!'));
	        }
	
	        adapterToUse.authenticate(device.instanceId, securityParams, error => {
	            if (error) {
	                reject(new Error(error.message));
	            }
	
	            _logging.logger.debug(`Authenticate, secParams: ${securityParams}`);
	            resolve();
	        });
	    }).then(() => {
	        dispatch(storeSecurityOwnParamsAction(device, securityParams));
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.PENDING));
	    }).catch(error => {
	        dispatch(pairingStatusAction(id, device, _common.BLEEventState.ERROR));
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _connectToDevice(dispatch, getState, device) {
	    const adapterToUse = getState().adapter.api.selectedAdapter;
	    const onCompleted = () => {
	        Promise.resolve(adapterToUse);
	    };
	
	    return new Promise((resolve, reject) => {
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected'));
	        }
	
	        const connectionParameters = {
	            min_conn_interval: 7.5,
	            max_conn_interval: 7.5,
	            slave_latency: 0,
	            conn_sup_timeout: 4000
	        };
	
	        const scanParameters = {
	            active: true,
	            interval: 100,
	            window: 50,
	            timeout: 20
	        };
	
	        const options = {
	            scanParams: scanParameters,
	            connParams: connectionParameters
	        };
	
	        dispatch(deviceConnectAction(device));
	
	        // We add these two so that we are able to resolve this promise if
	        // the device connects or the connection attempt times out. If we do
	        // not resolve the promise we may get a memory leak.
	        adapterToUse.once('deviceConnected', onCompleted);
	        adapterToUse.once('connectTimedOut', onCompleted);
	
	        adapterToUse.connect({ address: device.address, type: device.addressType }, options, error => {
	            if (error) {
	                reject(new Error(error.message));
	            }
	        });
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    }).then(adapterToUse => {
	        adapterToUse.removeListener('deviceConnected', onCompleted);
	        adapterToUse.removeListener('connectTimedOut', onCompleted);
	    });
	}
	
	function _disconnectFromDevice(dispatch, getState, device) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected'));
	        }
	
	        adapterToUse.disconnect(device.instanceId, (error, device) => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve(device);
	            }
	        });
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _cancelConnect(dispatch, getState) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error(`No adapter selected`));
	            return;
	        }
	
	        dispatch(deviceCancelConnectAction());
	
	        adapterToUse.cancelConnect(error => {
	            if (error) {
	                reject(new Error(error.message));
	            }
	
	            resolve();
	        });
	    }).then(device => {
	        dispatch(deviceConnectCanceledAction());
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function adapterOpenedAction(adapter) {
	    return {
	        type: ADAPTER_OPENED,
	        adapter
	    };
	}
	
	function adapterOpenAction(adapter) {
	    return {
	        type: ADAPTER_OPEN,
	        adapter
	    };
	}
	
	function adapterClosedAction(adapter) {
	    return {
	        type: ADAPTER_CLOSED,
	        adapter
	    };
	}
	
	function adapterRemovedAction(adapter) {
	    return {
	        type: ADAPTER_REMOVED,
	        adapter
	    };
	}
	
	function adapterAddedAction(adapter) {
	    return {
	        type: ADAPTER_ADDED,
	        adapter
	    };
	}
	
	function adapterStateChangedAction(adapter, state) {
	    return {
	        type: ADAPTER_STATE_CHANGED,
	        adapter,
	        state
	    };
	}
	
	function connectionParamsUpdatedAction(device) {
	    return {
	        type: DEVICE_CONNECTION_PARAMS_UPDATED,
	        device
	    };
	}
	
	function connectionParamUpdateStatusAction(id, device, status) {
	    return {
	        type: DEVICE_CONNECTION_PARAM_UPDATE_STATUS,
	        id,
	        device,
	        status
	    };
	}
	
	function pairingStatusAction(id, device, status, ownSecurityParams, peerSecurityParams) {
	    return {
	        type: DEVICE_PAIRING_STATUS,
	        id: id,
	        device,
	        status,
	        ownSecurityParams,
	        peerSecurityParams
	    };
	}
	
	function authKeyStatusAction(id, device, status) {
	    return {
	        type: DEVICE_AUTHKEY_STATUS,
	        id,
	        device,
	        status
	    };
	}
	
	function deviceDiscoveredAction(device) {
	    return {
	        type: DEVICE_DISCOVERED,
	        device
	    };
	}
	
	function deviceConnectAction(device) {
	    return {
	        type: DEVICE_CONNECT,
	        device
	    };
	}
	
	function deviceConnectedAction(device) {
	    return {
	        type: DEVICE_CONNECTED,
	        device
	    };
	}
	
	function deviceConnectTimeoutAction(deviceAddress) {
	    return {
	        type: DEVICE_CONNECT_TIMEOUT,
	        deviceAddress
	    };
	}
	
	function scanTimeoutAction(adapter) {
	    return {
	        type: ADAPTER_SCAN_TIMEOUT,
	        adapter
	    };
	}
	
	function advertiseTimeoutAction(adapter) {
	    return {
	        type: ADAPTER_ADVERTISEMENT_TIMEOUT,
	        adapter
	    };
	}
	
	function deviceAuthErrorOccuredAction(device) {
	    return {
	        type: DEVICE_AUTH_ERROR_OCCURED,
	        device
	    };
	}
	
	function deviceAuthSuccessOccuredAction(device) {
	    return {
	        type: DEVICE_AUTH_SUCCESS_OCCURED,
	        device
	    };
	}
	
	function deviceSecurityRequestTimedOutAction(device) {
	    return {
	        type: DEVICE_SECURITY_REQUEST_TIMEOUT,
	        device
	    };
	}
	
	function deviceDisconnectedAction(device, reason) {
	    return {
	        type: DEVICE_DISCONNECTED,
	        device,
	        reason
	    };
	}
	
	function deviceConnectCanceledAction() {
	    return {
	        type: DEVICE_CONNECT_CANCELED
	    };
	}
	
	function deviceCancelConnectAction() {
	    return {
	        type: DEVICE_CANCEL_CONNECT
	    };
	}
	
	function deviceConnParamUpdateRequestAction(device, requestedConnectionParams) {
	    return {
	        type: DEVICE_CONNECTION_PARAM_UPDATE_REQUEST,
	        device,
	        requestedConnectionParams
	    };
	}
	
	function passkeyDisplayAction(device, matchRequest, passkey, receiveKeypress) {
	    return {
	        type: DEVICE_PASSKEY_DISPLAY,
	        device,
	        matchRequest,
	        passkey,
	        receiveKeypress
	    };
	}
	
	function authKeyRequestAction(device, keyType, sendKeypress) {
	    return {
	        type: DEVICE_AUTHKEY_REQUEST,
	        device,
	        keyType,
	        sendKeypress
	    };
	}
	
	function lescOobRequestAction(device, ownOobData) {
	    return {
	        type: DEVICE_LESC_OOB_REQUEST,
	        device,
	        ownOobData
	    };
	}
	
	function securityRequestAction(device, params) {
	    return {
	        type: DEVICE_SECURITY_REQUEST,
	        device,
	        params
	    };
	}
	
	function pairWithDeviceAction(device) {
	    return {
	        type: DEVICE_INITIATE_PAIRING,
	        device
	    };
	}
	
	function addBondInfo(device, params) {
	    return {
	        type: DEVICE_ADD_BOND_INFO,
	        device,
	        params
	    };
	}
	
	function securityChangedAction(device, parameters) {
	    return {
	        type: DEVICE_SECURITY_CHANGED,
	        device,
	        parameters
	    };
	}
	
	function attributeValueChangedAction(attribute, value) {
	    return {
	        type: ATTRIBUTE_VALUE_CHANGED,
	        attribute,
	        value
	    };
	}
	
	function toggleAutoConnUpdateAction() {
	    return {
	        type: DEVICE_TOGGLE_AUTO_CONN_UPDATE
	    };
	}
	
	function adapterResetPerformedAction(adapter) {
	    return {
	        type: ADAPTER_RESET_PERFORMED,
	        adapter
	    };
	}
	
	function keypressSentAction(eventId, device, keypressType) {
	    return {
	        type: DEVICE_PASSKEY_KEYPRESS_SENT,
	        eventId,
	        device,
	        keypressType
	    };
	}
	
	function keypressReceivedAction(device, keypressType) {
	    return {
	        type: DEVICE_PASSKEY_KEYPRESS_RECEIVED,
	        device,
	        keypressType
	    };
	}
	
	function storeSecurityPeerParamsAction(device, peerParams) {
	    return {
	        type: DEVICE_SECURITY_STORE_PEER_PARAMS,
	        device,
	        peerParams
	    };
	}
	
	function storeSecurityOwnParamsAction(device, ownParams) {
	    return {
	        type: DEVICE_SECURITY_STORE_OWN_PARAMS,
	        device,
	        ownParams
	    };
	}
	
	function disableDeviceEventsAction(deviceAddress) {
	    return {
	        type: DEVICE_DISABLE_EVENTS,
	        deviceAddress
	    };
	}
	
	function enableDeviceEventsAction(deviceAddress) {
	    return {
	        type: DEVICE_ENABLE_EVENTS,
	        deviceAddress
	    };
	}
	
	function findAdapters() {
	    return dispatch => {
	        return _getAdapters(dispatch);
	    };
	}
	
	function programAdapter(adapter) {
	    return (dispatch, getState) => {
	        return _checkProgram(dispatch, getState, adapter);
	    };
	}
	
	function openAdapter(adapter) {
	    return (dispatch, getState) => {
	        return _openAdapter(dispatch, getState, adapter);
	    };
	}
	
	function closeAdapter(adapter) {
	    return dispatch => {
	        return _closeAdapter(dispatch, adapter);
	    };
	}
	
	function connectToDevice(device) {
	    return (dispatch, getState) => {
	        return _connectToDevice(dispatch, getState, device);
	    };
	}
	
	function disconnectFromDevice(device) {
	    return (dispatch, getState) => {
	        return _disconnectFromDevice(dispatch, getState, device);
	    };
	}
	
	function pairWithDevice(id, device, securityParams) {
	    return (dispatch, getState) => {
	        return _pairWithDevice(dispatch, getState, id, device, securityParams);
	    };
	}
	
	function acceptPairing(id, device, securityParams) {
	    return (dispatch, getState) => {
	        return _acceptPairing(dispatch, getState, id, device, securityParams);
	    };
	}
	
	function rejectPairing(id, device) {
	    return (dispatch, getState) => {
	        return _rejectPairing(dispatch, getState, id, device);
	    };
	}
	
	function replyNumericalComparisonMatch(id, device, match) {
	    return (dispatch, getState) => {
	        if (match) {
	            return _replyAuthKey(dispatch, getState, id, device, 'BLE_GAP_AUTH_KEY_TYPE_PASSKEY', null);
	        } else {
	            return _replyAuthKey(dispatch, getState, id, device, 'BLE_GAP_AUTH_KEY_TYPE_NONE', null);
	        }
	    };
	}
	
	function replyAuthKey(id, device, keyType, key) {
	    return (dispatch, getState) => {
	        return _replyAuthKey(dispatch, getState, id, device, keyType, key);
	    };
	}
	
	function replyLescOob(id, device, peerOobData, ownOobData) {
	    return (dispatch, getState) => {
	        return _replyLescOob(dispatch, getState, id, device, peerOobData, ownOobData);
	    };
	}
	
	function sendKeypress(id, device, keypressType) {
	    return (dispatch, getState) => {
	        return _sendKeypress(dispatch, getState, id, device, keypressType);
	    };
	}
	
	function cancelConnect() {
	    return (dispatch, getState) => {
	        return _cancelConnect(dispatch, getState);
	    };
	}
	
	function updateDeviceConnectionParams(id, device, connectionParams) {
	    return (dispatch, getState) => {
	        return _updateDeviceConnectionParams(dispatch, getState, id, device, connectionParams);
	    };
	}
	
	function rejectDeviceConnectionParams(id, device) {
	    return (dispatch, getState) => {
	        return _rejectConnectionParams(dispatch, getState, id, device);
	    };
	}
	
	function toggleAutoConnUpdate() {
	    return toggleAutoConnUpdateAction();
	}
	
	function disableDeviceEvents(deviceAddress) {
	    return disableDeviceEventsAction(deviceAddress);
	}
	
	function enableDeviceEvents(deviceAddress) {
	    return enableDeviceEventsAction(deviceAddress);
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	var _events = __webpack_require__(147);
	
	var _events2 = _interopRequireDefault(_events);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var logger = __webpack_require__(49).logger;
	
	const LOG_UPDATE_INTERVAL = 400;
	
	class LogReader extends _events2.default {
	    constructor() {
	        let updateInterval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : LOG_UPDATE_INTERVAL;
	
	        super();
	        this.updateInterval = updateInterval;
	        this.lastLogEntryId = -1;
	    }
	
	    start() {
	        if (this.interval !== undefined) {
	            this.stop();
	        }
	
	        this.interval = setTimeout(() => {
	            this.triggerUpdate();
	        }, this.updateInterval);
	    }
	
	    stop() {
	        if (this.interval !== undefined) {
	            clearInterval(this.interval);
	        }
	    }
	
	    triggerUpdate() {
	        // TODO: look into optimizing the transport of entries by sending
	        // TODO: the self.state.logEntries array as option to the query
	        // TODO: and let the query implementation add directory to self.state.logEntries.
	        logger.query({ start: this.lastLogEntryId + 1, transport: 'db' }, (err, entries) => {
	            // Use setTimeout instead of setInterval to guarantee that query is not called
	            // too soon since that may lead to duplicate log entries.
	            this.interval = setTimeout(() => {
	                this.triggerUpdate();
	            }, this.updateInterval);
	
	            if (err) {
	                this.emit('error', err);
	                return;
	            }
	
	            if (entries === undefined || entries.length === 0) {
	                return;
	            }
	
	            this.emit('entry', entries);
	
	            // Fetch the latest id received
	            this.lastLogEntryId = entries[entries.length - 1].id;
	        });
	    }
	}
	
	module.exports = { LogReader, logger };

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("immutable");

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = require("nrfconnect-core");

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("react-redux");

/***/ },
/* 8 */
/***/ function(module, exports) {

	module.exports = require("redux");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = asImmutable;
	exports.getInstanceIds = getInstanceIds;
	exports.getImmutableAdapterState = getImmutableAdapterState;
	exports.getImmutableAdapter = getImmutableAdapter;
	exports.getImmutableDevice = getImmutableDevice;
	exports.getImmutableProperties = getImmutableProperties;
	exports.getImmutableService = getImmutableService;
	exports.getImmutableCharacteristic = getImmutableCharacteristic;
	exports.getImmutableDescriptor = getImmutableDescriptor;
	
	var _immutable = __webpack_require__(5);
	
	var _pcBleDriverJs = __webpack_require__(23);
	
	const ImmutableAdapterState = (0, _immutable.Record)({
	    instanceId: null,
	    port: null,
	    serialNumber: null,
	    available: false,
	    scanning: false,
	    advertising: false,
	    connecting: false,
	    address: null,
	    name: null,
	    firmwareVerison: null
	});
	
	const ImmutableAdapter = (0, _immutable.Record)({
	    state: new ImmutableAdapterState(),
	    connectedDevices: (0, _immutable.Map)(),
	    /*Adapter sub-reducers*/
	    deviceDetails: null,
	    serverSetup: null,
	    security: null,
	    isServerSetupApplied: false
	});
	
	const ImmutableDevice = (0, _immutable.Record)({
	    instanceId: null,
	    isConnecting: false, // Used by UI to determine visualize we are connecting
	    connected: false,
	    address: null,
	    addressType: null,
	    advType: null,
	    flags: (0, _immutable.List)(),
	    adData: (0, _immutable.OrderedMap)(),
	    name: null,
	    role: null,
	    minConnectionInterval: null,
	    maxConnectionInterval: null,
	    slaveLatency: null,
	    connectionSupervisionTimeout: null,
	    services: (0, _immutable.List)(),
	    rssi: null,
	    scanResponse: false,
	    bonded: false,
	    securityMode: null,
	    securityLevel: null,
	    isExpanded: false,
	    ownPeriphInitiatedPairingPending: false
	});
	
	const ImmutableProperties = (0, _immutable.Record)({
	    broadcast: false,
	    read: false,
	    writeWoResp: false,
	    write: false,
	    notify: false,
	    indicate: false,
	    authSignedWr: false,
	    reliableWr: false,
	    wrAux: false
	});
	
	const ImmutableService = (0, _immutable.Record)({
	    instanceId: null,
	    deviceInstanceId: null,
	    uuid: null,
	    name: null,
	    handle: null,
	    expanded: false,
	    discoveringChildren: false,
	    children: null
	});
	
	const ImmutableCharacteristic = (0, _immutable.Record)({
	    instanceId: null,
	    serviceInstanceId: null,
	    uuid: null,
	    name: null,
	    declarationHandle: null,
	    valueHandle: null,
	    value: (0, _immutable.List)(),
	    properties: new ImmutableProperties(),
	    readPerm: null,
	    writePerm: null,
	    fixedLength: false,
	    maxLength: null,
	    expanded: false,
	    discoveringChildren: false,
	    children: null,
	    errorMessage: null
	});
	
	const ImmutableDescriptor = (0, _immutable.Record)({
	    instanceId: null,
	    characteristicInstanceId: null,
	    uuid: null,
	    name: null,
	    handle: null,
	    value: (0, _immutable.List)(),
	    readPerm: null,
	    writePerm: null,
	    fixedLength: false,
	    maxLength: null,
	    errorMessage: null
	});
	
	function asImmutable(mutableObject) {
	    // NOTE: No idea why instanceof does not work for some types
	    if (mutableObject.constructor.name === 'AdapterState') {
	        return getImmutableAdapterState(mutableObject);
	    } else if (mutableObject instanceof _pcBleDriverJs.api.Adapter) {
	        return getImmutableAdapter(mutableObject);
	    } else if (mutableObject instanceof _pcBleDriverJs.api.Device) {
	        return getImmutableDevice(mutableObject);
	    } else if (mutableObject instanceof _pcBleDriverJs.api.Service) {
	        return getImmutableService(mutableObject);
	    } else if (mutableObject instanceof _pcBleDriverJs.api.Characteristic) {
	        return getImmutableCharacteristic(mutableObject);
	    } else if (mutableObject instanceof _pcBleDriverJs.api.Descriptor) {
	        return getImmutableDescriptor(mutableObject);
	    } else {
	        throw 'Explode!';
	    }
	}
	
	function getInstanceIds(instanceId) {
	    const instanceIds = {
	        address: null,
	        device: null,
	        service: null,
	        characteristic: null,
	        descriptor: null
	    };
	
	    if (!instanceId) {
	        return instanceIds;
	    }
	
	    const idArray = instanceId.split('.');
	
	    if (idArray.length > 0) {
	        instanceIds.address = idArray[0];
	    }
	
	    if (idArray.length > 1) {
	        instanceIds.device = idArray.slice(0, 2).join('.');
	    }
	
	    if (idArray.length > 2) {
	        instanceIds.service = idArray.slice(0, 3).join('.');
	    }
	
	    if (idArray.length > 3) {
	        instanceIds.characteristic = idArray.slice(0, 4).join('.');
	    }
	
	    if (idArray.length > 4) {
	        instanceIds.descriptor = idArray.slice(0, 5).join('.');
	    }
	
	    return instanceIds;
	}
	
	function getImmutableAdapterState(adapterState) {
	    return new ImmutableAdapterState({
	        instanceId: adapterState.instanceId,
	        port: adapterState.port,
	        serialNumber: adapterState.serialNumber,
	        available: adapterState.available,
	        scanning: adapterState.scanning,
	        advertising: adapterState.advertising,
	        connecting: adapterState.connecting,
	        address: adapterState.address,
	        name: adapterState.name,
	        firmwareVerison: adapterState.firmwareVerison
	    });
	}
	
	function getImmutableAdapter(adapter) {
	    return new ImmutableAdapter({
	        port: adapter.state.port,
	        state: getImmutableAdapterState(adapter.state),
	        connectedDevices: (0, _immutable.Map)(),
	        /*Adapter sub-reducers*/
	        deviceDetails: undefined,
	        serverSetup: undefined,
	        security: undefined
	    });
	}
	
	function getImmutableDevice(device) {
	    return new ImmutableDevice({
	        instanceId: device.instanceId,
	        connected: device.connected,
	        address: device.address,
	        addressType: device.addressType,
	        name: device.name,
	        advType: device.advType,
	        adData: (0, _immutable.Map)(device.adData),
	        flags: (0, _immutable.List)(device.flags),
	        role: device.role,
	        minConnectionInterval: device.minConnectionInterval,
	        maxConnectionInterval: device.maxConnectionInterval,
	        slaveLatency: device.slaveLatency,
	        connectionSupervisionTimeout: device.connectionSupervisionTimeout,
	        services: (0, _immutable.List)(device.services),
	        rssi: device.rssi,
	        scanResponse: device.scanResponse,
	        ownPeriphInitiatedPairingPending: device.ownPeriphInitiatedPairingPending
	    });
	}
	
	function getImmutableProperties(properties) {
	    return new ImmutableProperties({
	        broadcast: properties.broadcast,
	        read: properties.read,
	        writeWoResp: properties.writeWoResp || properties.write_wo_resp,
	        write: properties.write,
	        notify: properties.notify,
	        indicate: properties.indicate,
	        authSignedWr: properties.authSignedWr || properties.auth_signed_wr,
	        reliableWr: properties.reliableWr || properties.reliable_wr,
	        wrAux: properties.wrAux ? properties.wrAux : properties.wr_aux
	    });
	}
	
	function getImmutableService(service) {
	    return new ImmutableService({
	        instanceId: service.instanceId,
	        deviceInstanceId: service.deviceInstanceId,
	        uuid: service.uuid,
	        name: service.name,
	        handle: service.startHandle,
	        children: service.children
	    });
	}
	
	function getImmutableCharacteristic(characteristic) {
	    const properties = characteristic.properties || {};
	    return new ImmutableCharacteristic({
	        instanceId: characteristic.instanceId,
	        serviceInstanceId: characteristic.serviceInstanceId,
	        uuid: characteristic.uuid,
	        name: characteristic.name,
	        declarationHandle: characteristic.declarationHandle,
	        valueHandle: characteristic.valueHandle,
	        value: (0, _immutable.List)(characteristic.value),
	        properties: getImmutableProperties(properties),
	        readPerm: characteristic.readPerm,
	        writePerm: characteristic.writePerm,
	        fixedLength: characteristic.fixedLength,
	        maxLength: characteristic.maxLength,
	        children: characteristic.children
	    });
	}
	
	function getImmutableDescriptorValue(descriptor) {
	    const uuid = descriptor.uuid,
	          value = descriptor.value;
	
	
	    const descriptorInstanceIds = getInstanceIds(descriptor.instanceId);
	
	    if (descriptorInstanceIds.device === 'local.server' && uuid === '2902') {
	        let cccdValue = new _immutable.Map();
	        for (let deviceInstanceId in value) {
	            cccdValue = cccdValue.set(deviceInstanceId, (0, _immutable.List)(value[deviceInstanceId]));
	        }
	
	        return cccdValue;
	    }
	
	    return (0, _immutable.List)(value);
	}
	
	function getImmutableDescriptor(descriptor) {
	    const value = getImmutableDescriptorValue(descriptor);
	    return new ImmutableDescriptor({
	        instanceId: descriptor.instanceId,
	        characteristicInstanceId: descriptor.characteristicInstanceId,
	        uuid: descriptor.uuid,
	        name: descriptor.name,
	        handle: descriptor.handle,
	        value: value,
	        readPerm: descriptor.readPerm,
	        writePerm: descriptor.writePerm,
	        fixedLength: descriptor.fixedLength,
	        maxLength: descriptor.maxLength
	    });
	}

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.NO_FORMAT = exports.TEXT = undefined;
	exports.uuid16bitServiceDefinitions = uuid16bitServiceDefinitions;
	exports.uuid128bitServiceDefinitions = uuid128bitServiceDefinitions;
	exports.uuid128bitDescriptorDefinitions = uuid128bitDescriptorDefinitions;
	exports.uuidServiceDefinitions = uuidServiceDefinitions;
	exports.uuidCharacteristicDefinitions = uuidCharacteristicDefinitions;
	exports.uuidDescriptorDefinitions = uuidDescriptorDefinitions;
	exports.uuid16bitDefinitions = uuid16bitDefinitions;
	exports.uuid128bitDefinitions = uuid128bitDefinitions;
	exports.uuidDefinitions = uuidDefinitions;
	exports.getUuidName = getUuidName;
	exports.getUuidByName = getUuidByName;
	exports.getPrettyUuid = getPrettyUuid;
	exports.getUuidFormat = getUuidFormat;
	exports.getUuidDefinitionsFilePath = getUuidDefinitionsFilePath;
	
	var _definitions = __webpack_require__(114);
	
	var Definitions = _interopRequireWildcard(_definitions);
	
	var _electron = __webpack_require__(13);
	
	var _path = __webpack_require__(56);
	
	var _path2 = _interopRequireDefault(_path);
	
	var _fs = __webpack_require__(22);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const TEXT = exports.TEXT = Definitions.TEXT;
	const NO_FORMAT = exports.NO_FORMAT = Definitions.NO_FORMAT;
	
	let userDataDir = _electron.remote.getGlobal('userDataDir');
	let uuidDefinitionsFilePath = _path2.default.join(userDataDir, 'uuid_definitions.json');
	let RemoteDefinitions = __webpack_require__(33);
	
	let customsFileErrorMessageShown = false;
	
	confirmUserUUIDsExist();
	
	function loadRemote() {
	    let data;
	
	    try {
	        data = _fs2.default.readFileSync(uuidDefinitionsFilePath, 'utf-8');
	        RemoteDefinitions = JSON.parse(data);
	    } catch (err) {
	        RemoteDefinitions = __webpack_require__(33);
	
	        if (!customsFileErrorMessageShown && data !== '') {
	            customsFileErrorMessageShown = true;
	            _logging.logger.info(`There was an error parsing the custom UUID definitions file: ${uuidDefinitionsFilePath}`);
	            _logging.logger.debug(`UUID definitions file error: ${err}`);
	        }
	    }
	}
	
	function uuid16bitServiceDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid16bitServiceDefinitions, RemoteDefinitions.uuid16bitServiceDefinitions);
	}
	
	function uuid128bitServiceDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid128bitServiceDefinitions, RemoteDefinitions.uuid128bitServiceDefinitions);
	}
	
	function uuid128bitDescriptorDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, RemoteDefinitions.uuid128bitDescriptorDefinitions);
	}
	
	function uuidServiceDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid16bitServiceDefinitions, Definitions.uuid128bitServiceDefinitions, RemoteDefinitions.uuid16bitServiceDefinitions, RemoteDefinitions.uuid128bitServiceDefinitions);
	}
	
	function uuidCharacteristicDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid16bitCharacteristicDefinitions, Definitions.uuid128bitCharacteristicDefinitions, RemoteDefinitions.uuid16bitCharacteristicDefinitions, RemoteDefinitions.uuid128bitCharacteristicDefinitions);
	}
	
	function uuidDescriptorDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid16bitDescriptorDefinitions, RemoteDefinitions.uuid16bitDescriptorDefinitions, uuid128bitDescriptorDefinitions());
	}
	
	function uuid16bitDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid16bitServiceDefinitions, Definitions.uuid16bitCharacteristicDefinitions, Definitions.uuid16bitDescriptorDefinitions, RemoteDefinitions.uuid16bitServiceDefinitions, RemoteDefinitions.uuid16bitCharacteristicDefinitions, RemoteDefinitions.uuid16bitDescriptorDefinitions);
	}
	
	function uuid128bitDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, Definitions.uuid128bitServiceDefinitions, Definitions.uuid128bitCharacteristicDefinitions, RemoteDefinitions.uuid128bitServiceDefinitions, RemoteDefinitions.uuid128bitCharacteristicDefinitions, uuid128bitDescriptorDefinitions());
	}
	
	function uuidDefinitions() {
	    loadRemote();
	
	    return Object.assign({}, uuid16bitDefinitions(), uuid128bitDefinitions());
	}
	
	function getLookupUUID(uuid) {
	    let lookupUuid = uuid.toUpperCase();
	
	    if (lookupUuid[1] === 'X') {
	        lookupUuid = lookupUuid.slice(2);
	    }
	
	    return lookupUuid.replace(/-/g, '');
	}
	
	// TODO: look into using a database for storing the services UUID's. Also look into importing them from the Bluetooth pages.
	// TODO: Also look into reusing code from the Android MCP project:
	// TODO: http://projecttools.nordicsemi.no/stash/projects/APPS-ANDROID/repos/nrf-master-control-panel/browse/app/src/main/java/no/nordicsemi/android/mcp/database/init
	// TODO: http://projecttools.nordicsemi.no/stash/projects/APPS-ANDROID/repos/nrf-master-control-panel/browse/app/src/main/java/no/nordicsemi/android/mcp/database/DatabaseHelper.java
	function getUuidName(uuid) {
	    const lookupUuid = getLookupUUID(uuid);
	    const uuidDefs = uuidDefinitions();
	
	    if (uuidDefs[lookupUuid]) {
	        return uuidDefs[lookupUuid].name;
	    }
	
	    return uuid;
	}
	
	function getUuidByName(name) {
	    const uuidDefs = uuidDefinitions();
	
	    for (let uuid in uuidDefs) {
	        if (uuidDefs.hasOwnProperty(uuid)) {
	            if (uuidDefs[uuid].name === name) {
	                return uuid;
	            }
	        }
	    }
	}
	
	function getPrettyUuid(uuid) {
	    const insertHyphen = (string, index) => {
	        return string.substr(0, index) + '-' + string.substr(index);
	    };
	
	    if (uuid.length === 4) {
	        return uuid.toUpperCase();
	    }
	
	    uuid = insertHyphen(uuid, 20);
	    uuid = insertHyphen(uuid, 16);
	    uuid = insertHyphen(uuid, 12);
	    uuid = insertHyphen(uuid, 8);
	
	    return uuid.toUpperCase();
	}
	
	function getUuidFormat(uuid) {
	    if (!uuid) {
	        return Definitions.NO_FORMAT;
	    }
	
	    const lookupUuid = getLookupUUID(uuid);
	
	    const uuidDefs = uuidDefinitions();
	
	    if (uuidDefs[lookupUuid]) {
	        const format = uuidDefs[lookupUuid].format;
	
	        if (format) {
	            return format.toUpperCase();
	        }
	
	        return Definitions.NO_FORMAT;
	    }
	
	    return Definitions.NO_FORMAT;
	}
	
	function confirmUserUUIDsExist() {
	    if (!_fs2.default.existsSync(uuidDefinitionsFilePath)) {
	        var uuid_definitions = __webpack_require__(33);
	
	        _fs2.default.writeFile(uuidDefinitionsFilePath, JSON.stringify(uuid_definitions, null, 4), function (err) {
	            if (err) {
	                _logging.logger.debug('An error ocurred creating the file ' + err.message);
	                return;
	            }
	        });
	    }
	
	    _logging.logger.info(`Application data folder: ${_path2.default.dirname(uuidDefinitionsFilePath)}`);
	}
	
	function getUuidDefinitionsFilePath() {
	    return uuidDefinitionsFilePath;
	}

/***/ },
/* 11 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	// Utility functions
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getSelectedAdapter = getSelectedAdapter;
	function getSelectedAdapter(state) {
	    const selectedAdapter = state.adapter.selectedAdapter;
	
	    if (selectedAdapter !== undefined && selectedAdapter !== null) {
	        return state.adapter.getIn(['adapters', selectedAdapter]);
	    }
	}
	
	// TODO: get clarity regarding what these states actually means...
	const BLEEventState = exports.BLEEventState = {
	    UNKNOWN: 0,
	    ERROR: 1, // State used when an error has occured
	    REJECTED: 2, // State used for connection params request that has been rejected
	    DISCONNECTED: 3, // If device has disconnected, set to this state.
	    INDETERMINATE: 4, // State is not determined yet, this is the start state for all events.
	    SUCCESS: 5, // Event has been processed and has succeeded
	    IGNORED: 6, // State used for events that the user has chosen to ignore
	    PENDING: 7 };
	
	const BLEEventType = exports.BLEEventType = {
	    USER_INITIATED_CONNECTION_UPDATE: 0,
	    PEER_CENTRAL_INITIATED_CONNECTION_UPDATE: 1,
	    PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE: 2,
	    USER_INITIATED_PAIRING: 3,
	    PEER_INITIATED_PAIRING: 4,
	    PASSKEY_DISPLAY: 5,
	    PASSKEY_REQUEST: 6,
	    NUMERICAL_COMPARISON: 7,
	    LEGACY_OOB_REQUEST: 8,
	    LESC_OOB_REQUEST: 9
	};

/***/ },
/* 12 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.showErrorDialog = showErrorDialog;
	exports.addError = addError;
	exports.closeErrorDialog = closeErrorDialog;
	exports.toggleDebug = toggleDebug;
	const CLOSE = exports.CLOSE = 'ERROR_CLOSE_ERROR_DIALOG';
	const SHOW_ERROR_MESSAGES = exports.SHOW_ERROR_MESSAGES = 'ERROR_SHOW_ERROR_MESSAGES';
	const ADD_ERROR_MESSAGE = exports.ADD_ERROR_MESSAGE = 'ERROR_ADD_ERROR_MESSAGE';
	const TOGGLE_DEBUG = exports.TOGGLE_DEBUG = 'ERROR_TOGGLE_DEBUG';
	
	function closeErrorDialogAction() {
	    return {
	        type: CLOSE
	    };
	}
	
	function showErrorDialogAction(errors) {
	    return {
	        type: SHOW_ERROR_MESSAGES,
	        errors
	    };
	}
	
	function addErrorAction(error) {
	    return {
	        type: ADD_ERROR_MESSAGE,
	        error
	    };
	}
	
	function toggleDebugAction() {
	    return {
	        type: TOGGLE_DEBUG
	    };
	}
	
	// Exported action creators
	function showErrorDialog(errors) {
	    return showErrorDialogAction(errors);
	}
	
	function addError(error) {
	    return addErrorAction(error);
	}
	
	function closeErrorDialog() {
	    return closeErrorDialogAction();
	}
	
	function toggleDebug() {
	    return toggleDebugAction();
	}

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = require("electron");

/***/ },
/* 14 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.toHexString = toHexString;
	exports.hexStringToArray = hexStringToArray;
	exports.hexArrayToText = hexArrayToText;
	exports.textToHexArray = textToHexArray;
	exports.textToHexText = textToHexText;
	exports.hexArrayToHexText = hexArrayToHexText;
	function toHexString(value) {
	    if (Array.isArray(value)) {
	        return arrayToHexString(value);
	    } else if (typeof value === 'number') {
	        return intToHexString(value);
	    }
	
	    return '';
	}
	
	function arrayToHexString(value) {
	    const hexValueStringArray = value.map(intToHexString);
	    return hexValueStringArray.join('-');
	}
	
	function intToHexString(value) {
	    return ('0' + value.toString(16)).slice(-2).toUpperCase();
	}
	
	function hexStringToArray(hexString) {
	    let result = [];
	    while (hexString.length >= 2) {
	        const element = parseInt(hexString.substring(0, 2), 16);
	        result.push(element);
	        hexString = hexString.substring(2, hexString.length);
	    }
	
	    return result;
	}
	
	function hexArrayToText(value) {
	    let str = '';
	
	    for (let c in value) {
	        str += String.fromCharCode(parseInt(value[c]));
	    }
	
	    return str;
	}
	
	function textToHexArray(value) {
	    let result = [];
	
	    for (var i = 0, l = value.length; i < l; i++) {
	        let hex = Number(value.charCodeAt(i)).toString(16);
	        result.push(hex);
	    }
	
	    return result;
	}
	
	function textToHexText(value) {
	    return hexArrayToHexText(textToHexArray(value));
	}
	
	function hexArrayToHexText(value) {
	    let parsedValue = value;
	
	    if (value.constructor === Array) {
	        // Convert from array [1, 10, 16, 20] to hex string "01-0A-10-14"
	        const hexValueStringArray = value.map(decimalNumber => ('0' + decimalNumber.toString(16)).slice(-2));
	        parsedValue = hexValueStringArray.join(' ').toUpperCase();
	    }
	
	    return parsedValue;
	}

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ERROR_OCCURED = exports.ADVERTISING_STOPPED = exports.ADVERTISING_STARTED = exports.SET_ADVDATA_COMPLETED = exports.SET_ADVDATA = exports.APPLY_CHANGES = exports.HIDE_DIALOG = exports.SHOW_DIALOG = exports.DELETE_SCANRSP_ENTRY = exports.DELETE_ADVDATA_ENTRY = exports.ADD_SCANRSP_ENTRY = exports.ADD_ADVDATA_ENTRY = undefined;
	exports.addAdvEntry = addAdvEntry;
	exports.deleteAdvData = deleteAdvData;
	exports.addScanRsp = addScanRsp;
	exports.deleteScanRsp = deleteScanRsp;
	exports.showSetupDialog = showSetupDialog;
	exports.hideSetupDialog = hideSetupDialog;
	exports.applyChanges = applyChanges;
	exports.setAdvertisingData = setAdvertisingData;
	exports.toggleAdvertising = toggleAdvertising;
	
	var _common = __webpack_require__(11);
	
	const ADD_ADVDATA_ENTRY = exports.ADD_ADVDATA_ENTRY = 'ADVSETUP_ADD_ADVDATA_ENTRY';
	const ADD_SCANRSP_ENTRY = exports.ADD_SCANRSP_ENTRY = 'ADVSETUP_ADD_SCANRSP_ENTRY';
	const DELETE_ADVDATA_ENTRY = exports.DELETE_ADVDATA_ENTRY = 'ADVSETUP_DELETE_ADVDATA_ENTRY';
	const DELETE_SCANRSP_ENTRY = exports.DELETE_SCANRSP_ENTRY = 'ADVSETUP_DELETE_SCANRSP_ENTRY';
	const SHOW_DIALOG = exports.SHOW_DIALOG = 'ADVSETUP_SHOW_DIALOG';
	const HIDE_DIALOG = exports.HIDE_DIALOG = 'ADVSETUP_HIDE_DIALOG';
	const APPLY_CHANGES = exports.APPLY_CHANGES = 'ADVSETUP_APPLY_CHANGES';
	const SET_ADVDATA = exports.SET_ADVDATA = 'ADVSETUP_SET_ADVDATA';
	const SET_ADVDATA_COMPLETED = exports.SET_ADVDATA_COMPLETED = 'ADVSETUP_SET_ADVDATA_COMPLETED';
	const ADVERTISING_STARTED = exports.ADVERTISING_STARTED = 'ADVSETUP_ADVERTISING_STARTED';
	const ADVERTISING_STOPPED = exports.ADVERTISING_STOPPED = 'ADVSETUP_ADVERTISING_STOPPED';
	const ERROR_OCCURED = exports.ERROR_OCCURED = 'ADVSETUP_ERROR_OCCURED';
	
	// Internal functions
	function _setAdvertisingData(dispatch, getState) {
	    const adapter = getState().adapter.api.selectedAdapter;
	    const advertising = getState().advertising;
	
	    return new Promise((resolve, reject) => {
	        const advData = {};
	        const scanResp = {};
	
	        if (adapter === null || adapter === undefined) {
	            reject('No adapter is selected.');
	        }
	
	        advertising.advDataEntries.forEach(entry => {
	            advData[entry.typeApi] = entry.formattedValue;
	        });
	
	        advertising.scanResponseEntries.forEach(entry => {
	            scanResp[entry.typeApi] = entry.formattedValue;
	        });
	
	        adapter.setAdvertisingData(advData, scanResp, error => {
	            if (error) {
	                dispatch(setAdvertisingCompletedAction(error.message));
	                reject(error);
	            } else {
	                dispatch(setAdvertisingCompletedAction(''));
	                resolve();
	            }
	        });
	    }).catch(error => {
	        dispatch(setAdvertisingCompletedAction(error.message));
	    });
	}
	
	function _startAdvertising(dispatch, getState) {
	    const adapter = getState().adapter.api.selectedAdapter;
	
	    return _setAdvertisingData(dispatch, getState).then(() => {
	        return new Promise((resolve, reject) => {
	            const options = {
	                interval: 100,
	                timeout: 0
	            };
	
	            if (adapter === null || adapter === undefined) {
	                reject('No adapter is selected.');
	            }
	
	            adapter.startAdvertising(options, error => {
	                if (error) {
	                    reject(error);
	                } else {
	                    resolve();
	                }
	            });
	        });
	    }).then(() => {
	        dispatch(advertisingStartedAction());
	    }).catch(error => {
	        dispatch(advertisingErrorAction(error));
	    });
	}
	
	function _stopAdvertising(dispatch, getState) {
	    return new Promise((resolve, reject) => {
	        const adapter = getState().adapter.api.selectedAdapter;
	
	        if (adapter === null) {
	            reject('No adapter is selected.');
	        }
	
	        adapter.stopAdvertising(error => {
	            if (error) {
	                reject(error);
	            } else {
	                resolve();
	            }
	        });
	    }).then(() => {
	        dispatch(advertisingStoppedAction());
	    }).catch(error => {
	        dispatch(advertisingErrorAction(error));
	    });
	}
	
	// Action object functions
	function advertisingErrorAction(error) {
	    return {
	        type: ERROR_OCCURED,
	        error
	    };
	}
	
	function addAdvEntryAction(entry) {
	    return {
	        type: ADD_ADVDATA_ENTRY,
	        entry
	    };
	}
	
	function addScanRspAction(entry) {
	    return {
	        type: ADD_SCANRSP_ENTRY,
	        entry
	    };
	}
	
	function deleteAdvDataAction(id) {
	    return {
	        type: DELETE_ADVDATA_ENTRY,
	        id
	    };
	}
	
	function deleteScanRspAction(id) {
	    return {
	        type: DELETE_SCANRSP_ENTRY,
	        id
	    };
	}
	
	function showDialogAction() {
	    return {
	        type: SHOW_DIALOG
	    };
	}
	
	function hideDialogAction() {
	    return {
	        type: HIDE_DIALOG
	    };
	}
	
	function applyChangesAction() {
	    return {
	        type: APPLY_CHANGES
	    };
	}
	
	function setAdvertisingCompletedAction(status) {
	    return {
	        type: SET_ADVDATA_COMPLETED,
	        status
	    };
	}
	
	function advertisingStartedAction() {
	    return {
	        type: ADVERTISING_STARTED
	    };
	}
	
	function advertisingStoppedAction() {
	    return {
	        type: ADVERTISING_STOPPED
	    };
	}
	
	// Exported action starters
	function addAdvEntry(entry) {
	    return addAdvEntryAction(entry);
	}
	
	function deleteAdvData(id) {
	    return deleteAdvDataAction(id);
	}
	
	function addScanRsp(entry) {
	    return addScanRspAction(entry);
	}
	
	function deleteScanRsp(id) {
	    return deleteScanRspAction(id);
	}
	
	function showSetupDialog() {
	    return showDialogAction();
	}
	
	function hideSetupDialog() {
	    return hideDialogAction();
	}
	
	function applyChanges() {
	    return applyChangesAction();
	}
	
	function setAdvertisingData() {
	    return (dispatch, getState) => {
	        const selectedAdapter = (0, _common.getSelectedAdapter)(getState());
	
	        if (selectedAdapter.state) {
	            if (selectedAdapter.state.available) {
	                return _setAdvertisingData(dispatch, getState);
	            } else {
	                return Promise.reject('adapter is not available, cannot set advertising data');
	            }
	        } else {
	            return Promise.reject('No adapter selected, or adapter is missing state. Failing.');
	        }
	    };
	}
	
	function toggleAdvertising() {
	    return (dispatch, getState) => {
	        const selectedAdapter = (0, _common.getSelectedAdapter)(getState());
	
	        if (selectedAdapter.state) {
	            if (selectedAdapter.state.advertising && selectedAdapter.state.available) {
	                return _stopAdvertising(dispatch, getState);
	            } else if (!selectedAdapter.state.advertising && selectedAdapter.state.available) {
	                return _startAdvertising(dispatch, getState);
	            } else {
	                return Promise.reject('advertisingInProgress and adapterIsOpen is in a combination that makes it impossible to toggle advertising.');
	            }
	        } else {
	            return Promise.reject('No adapter selected, or adapter is missing state. Failing.');
	        }
	    };
	}

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ERROR_OCCURED = exports.COMPLETED_READING_ATTRIBUTE = exports.COMPLETED_WRITING_ATTRIBUTE = exports.READ_DESCRIPTOR = exports.WRITE_DESCRIPTOR = exports.READ_CHARACTERISTIC = exports.WRITE_CHARACTERISTIC = exports.SET_ATTRIBUTE_EXPANDED = exports.DISCOVERED_DEVICE_NAME = exports.DISCOVERED_ATTRIBUTES = exports.DISCOVERING_ATTRIBUTES = exports.SELECT_COMPONENT = undefined;
	exports.selectComponent = selectComponent;
	exports.discoverServices = discoverServices;
	exports.discoverDeviceName = discoverDeviceName;
	exports.discoverCharacteristics = discoverCharacteristics;
	exports.discoverDescriptors = discoverDescriptors;
	exports.discoverCharacteristicsAndDescriptors = discoverCharacteristicsAndDescriptors;
	exports.setAttributeExpanded = setAttributeExpanded;
	exports.readCharacteristic = readCharacteristic;
	exports.writeCharacteristic = writeCharacteristic;
	exports.readDescriptor = readDescriptor;
	exports.writeDescriptor = writeDescriptor;
	exports.openCustomUuidFile = openCustomUuidFile;
	
	var _api = __webpack_require__(9);
	
	var _fileUtil = __webpack_require__(51);
	
	var _errorDialogActions = __webpack_require__(12);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _logging = __webpack_require__(4);
	
	const SELECT_COMPONENT = exports.SELECT_COMPONENT = 'DEVICE_DETAILS_SELECT_COMPONENT';
	
	const DISCOVERING_ATTRIBUTES = exports.DISCOVERING_ATTRIBUTES = 'DEVICE_DETAILS_DISCOVERING_ATTRIBUTES';
	const DISCOVERED_ATTRIBUTES = exports.DISCOVERED_ATTRIBUTES = 'DEVICE_DETAILS_DISCOVERED_ATTRIBUTES';
	const DISCOVERED_DEVICE_NAME = exports.DISCOVERED_DEVICE_NAME = 'DEVICE_DETAILS_DISCOVERED_DEVICE_NAME';
	
	const SET_ATTRIBUTE_EXPANDED = exports.SET_ATTRIBUTE_EXPANDED = 'DEVICE_DETAILS_SET_ATTRIBUTE_EXPANDED';
	
	const WRITE_CHARACTERISTIC = exports.WRITE_CHARACTERISTIC = 'DEVICE_DETAILS_WRITE_CHARACTERISTIC';
	const READ_CHARACTERISTIC = exports.READ_CHARACTERISTIC = 'DEVICE_DETAILS_READ_CHARACTERISTIC';
	const WRITE_DESCRIPTOR = exports.WRITE_DESCRIPTOR = 'DEVICE_DETAILS_WRITE_DESCRIPTOR';
	const READ_DESCRIPTOR = exports.READ_DESCRIPTOR = 'DEVICE_DETAILS_READ_DESCRIPTOR';
	
	const COMPLETED_WRITING_ATTRIBUTE = exports.COMPLETED_WRITING_ATTRIBUTE = 'DEVICE_DETAILS_COMPLETED_WRITING_ATTRIBUTE';
	const COMPLETED_READING_ATTRIBUTE = exports.COMPLETED_READING_ATTRIBUTE = 'DEVICE_DETAILS_COMPLETED_READING_ATTRIBUTE';
	
	const ERROR_OCCURED = exports.ERROR_OCCURED = 'DEVICE_DETAILS_ERROR_OCCURED';
	
	function _discoverServices(dispatch, getState, device) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            dispatch((0, _errorDialogActions.showErrorDialog)(new Error(`No adapter selected`)));
	            return;
	        }
	
	        dispatch(discoveringAttributesAction(device));
	
	        adapterToUse.getServices(device.instanceId, (error, services) => {
	            if (error) {
	                reject(new Error(error.message));
	            }
	
	            resolve(services);
	        });
	    }).then(services => {
	        dispatch(discoveredAttributesAction(device, services));
	        _discoverDeviceName(dispatch, getState, device, services);
	    }).catch(error => {
	        dispatch(discoveredAttributesAction(device));
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _discoverDeviceName(dispatch, getState, device, services) {
	
	    return new Promise((resolve, reject) => {
	        for (let service of services) {
	            if (service.uuid === (0, _uuid_definitions.getUuidByName)('Generic Access')) {
	                resolve(service);
	            }
	        }
	
	        reject(new Error('Could not find GAP service'));
	    }).then(gapService => {
	        return _discoverCharacteristicsAndDescriptors(dispatch, getState, gapService);
	    }).then(characteristics => {
	        for (let characteristic of characteristics) {
	            if (characteristic.uuid === (0, _uuid_definitions.getUuidByName)('Device Name')) {
	                return _readCharacteristic(dispatch, getState, characteristic);
	            }
	        }
	    }).then(value => {
	        dispatch(discoveredDeviceNameAction(device, value));
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _discoverCharacteristics(dispatch, getState, service) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error(`No adapter selected`));
	        }
	
	        dispatch(discoveringAttributesAction(service));
	
	        adapterToUse.getCharacteristics(service.instanceId, (error, characteristics) => {
	            if (error) {
	                dispatch(discoveredAttributesAction(service));
	                reject(new Error(error.message));
	            }
	
	            resolve(characteristics);
	        });
	    }).then(characteristics => {
	        dispatch(discoveredAttributesAction(service, characteristics));
	        return characteristics;
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _discoverDescriptors(dispatch, getState, characteristic) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error(`No adapter selected`));
	        }
	
	        dispatch(discoveringAttributesAction(characteristic));
	
	        adapterToUse.getDescriptors(characteristic.instanceId, (error, descriptors) => {
	            if (error) {
	                dispatch(discoveredAttributesAction(characteristic));
	                reject(new Error(error.message));
	            }
	
	            resolve(descriptors);
	        });
	    }).then(descriptors => {
	        dispatch(discoveredAttributesAction(characteristic, descriptors));
	        return new Promise((resolve, reject) => resolve(characteristic));
	    }).catch(error => {
	        console.log(error);
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _discoverCharacteristicsAndDescriptors(dispatch, getState, service) {
	    let retvalCharacteristics;
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error(`No adapter selected`));
	        }
	
	        dispatch(discoveringAttributesAction(service));
	
	        adapterToUse.getCharacteristics(service.instanceId, (error, characteristics) => {
	            if (error) {
	                dispatch(discoveredAttributesAction(service));
	                reject(new Error(error.message));
	            }
	
	            resolve(characteristics);
	        });
	    }).then(characteristics => {
	        dispatch(discoveredAttributesAction(service, characteristics));
	        retvalCharacteristics = characteristics;
	        return new Promise((resolve, reject) => {
	            resolve(characteristics);
	        });
	    }).then(characteristics => {
	        let promise = Promise.resolve();
	        for (let characteristic of characteristics) {
	            promise = promise.then(() => {
	                return _getDiscoverDescriptorsPromise()(dispatch, getState, characteristic);
	            });
	        }
	
	        return promise.then();
	    }).then(() => {
	        return retvalCharacteristics;
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _getDiscoverDescriptorsPromise() {
	    return _discoverDescriptors;
	}
	
	function _setAttributeExpanded(dispatch, getState, attribute, value) {
	    const state = getState();
	    const adapterToUse = state.adapter.api.selectedAdapter;
	
	    if (adapterToUse === null) {
	        dispatch((0, _errorDialogActions.showErrorDialog)(new Error('No adapter selected')));
	        return;
	    }
	
	    const instanceIds = (0, _api.getInstanceIds)(attribute.instanceId);
	    const deviceDetails = state.adapter.getIn(['adapters', state.adapter.selectedAdapter, 'deviceDetails']);
	    const service = deviceDetails.devices.get(instanceIds.device).children.get(instanceIds.service);
	
	    if (instanceIds.characteristic) {
	        const characteristic = service.children.get(instanceIds.characteristic);
	        if (!characteristic.children && !characteristic.expanded && !characteristic.discoveringChildren) {
	            dispatch(discoverDescriptors(characteristic));
	        }
	    } else {
	        if (!service.children && !service.expanded && !service.discoveringChildren) {
	            dispatch(discoverCharacteristicsAndDescriptors(service));
	        }
	    }
	
	    dispatch(setAttributeExpandedAction(attribute, value));
	    dispatch(selectComponentAction(attribute.instanceId));
	}
	
	function _readCharacteristic(dispatch, getState, characteristic) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected'));
	        }
	
	        adapterToUse.readCharacteristicValue(characteristic.instanceId, (error, value) => {
	            if (error) {
	                dispatch(completedReadingAttributeAction(characteristic, null, error));
	                reject(new Error(error.message));
	            }
	
	            resolve(value);
	        });
	    }).then(value => {
	        dispatch(completedReadingAttributeAction(characteristic, value));
	        return value;
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _writeCharacteristic(dispatch, getState, characteristic, value) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected'));
	        }
	
	        let ack;
	        if (characteristic.properties.write === true) {
	            ack = true;
	        } else if (characteristic.properties.writeWoResp === true) {
	            ack = false;
	        } else {
	            ack = true;
	        }
	
	        adapterToUse.writeCharacteristicValue(characteristic.instanceId, value, ack, error => {
	            if (error) {
	                dispatch(completedWritingAttributeAction(characteristic, null, error));
	                reject(new Error(error.message));
	            } else {
	                resolve();
	            }
	        });
	    }).then(() => {
	        dispatch(completedWritingAttributeAction(characteristic, value));
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _readDescriptor(dispatch, getState, descriptor) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected'));
	        }
	
	        adapterToUse.readDescriptorValue(descriptor.instanceId, (error, value) => {
	            if (error) {
	                dispatch(completedReadingAttributeAction(descriptor, null, error));
	                reject(new Error(error.message));
	            }
	
	            resolve(value);
	        });
	    }).then(value => {
	        dispatch(completedReadingAttributeAction(descriptor, value));
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _writeDescriptor(dispatch, getState, descriptor, value) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.selectedAdapter;
	
	        if (adapterToUse === null) {
	            reject(new Error('No adapter selected'));
	        }
	
	        adapterToUse.writeDescriptorValue(descriptor.instanceId, value, true, // request ack (write request)
	        error => {
	            if (error) {
	                dispatch(completedWritingAttributeAction(descriptor, null, error));
	                reject(new Error(error.message));
	            }
	
	            resolve();
	        });
	    }).then(() => {
	        dispatch(completedWritingAttributeAction(descriptor, value));
	    }).catch(error => {
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _openCustomUuidFile(dispatch, getState) {
	    const path = (0, _uuid_definitions.getUuidDefinitionsFilePath)();
	    (0, _fileUtil.openFileInDefaultApplication)(path, err => {
	        if (err) {
	            _logging.logger.info(err);
	        }
	    });
	}
	
	function selectComponentAction(component) {
	    return {
	        type: SELECT_COMPONENT,
	        component: component
	    };
	}
	
	function discoveringAttributesAction(parent) {
	    return {
	        type: DISCOVERING_ATTRIBUTES,
	        parent
	    };
	}
	
	function discoveredAttributesAction(parent, attributes) {
	    return {
	        type: DISCOVERED_ATTRIBUTES,
	        parent,
	        attributes
	    };
	}
	
	function discoveredDeviceNameAction(device, value) {
	    return {
	        type: DISCOVERED_DEVICE_NAME,
	        device,
	        value
	    };
	}
	
	function setAttributeExpandedAction(attribute, value) {
	    return {
	        type: SET_ATTRIBUTE_EXPANDED,
	        attribute,
	        value
	    };
	}
	
	function readingAttributeAction(attribute) {
	    return {
	        type: READING_ATTRIBUTE,
	        attribute
	    };
	}
	
	function writingAttributeAction(attribute) {
	    return {
	        type: WRITING_ATTRIBUTE,
	        attribute
	    };
	}
	
	function completedReadingAttributeAction(attribute, value, error) {
	    return {
	        type: COMPLETED_READING_ATTRIBUTE,
	        attribute,
	        value,
	        error
	    };
	}
	
	function completedWritingAttributeAction(attribute, value, error) {
	    return {
	        type: COMPLETED_WRITING_ATTRIBUTE,
	        attribute,
	        value,
	        error
	    };
	}
	
	function selectComponent(component) {
	    return selectComponentAction(component);
	}
	
	function discoverServices(device) {
	    return (dispatch, getState) => {
	        return _discoverServices(dispatch, getState, device);
	    };
	}
	
	function discoverDeviceName(device) {
	    return (dispatch, getState) => {
	        return _discoverDeviceName(dispatch, getState, device);
	    };
	}
	
	function discoverCharacteristics(service) {
	    return (dispatch, getState) => {
	        return _discoverCharacteristics(dispatch, getState, service);
	    };
	}
	
	function discoverDescriptors(characteristic) {
	    return (dispatch, getState) => {
	        return _discoverDescriptors(dispatch, getState, characteristic);
	    };
	}
	
	function discoverCharacteristicsAndDescriptors(service) {
	    return (dispatch, getState) => {
	        return _discoverCharacteristicsAndDescriptors(dispatch, getState, service);
	    };
	}
	
	function setAttributeExpanded(attribute, value) {
	    return (dispatch, getState) => {
	        return _setAttributeExpanded(dispatch, getState, attribute, value);
	    };
	}
	
	function readCharacteristic(characteristic) {
	    return (dispatch, getState) => {
	        return _readCharacteristic(dispatch, getState, characteristic);
	    };
	}
	
	function writeCharacteristic(characteristic, value) {
	    return (dispatch, getState) => {
	        return _writeCharacteristic(dispatch, getState, characteristic, value);
	    };
	}
	
	function readDescriptor(descriptor) {
	    return (dispatch, getState) => {
	        return _readDescriptor(dispatch, getState, descriptor);
	    };
	}
	
	function writeDescriptor(descriptor, value) {
	    return (dispatch, getState) => {
	        return _writeDescriptor(dispatch, getState, descriptor, value);
	    };
	}
	
	function openCustomUuidFile() {
	    return (dispatch, getState) => {
	        return _openCustomUuidFile(dispatch, getState);
	    };
	}

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SECURITY_ERROR_OCCURED = exports.SECURITY_HIDE_DIALOG = exports.SECURITY_SHOW_DIALOG = exports.SECURITY_DELETE_BOND_INFO = exports.SECURITY_TOGGLE_AUTO_ACCEPT_PAIRING = exports.SECURITY_SET_PARAMS = undefined;
	exports.setSecurityParams = setSecurityParams;
	exports.toggleAutoAcceptPairing = toggleAutoAcceptPairing;
	exports.deleteBondInfo = deleteBondInfo;
	exports.showSecurityParamsDialog = showSecurityParamsDialog;
	exports.hideSecurityParamsDialog = hideSecurityParamsDialog;
	
	var _common = __webpack_require__(11);
	
	const SECURITY_SET_PARAMS = exports.SECURITY_SET_PARAMS = 'SECURITY_SET_PARAMS';
	const SECURITY_TOGGLE_AUTO_ACCEPT_PAIRING = exports.SECURITY_TOGGLE_AUTO_ACCEPT_PAIRING = 'SECURITY_TOGGLE_AUTO_ACCEPT_PAIRING';
	const SECURITY_DELETE_BOND_INFO = exports.SECURITY_DELETE_BOND_INFO = 'SECURITY_DELETE_BOND_INFO';
	const SECURITY_SHOW_DIALOG = exports.SECURITY_SHOW_DIALOG = 'SECURITY_SHOW_DIALOG';
	const SECURITY_HIDE_DIALOG = exports.SECURITY_HIDE_DIALOG = 'SECURITY_HIDE_DIALOG';
	const SECURITY_ERROR_OCCURED = exports.SECURITY_ERROR_OCCURED = 'SECURITY_ERROR_OCCURED';
	
	// Internal functions
	
	// Action object functions
	function setSecurityParamsAction(params) {
	    return {
	        type: SECURITY_SET_PARAMS,
	        params: params
	    };
	}
	
	function toggleAutoAcceptPairingAction() {
	    return {
	        type: SECURITY_TOGGLE_AUTO_ACCEPT_PAIRING
	    };
	}
	
	function deleteBondInfoAction() {
	    return {
	        type: SECURITY_DELETE_BOND_INFO
	    };
	}
	
	function showSecurityParamsDialogAction() {
	    return {
	        type: SECURITY_SHOW_DIALOG
	    };
	}
	
	function hideSecurityParamsDialogAction() {
	    return {
	        type: SECURITY_HIDE_DIALOG
	    };
	}
	
	function securityErrorOccuredAction(error) {
	    return {
	        type: SECURITY_ERROR_OCCURED,
	        error: error
	    };
	}
	
	// Exported action starters
	function setSecurityParams(params) {
	    return setSecurityParamsAction(params);
	}
	
	function toggleAutoAcceptPairing() {
	    return toggleAutoAcceptPairingAction();
	}
	
	function deleteBondInfo() {
	    return deleteBondInfoAction();
	}
	
	function showSecurityParamsDialog() {
	    return showSecurityParamsDialogAction();
	}
	
	function hideSecurityParamsDialog() {
	    return hideSecurityParamsDialogAction();
	}

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD = exports.HIDE_DISCARD_DIALOG = exports.SHOW_DISCARD_DIALOG = exports.HIDE_CLEAR_DIALOG = exports.SHOW_CLEAR_DIALOG = exports.HIDE_DELETE_DIALOG = exports.SHOW_DELETE_DIALOG = exports.APPLIED_SERVER = exports.CLEAR_SERVER = exports.REMOVE_ATTRIBUTE = exports.CHANGED_ATTRIBUTE = exports.ADD_NEW_DESCRIPTOR = exports.ADD_NEW_CHARACTERISTIC = exports.ADD_NEW_SERVICE = exports.SET_ATTRIBUTE_EXPANDED = exports.SELECT_COMPONENT = undefined;
	exports.selectComponent = selectComponent;
	exports.setAttributeExpanded = setAttributeExpanded;
	exports.addNewService = addNewService;
	exports.addNewCharacteristic = addNewCharacteristic;
	exports.addNewDescriptor = addNewDescriptor;
	exports.saveChangedAttribute = saveChangedAttribute;
	exports.removeAttribute = removeAttribute;
	exports.clearServer = clearServer;
	exports.applyServer = applyServer;
	exports.showDeleteDialog = showDeleteDialog;
	exports.hideDeleteDialog = hideDeleteDialog;
	exports.showClearDialog = showClearDialog;
	exports.hideClearDialog = hideClearDialog;
	exports.showDiscardDialog = showDiscardDialog;
	exports.hideDiscardDialog = hideDiscardDialog;
	exports.saveServerSetup = saveServerSetup;
	exports.loadServerSetup = loadServerSetup;
	
	var _api = __webpack_require__(9);
	
	var _fs = __webpack_require__(22);
	
	var _pcBleDriverJs = __webpack_require__(23);
	
	var _logging = __webpack_require__(4);
	
	var _errorDialogActions = __webpack_require__(12);
	
	var _Errors = __webpack_require__(19);
	
	const SELECT_COMPONENT = exports.SELECT_COMPONENT = 'SERVER_SETUP_SELECT_COMPONENT';
	const SET_ATTRIBUTE_EXPANDED = exports.SET_ATTRIBUTE_EXPANDED = 'SERVER_SETUP_SET_ATTRIBUTE_EXPANDED';
	
	const ADD_NEW_SERVICE = exports.ADD_NEW_SERVICE = 'SERVER_SETUP_ADDED_NEW_SERVICE';
	const ADD_NEW_CHARACTERISTIC = exports.ADD_NEW_CHARACTERISTIC = 'SERVER_SETUP_ADDED_NEW_CHARACTERISTIC';
	const ADD_NEW_DESCRIPTOR = exports.ADD_NEW_DESCRIPTOR = 'SERVER_SETUP_ADDED_NEW_DESCRIPTOR';
	const CHANGED_ATTRIBUTE = exports.CHANGED_ATTRIBUTE = 'SERVER_SETUP_CHANGED_ATTRIBUTE';
	const REMOVE_ATTRIBUTE = exports.REMOVE_ATTRIBUTE = 'SERVER_SETUP_REMOVE_ATTRIBUTE';
	
	const CLEAR_SERVER = exports.CLEAR_SERVER = 'SERVER_SETUP_CLEAR_SERVER';
	const APPLIED_SERVER = exports.APPLIED_SERVER = 'SERVER_SETUP_APPLIED_SERVER';
	
	const SHOW_DELETE_DIALOG = exports.SHOW_DELETE_DIALOG = 'SERVER_SETUP_SHOW_DELETE_DIALOG';
	const HIDE_DELETE_DIALOG = exports.HIDE_DELETE_DIALOG = 'SERVER_SETUP_HIDE_DELETE_DIALOG';
	
	const SHOW_CLEAR_DIALOG = exports.SHOW_CLEAR_DIALOG = 'SERVER_SETUP_SHOW_CLEAR_DIALOG';
	const HIDE_CLEAR_DIALOG = exports.HIDE_CLEAR_DIALOG = 'SERVER_SETUP_HIDE_CLEAR_DIALOG';
	
	const SHOW_DISCARD_DIALOG = exports.SHOW_DISCARD_DIALOG = 'SERVER_SETUP_SHOW_DISCARD_DIALOG';
	const HIDE_DISCARD_DIALOG = exports.HIDE_DISCARD_DIALOG = 'SERVER_SETUP_DISCARD_DIALOG';
	
	const LOAD = exports.LOAD = 'SERVER_SETUP_LOAD';
	
	const SCCD_UUID = '2903';
	const CCCD_UUID = '2902';
	
	function setAttributeExpandedAction(attribute, value) {
	    return {
	        type: SET_ATTRIBUTE_EXPANDED,
	        attribute,
	        value
	    };
	}
	
	function selectComponentAction(component) {
	    return {
	        type: SELECT_COMPONENT,
	        component: component
	    };
	}
	
	function addNewServiceAction() {
	    return {
	        type: ADD_NEW_SERVICE
	    };
	}
	
	function addNewCharacteristicAction(parent) {
	    return {
	        type: ADD_NEW_CHARACTERISTIC,
	        parent
	    };
	}
	
	function addNewDescriptorAction(parent) {
	    return {
	        type: ADD_NEW_DESCRIPTOR,
	        parent
	    };
	}
	
	function saveChangedAttributeAction(attribute) {
	    return {
	        type: CHANGED_ATTRIBUTE,
	        attribute
	    };
	}
	
	function removeAttributeAction() {
	    return {
	        type: REMOVE_ATTRIBUTE
	    };
	}
	
	function clearServerAction() {
	    return {
	        type: CLEAR_SERVER
	    };
	}
	
	function appliedServerAction(server) {
	    return {
	        type: APPLIED_SERVER,
	        server: server
	    };
	}
	
	function showDeleteDialogAction() {
	    return {
	        type: SHOW_DELETE_DIALOG
	    };
	}
	
	function hideDeleteDialogAction() {
	    return {
	        type: HIDE_DELETE_DIALOG
	    };
	}
	
	function showClearDialogAction() {
	    return {
	        type: SHOW_CLEAR_DIALOG
	    };
	}
	
	function hideClearDialogAction() {
	    return {
	        type: HIDE_CLEAR_DIALOG
	    };
	}
	
	function showDiscardDialogAction() {
	    return {
	        type: SHOW_DISCARD_DIALOG
	    };
	}
	
	function hideDiscardDialogAction() {
	    return {
	        type: HIDE_DISCARD_DIALOG
	    };
	}
	
	function loadAction(setup) {
	    return {
	        type: LOAD,
	        setup
	    };
	}
	
	function _setAttributeExpanded(dispatch, getState, attribute, value) {
	    dispatch(setAttributeExpandedAction(attribute, value));
	    dispatch(selectComponentAction(attribute.instanceId));
	}
	
	function _parentIsGAPorGATT(parent) {
	    const parentInstanceIds = (0, _api.getInstanceIds)(parent.instanceId);
	
	    return parentInstanceIds.service === 'local.server.0' || parentInstanceIds.service === 'local.server.1';
	}
	
	function _addNewCharacteristic(dispatch, getState, parent) {
	    if (_parentIsGAPorGATT(parent)) {
	        // Not allowed to add characteristics under the GAP and GATT services.
	        return;
	    }
	
	    dispatch(addNewCharacteristicAction(parent));
	}
	
	function _addNewDescriptor(dispatch, getState, parent) {
	    if (_parentIsGAPorGATT(parent)) {
	        // Not allowed to add descriptors under the GAP and GATT services.
	        return;
	    }
	
	    dispatch(addNewDescriptorAction(parent));
	}
	
	function _saveChangedAttribute(dispatch, getState, attribute) {
	    if (attribute.value) {
	        if (attribute.fixedLength && attribute.value.length < attribute.maxLength) {
	            const fillerArray = Array(attribute.maxLength).fill(0);
	            attribute.value = attribute.value.concat(fillerArray);
	        }
	
	        attribute.value = attribute.value.slice(0, attribute.maxLength);
	    }
	
	    dispatch(saveChangedAttributeAction(attribute));
	}
	
	function _removeAttribute(dispatch, getState) {
	    const state = getState();
	    const serverSetup = state.adapter.adapters.get(state.adapter.selectedAdapter).serverSetup;
	    const selectedInstanceIds = (0, _api.getInstanceIds)(serverSetup.selectedComponent);
	
	    if (selectedInstanceIds.service === 'local.server.0' || selectedInstanceIds.service === 'local.server.1') {
	        // Not allowed to remove GAP or GATT service and their children.
	        dispatch(hideDeleteDialog());
	        return;
	    }
	
	    dispatch(removeAttributeAction());
	}
	
	function _applyServer(dispatch, getState) {
	    const state = getState();
	    const invalidUuidErrorMessage = 'Invalid UUID. All attributes must have a valid UUID.';
	    const serviceFactory = new _pcBleDriverJs.api.ServiceFactory();
	    const serverSetup = state.adapter.adapters.get(state.adapter.selectedAdapter).serverSetup;
	    const selectedApi = state.adapter.api.selectedAdapter;
	    const services = [];
	    const errors = [];
	    let needSccdDescriptor = false;
	    let missingSccdDescriptor = false;
	    let missingCccdDescriptor = false;
	
	    for (let service of serverSetup.children.toArray()) {
	        // TODO: At some point we may need/want to support secondary services
	        const instanceId = service.instanceId,
	              uuid = service.uuid;
	
	
	        if (!uuid || uuid.length === 0) {
	            dispatch((0, _errorDialogActions.showErrorDialog)(new _Errors.ValidationError(invalidUuidErrorMessage)));
	            dispatch(selectComponent(instanceId));
	            return;
	        }
	
	        const factoryService = serviceFactory.createService(service.uuid);
	        services.push(factoryService);
	
	        for (let characteristic of service.children.toArray()) {
	            const instanceId = characteristic.instanceId,
	                  uuid = characteristic.uuid,
	                  value = characteristic.value,
	                  properties = characteristic.properties,
	                  readPerm = characteristic.readPerm,
	                  writePerm = characteristic.writePerm,
	                  fixedLength = characteristic.fixedLength,
	                  maxLength = characteristic.maxLength;
	
	
	            if (!uuid || uuid.length === 0) {
	                dispatch((0, _errorDialogActions.showErrorDialog)(new _Errors.ValidationError(invalidUuidErrorMessage)));
	                dispatch(selectComponent(instanceId));
	                return;
	            }
	
	            let needSccdDescriptor = properties.broadcast || false;
	            let needCccdDescriptor = properties.notify || properties.indicate || false;
	
	            const characteristicOptions = {
	                readPerm: readPerm.split(' '),
	                writePerm: writePerm.split(' '),
	                variableLength: !fixedLength,
	                maxLength
	            };
	
	            const factoryCharacteristic = serviceFactory.createCharacteristic(factoryService, uuid, value.toArray(), properties.toObject(), characteristicOptions);
	
	            for (let descriptor of characteristic.children.toArray()) {
	                const instanceId = descriptor.instanceId,
	                      uuid = descriptor.uuid,
	                      value = descriptor.value,
	                      readPerm = descriptor.readPerm,
	                      writePerm = descriptor.writePerm,
	                      fixedLength = descriptor.fixedLength,
	                      maxLength = descriptor.maxLength;
	
	
	                if (!uuid || uuid.length === 0) {
	                    dispatch((0, _errorDialogActions.showErrorDialog)(new _Errors.ValidationError(invalidUuidErrorMessage)));
	                    dispatch(selectComponent(instanceId));
	                    return;
	                }
	
	                if (uuid === SCCD_UUID) {
	                    needSccdDescriptor = false;
	                } else if (uuid === CCCD_UUID) {
	                    needCccdDescriptor = false;
	                }
	
	                const descriptorOptions = {
	                    readPerm: readPerm.split(' '),
	                    writePerm: writePerm.split(' '),
	                    variableLength: !fixedLength,
	                    maxLength
	                };
	
	                serviceFactory.createDescriptor(factoryCharacteristic, uuid, value.toArray(), descriptorOptions);
	            }
	
	            if (needSccdDescriptor) {
	                errors.push(new _Errors.ValidationError('Missing SCCD descriptor (uuid: 2903). All characteristics with broadcast property must have an SCCD descriptor.'));
	            }
	
	            if (needCccdDescriptor) {
	                errors.push(new _Errors.ValidationError('Missing CCCD descriptor (uuid: 2902). All characteristics with notify or indicate properties must have a CCCD descriptor.'));
	            }
	
	            if (errors.length > 0) {
	                dispatch(selectComponent(instanceId));
	                dispatch((0, _errorDialogActions.showErrorDialog)(errors));
	                return;
	            }
	        }
	    }
	
	    selectedApi.setServices(services, err => {
	        if (err) {
	            _logging.logger.info('Failed to set services');
	            _logging.logger.info(err);
	            return;
	        } else {
	            dispatch(appliedServerAction(services));
	        }
	    });
	}
	
	function _saveServerSetup(dispatch, getState, filename) {
	    if (filename) {
	        const adapter = getState().adapter.adapters.get(getState().adapter.selectedAdapter);
	        (0, _fs.writeFile)(filename, JSON.stringify(adapter.serverSetup), error => {
	            if (error) {
	                dispatch((0, _errorDialogActions.showErrorDialog)(error));
	                return;
	            }
	
	            _logging.logger.info(`Server setup saved to ${filename}.`);
	        });
	    }
	}
	
	function _loadServerSetup(dispatch, files) {
	    // Load file into immutable JS structure and replace it in the reducer.
	    // The reducer replaces the instanceId's
	    if (files && files.length === 1) {
	        try {
	            const filename = files[0];
	            const setup = (0, _fs.readFileSync)(filename);
	
	            const setupObj = JSON.parse(setup);
	
	            if (!setupObj) {
	                throw new Error('Illegal format on server setup file.');
	            }
	
	            // Replace underscored names for backward compatibility of setup files
	            const setupObjString = JSON.stringify(setupObj).replace(/"write_wo_resp"/g, '"writeWoResp"').replace(/"auth_signed_wr"/g, '"authSignedWr"').replace(/"reliable_wr"/g, '"reliableWr"').replace(/"wr_aux"/g, '"wrAux"');
	
	            const setupObjModified = JSON.parse(setupObjString);
	
	            dispatch(loadAction(setupObjModified));
	            _logging.logger.info(`Server setup loaded from ${filename}.`);
	        } catch (e) {
	            dispatch((0, _errorDialogActions.showErrorDialog)(e));
	        }
	    }
	}
	
	function selectComponent(component) {
	    return selectComponentAction(component);
	}
	
	function setAttributeExpanded(attribute, value) {
	    return (dispatch, getState) => {
	        _setAttributeExpanded(dispatch, getState, attribute, value);
	    };
	}
	
	function addNewService() {
	    return addNewServiceAction();
	}
	
	function addNewCharacteristic(parent) {
	    return (dispatch, getState) => {
	        _addNewCharacteristic(dispatch, getState, parent);
	    };
	}
	
	function addNewDescriptor(parent) {
	    return (dispatch, getState) => {
	        _addNewDescriptor(dispatch, getState, parent);
	    };
	}
	
	function saveChangedAttribute(attribute) {
	    return (dispatch, getState) => {
	        _saveChangedAttribute(dispatch, getState, attribute);
	    };
	}
	
	function removeAttribute() {
	    return (dispatch, getState) => {
	        _removeAttribute(dispatch, getState);
	    };
	}
	
	function clearServer() {
	    return clearServerAction();
	}
	
	function applyServer() {
	    return (dispatch, getState) => {
	        _applyServer(dispatch, getState);
	    };
	}
	
	function showDeleteDialog() {
	    return showDeleteDialogAction();
	}
	
	function hideDeleteDialog() {
	    return hideDeleteDialogAction();
	}
	
	function showClearDialog() {
	    return showClearDialogAction();
	}
	
	function hideClearDialog() {
	    return hideClearDialogAction();
	}
	
	function showDiscardDialog() {
	    return showDiscardDialogAction();
	}
	
	function hideDiscardDialog() {
	    return hideDiscardDialogAction();
	}
	
	function saveServerSetup(filename) {
	    return (dispatch, getState) => {
	        _saveServerSetup(dispatch, getState, filename);
	    };
	}
	
	function loadServerSetup(filename) {
	    return dispatch => {
	        _loadServerSetup(dispatch, filename);
	    };
	}

/***/ },
/* 19 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	function ValidationError(msg) {
	    var err = Error.call(this, msg);
	    err.name = "ValidationError";
	    return err;
	}
	
	ValidationError.prototype = Object.create(Error.prototype, {
	    constructor: { value: ValidationError }
	});
	
	module.exports = { ValidationError };

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _underscore = __webpack_require__(36);
	
	var _ = _interopRequireWildcard(_underscore);
	
	var _EditableField = __webpack_require__(78);
	
	var _EditableField2 = _interopRequireDefault(_EditableField);
	
	var _stringUtil = __webpack_require__(14);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }
	
	class HexOnlyEditableField extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    shouldComponentUpdate(nextProps, nextState) {
	        if (!_.isEqual(this.props.value, nextProps.value)) {
	            return true;
	        }
	
	        if (this.props.onRead != nextProps.onRead) {
	            return true;
	        }
	
	        if (this.props.onWrite != nextProps.onWrite) {
	            return true;
	        }
	
	        return false;
	    }
	
	    /*
	        Produces some text that changes into a textarea when clicked (like EditableField).
	        The textarea only accepts hexadecimal characters.
	        The input is automatically formatted into pairs of characters (bytes), like so: AB-D2-C1.
	         Usage:
	        <HexOnlyEditableField value={value} />
	         Where _value_ is the text that should turn editable.
	        It also accepts all props that EditableField accepts, except
	        keyPressValidation, completeValidation, onBackspace and formatInput
	         This component wraps EditableField, so see that component for info on how the dataflow etc works.
	         There's a lot of complexity here related to keeping the caret in the right position.
	    */
	    _keyPressValidation(str) {
	        if (this.props.showText) {
	            return true;
	        }
	
	        const _hexRegEx = /^[0-9a-fA-F\ ]*$/i;
	        return _hexRegEx.test(str);
	    }
	
	    _formatInput(str, caretPosition) {
	        if (this.props.showText) {
	            return {
	                value: str,
	                caretPosition: caretPosition
	            };
	        }
	
	        caretPosition = this._calcCaretPosition(str, caretPosition);
	        let chars = str.toUpperCase().replace(/ /g, '').split('');
	        //insert spaces after every second char
	        let inserted = 0;
	        const originalLength = chars.length;
	
	        for (let i = 2; i < originalLength; i += 2) {
	            chars.splice(i + inserted, 0, ' ');
	            inserted += 1;
	        }
	
	        return {
	            value: chars.join(''),
	            caretPosition: caretPosition
	        };
	    }
	
	    _removeSelection(e, caretModifier) {
	        if (this.props.showText) {
	            return;
	        }
	
	        const selectionStart = e.target.selectionStart;
	        const selectionEnd = e.target.selectionEnd;
	
	        if (selectionStart !== selectionEnd) {
	            return;
	        }
	
	        const caret = selectionStart + caretModifier;
	        let str = e.target.value;
	
	        if (str.substr(caret, 1) === ' ') {
	            //remove the dash - this sets the caret at end of the text
	            e.target.value = str.slice(0, caret) + str.slice(caret + 1);
	            //reset the caret back to before the dash, so the backspace event itself will remove the char before the dash
	            e.target.setSelectionRange(caret, caret);
	        }
	    }
	
	    _onBeforeBackspace(e) {
	        this._removeSelection(e, -1);
	    }
	
	    _onBeforeDelete(e) {
	        this._removeSelection(e, 0);
	    }
	
	    _calcCaretPosition(origValue, caretPosition) {
	        /*
	        * Replacing the textarea contents places the caret at the end.
	        * We need to place the caret back where it should be.
	        * Since we're adding dashes, this is not so trivial.
	        *
	        * Consider if the user typed the 1 in the string below:
	        * Before formatting: AA-A1A-AA, After: AA-A1-AA-A
	        * caretPosition before: 5, caretPosition after: 5
	        *
	        * But here it works differently:
	        * Before formatting: AA-AA1-AA, After: AA-AA-1A-A
	        * caretPosition before: 6, caretPosition after: 7
	        *
	        * And there's also this case:
	        * Before formatting: AA-AA-1AA, After: AA-AA-1A-A
	        * caretPosition before: 7, caretPosition after: 7
	        *
	        * Also have to handle backspace:
	        * Before formatting: AA-A-AA, After: AA-AA-A
	        * caretPosition before: 4, caretPosition after: 4
	        *
	        * Find where the caret would be without the dashes,
	        * and map that position back to the dashed string
	        */
	        const dashesBeforeCaret = origValue.substr(0, caretPosition).match(/ /g);
	        const numDashesBeforeCaret = dashesBeforeCaret === null ? 0 : dashesBeforeCaret.length;
	        const caretPositionWithoutDashes = caretPosition - numDashesBeforeCaret;
	        const correctNumberOfDashes = Math.floor(caretPositionWithoutDashes / 2);
	        caretPosition = caretPositionWithoutDashes + correctNumberOfDashes;
	        return caretPosition;
	    }
	
	    _completeValidation(str) {
	        if (this.props.showText) {
	            str = (0, _stringUtil.textToHexText)(str);
	        }
	
	        const valueArray = str.trim().split(' ');
	        for (let value of valueArray) {
	            if (value.length % 2 !== 0) {
	                return { valid: false, validationMessage: 'Please enter full bytes (pairs of hexadecimals)' };
	            }
	        }
	
	        return { valid: true, validationMessage: 'Valid value' };
	    }
	
	    _getValueArray(value) {
	        if (this.props.showText) {
	            value = (0, _stringUtil.textToHexText)(value);
	        }
	
	        if (!this._completeValidation(value)) {
	            return;
	        }
	
	        let valueArray = [];
	
	        for (let i = 0; i < value.length; i += 3) {
	            let slice = value.substring(i, i + 2);
	            let parsedInt = parseInt(slice, 16);
	            valueArray.push(parsedInt);
	        }
	
	        return valueArray;
	    }
	
	    _onChange(value) {
	        if (this.props.onChange) {
	            if (this.props.showText) {
	                value = this._getValueArray(value);
	            }
	
	            this.props.onChange(value);
	        }
	    }
	
	    render() {
	        var _props = this.props;
	
	        const showText = _props.showText,
	              value = _props.value,
	              keyPressValidation = _props.keyPressValidation,
	              completeValidation = _props.completeValidation,
	              formatInput = _props.formatInput,
	              onBeforeBackspace = _props.onBeforeBackspace,
	              onBeforeDelete = _props.onBeforeDelete,
	              onChange = _props.onChange,
	              title = _props.title,
	              props = _objectWithoutProperties(_props, ['showText', 'value', 'keyPressValidation', 'completeValidation', 'formatInput', 'onBeforeBackspace', 'onBeforeDelete', 'onChange', 'title']); //pass along all props except these
	
	        let parsedValue = (0, _stringUtil.hexArrayToHexText)(value);
	        let titleValue = parsedValue;
	        let showValue = '';
	
	        if (title) {
	            titleValue = title + ', ' + titleValue;
	        }
	
	        if (!showText) {
	            showValue = parsedValue;
	        } else {
	            showValue = (0, _stringUtil.hexArrayToText)(value);
	        }
	
	        //formatInput={(str, caretPosition) => this._formatInput(str, caretPosition)}
	        return _react2.default.createElement(_EditableField2.default, _extends({}, props, {
	            value: showValue,
	            title: titleValue,
	            keyPressValidation: str => this._keyPressValidation(str),
	            completeValidation: str => this._completeValidation(str),
	            formatInput: (str, caretPosition) => this._formatInput(str, caretPosition),
	            onBeforeBackspace: e => this._onBeforeBackspace(e),
	            onBeforeDelete: e => this._onBeforeDelete(e),
	            getValueArray: value => this._getValueArray(value),
	            onChange: value => this._onChange(value),
	            ref: 'editableField'
	        }));
	    }
	}
	
	exports.default = HexOnlyEditableField;
	_EditableField2.default.propTypes = {
	    showText: _react.PropTypes.bool
	};
	module.exports = exports['default'];

/***/ },
/* 21 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.validateUuid = validateUuid;
	const SUCCESS = exports.SUCCESS = 'success';
	const ERROR = exports.ERROR = 'error';
	
	function validateUuid(uuid) {
	  const uuid16regex = /^[0-9a-fA-F]{4}$/;
	  const uuid128regex = /^[0-9a-fA-F]{32}$/;
	
	  return uuid16regex.test(uuid) || uuid128regex.test(uuid) ? SUCCESS : ERROR;
	}

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = require("pc-ble-driver-js");

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 25 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.selectEventId = selectEventId;
	exports.showDialog = showDialog;
	exports.eventTimedOut = eventTimedOut;
	exports.ignoreEvent = ignoreEvent;
	exports.acceptEvent = acceptEvent;
	exports.removeEvent = removeEvent;
	exports.clearAllEvents = clearAllEvents;
	exports.createUserInitiatedConnParamsUpdateEvent = createUserInitiatedConnParamsUpdateEvent;
	exports.createUserInitiatedPairingEvent = createUserInitiatedPairingEvent;
	const BLE_EVENT_CONN_PARAM_UPDATE_REQUEST = exports.BLE_EVENT_CONN_PARAM_UPDATE_REQUEST = 'BLE_EVENT_CONN_PARAM_UPDATE_REQUEST';
	const BLE_EVENT_SHOW_DIALOG = exports.BLE_EVENT_SHOW_DIALOG = 'BLE_EVENT_SHOW_DIALOG';
	const BLE_EVENT_CLEAR_ALL_EVENTS = exports.BLE_EVENT_CLEAR_ALL_EVENTS = 'BLE_EVENT_CLEAR_ALL_EVENTS';
	const BLE_EVENT_SELECT_EVENT_ID = exports.BLE_EVENT_SELECT_EVENT_ID = 'BLE_EVENT_SELECT_EVENT_ID';
	const BLE_EVENT_TIMED_OUT = exports.BLE_EVENT_TIMED_OUT = 'BLE_EVENT_TIMED_OUT';
	const BLE_EVENT_IGNORE = exports.BLE_EVENT_IGNORE = 'BLE_EVENT_IGNORE';
	const BLE_EVENT_ACCEPT = exports.BLE_EVENT_ACCEPT = 'BLE_EVENT_ACCEPT';
	const BLE_EVENT_REMOVE = exports.BLE_EVENT_REMOVE = 'BLE_EVENT_REMOVE';
	const BLE_EVENT_CREATE_USER_INITIATED_CONN_PARAMS_UPDATE_EVENT = exports.BLE_EVENT_CREATE_USER_INITIATED_CONN_PARAMS_UPDATE_EVENT = 'BLE_EVENT_CREATE_USER_INITIATED_CONN_PARAMS_UPDATE_EVENT';
	const BLE_EVENT_CREATE_USER_INITIATED_PAIRING_EVENT = exports.BLE_EVENT_CREATE_USER_INITIATED_PAIRING_EVENT = 'BLE_EVENT_CREATE_USER_INITIATED_PAIRING_EVENT';
	
	function _createUserInitiatedPairingEventAction(dispatch, getState, device) {
	    const defaultSecParams = getState().adapter.getIn(['adapters', getState().adapter.selectedAdapter, 'security', 'securityParams']);
	    dispatch(createUserInitiatedPairingEventAction(device, defaultSecParams));
	}
	
	function showDialogAction(visible) {
	    return {
	        type: BLE_EVENT_SHOW_DIALOG,
	        visible
	    };
	}
	
	function selectEventIdAction(selectedEventId) {
	    return {
	        type: BLE_EVENT_SELECT_EVENT_ID,
	        selectedEventId
	    };
	}
	
	function clearAllEventsAction() {
	    return {
	        type: BLE_EVENT_CLEAR_ALL_EVENTS
	    };
	}
	
	function eventTimedOutAction(event) {
	    return {
	        type: BLE_EVENT_TIMED_OUT,
	        event
	    };
	}
	
	function ignoreEventAction(eventId) {
	    return {
	        type: BLE_EVENT_IGNORE,
	        eventId
	    };
	}
	
	function acceptEventAction(eventId) {
	    return {
	        type: BLE_EVENT_ACCEPT,
	        eventId
	    };
	}
	
	function removeEventAction(eventId) {
	    return {
	        type: BLE_EVENT_REMOVE,
	        eventId
	    };
	}
	
	function createUserInitiatedConnParamsUpdateEventAction(device) {
	    return {
	        type: BLE_EVENT_CREATE_USER_INITIATED_CONN_PARAMS_UPDATE_EVENT,
	        device
	    };
	}
	
	function createUserInitiatedPairingEventAction(device, defaultSecParams) {
	    return {
	        type: BLE_EVENT_CREATE_USER_INITIATED_PAIRING_EVENT,
	        device,
	        defaultSecParams
	    };
	}
	
	// Exported action creators
	function selectEventId(eventId) {
	    return selectEventIdAction(eventId);
	}
	
	function showDialog(visible) {
	    return showDialogAction(visible);
	}
	
	function eventTimedOut(event) {
	    return eventTimedOutAction(event);
	}
	
	function ignoreEvent(eventId) {
	    return ignoreEventAction(eventId);
	}
	
	function acceptEvent(eventId) {
	    return acceptEventAction(eventId);
	}
	
	function removeEvent(eventId) {
	    return removeEventAction(eventId);
	}
	
	function clearAllEvents() {
	    return clearAllEventsAction();
	}
	
	function createUserInitiatedConnParamsUpdateEvent(device) {
	    return createUserInitiatedConnParamsUpdateEventAction(device);
	}
	
	function createUserInitiatedPairingEvent(device) {
	    return (dispatch, getState) => {
	        return _createUserInitiatedPairingEventAction(dispatch, getState, device);
	    };
	}

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DEVICE_ENABLE_EVENTS = exports.DEVICE_DISABLE_EVENTS = exports.UPDATE_PROGRESS = exports.ABORT_SUCCESS = exports.ABORT = exports.TRANSFER_FILE_COMPLETED = exports.TRANSFER_FILE_STARTED = exports.PERFORM = exports.PERFORM_ERROR = exports.PERFORM_SUCCESS = exports.LOAD_PACKAGE_INFO_ERROR = exports.LOAD_PACKAGE_INFO_SUCCESS = exports.LOAD_PACKAGE_INFO = exports.SET_FILE_PATH = exports.HIDE_CONFIRM_CLOSE_DIALOG = exports.SHOW_CONFIRM_CLOSE_DIALOG = exports.HIDE_DIALOG = exports.SHOW_DIALOG = undefined;
	exports.showDfuDialog = showDfuDialog;
	exports.hideDfuDialog = hideDfuDialog;
	exports.showConfirmCloseDialog = showConfirmCloseDialog;
	exports.hideConfirmCloseDialog = hideConfirmCloseDialog;
	exports.setDfuFilePath = setDfuFilePath;
	exports.loadDfuPackageInfo = loadDfuPackageInfo;
	exports.startDfu = startDfu;
	exports.stopDfu = stopDfu;
	
	var _pcBleDriverJs = __webpack_require__(23);
	
	var _logging = __webpack_require__(4);
	
	var _adapterActions = __webpack_require__(3);
	
	var _errorDialogActions = __webpack_require__(12);
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	const SHOW_DIALOG = exports.SHOW_DIALOG = 'DFU_SHOW_DIALOG';
	const HIDE_DIALOG = exports.HIDE_DIALOG = 'DFU_HIDE_DIALOG';
	const SHOW_CONFIRM_CLOSE_DIALOG = exports.SHOW_CONFIRM_CLOSE_DIALOG = 'DFU_SHOW_CONFIRM_CLOSE';
	const HIDE_CONFIRM_CLOSE_DIALOG = exports.HIDE_CONFIRM_CLOSE_DIALOG = 'DFU_HIDE_CONFIRM_CLOSE';
	const SET_FILE_PATH = exports.SET_FILE_PATH = 'DFU_SET_FILE_PATH';
	const LOAD_PACKAGE_INFO = exports.LOAD_PACKAGE_INFO = 'DFU_LOAD_PACKAGE_INFO';
	const LOAD_PACKAGE_INFO_SUCCESS = exports.LOAD_PACKAGE_INFO_SUCCESS = 'DFU_LOAD_PACKAGE_INFO_SUCCESS';
	const LOAD_PACKAGE_INFO_ERROR = exports.LOAD_PACKAGE_INFO_ERROR = 'DFU_LOAD_PACKAGE_INFO_ERROR';
	const PERFORM_SUCCESS = exports.PERFORM_SUCCESS = 'DFU_PERFORM_SUCCESS';
	const PERFORM_ERROR = exports.PERFORM_ERROR = 'DFU_PERFORM_ERROR';
	const PERFORM = exports.PERFORM = 'DFU_PERFORM';
	const TRANSFER_FILE_STARTED = exports.TRANSFER_FILE_STARTED = 'DFU_TRANSFER_FILE_STARTED';
	const TRANSFER_FILE_COMPLETED = exports.TRANSFER_FILE_COMPLETED = 'DFU_TRANSFER_FILE_COMPLETED';
	const ABORT = exports.ABORT = 'DFU_ABORT';
	const ABORT_SUCCESS = exports.ABORT_SUCCESS = 'DFU_ABORT_SUCCESS';
	const UPDATE_PROGRESS = exports.UPDATE_PROGRESS = 'DFU_UPDATE_PROGRESS';
	
	const DEVICE_DISABLE_EVENTS = exports.DEVICE_DISABLE_EVENTS = 'DEVICE_DISABLE_EVENTS';
	const DEVICE_ENABLE_EVENTS = exports.DEVICE_ENABLE_EVENTS = 'DEVICE_ENABLE_EVENTS';
	
	// Log levels used by the DFU module in pc-ble-driver-js
	const TRACE = 0;
	const DEBUG = 1;
	const INFO = 2;
	const WARNING = 3;
	const ERROR = 4;
	const FATAL = 5;
	
	function showDialogAction(device) {
	    return {
	        type: SHOW_DIALOG,
	        device
	    };
	}
	
	function hideDialogAction() {
	    return {
	        type: HIDE_DIALOG
	    };
	}
	
	function showConfirmCloseAction() {
	    return {
	        type: SHOW_CONFIRM_CLOSE_DIALOG
	    };
	}
	
	function hideConfirmCloseAction() {
	    return {
	        type: HIDE_CONFIRM_CLOSE_DIALOG
	    };
	}
	
	function setFilePathAction(filePath) {
	    return {
	        type: SET_FILE_PATH,
	        filePath
	    };
	}
	
	function loadPackageInfoAction(filePath) {
	    return {
	        type: LOAD_PACKAGE_INFO,
	        filePath
	    };
	}
	
	function loadPackageInfoSuccessAction(packageInfo) {
	    return {
	        type: LOAD_PACKAGE_INFO_SUCCESS,
	        packageInfo
	    };
	}
	
	function loadPackageInfoErrorAction(error) {
	    return {
	        type: LOAD_PACKAGE_INFO_ERROR,
	        error
	    };
	}
	
	function performDfuAction() {
	    return {
	        type: PERFORM
	    };
	}
	
	function performDfuSuccessAction() {
	    return {
	        type: PERFORM_SUCCESS
	    };
	}
	
	function performDfuError(error) {
	    return {
	        type: PERFORM_ERROR,
	        error
	    };
	}
	
	function transferFileStartedAction(fileName) {
	    return {
	        type: TRANSFER_FILE_STARTED,
	        fileName
	    };
	}
	
	function transferFileCompletedAction(fileName) {
	    return {
	        type: TRANSFER_FILE_COMPLETED,
	        fileName
	    };
	}
	
	function abortDfuAction() {
	    return {
	        type: ABORT
	    };
	}
	
	function abortSuccessAction() {
	    return {
	        type: ABORT_SUCCESS
	    };
	}
	
	function updateProgressAction(progressInfo) {
	    return {
	        type: UPDATE_PROGRESS,
	        percentCompleted: progressInfo.percentCompleted,
	        status: progressInfo.stage,
	        bytesPerSecond: progressInfo.bytesPerSecond,
	        averageBytesPerSecond: progressInfo.averageBytesPerSecond,
	        completedBytes: progressInfo.completedBytes,
	        totalBytes: progressInfo.totalBytes
	    };
	}
	
	function _disconnectFromDevice(adapter, deviceAddress) {
	    const device = _getDeviceByAddress(adapter, deviceAddress);
	    if (!device) {
	        return Promise.resolve();
	    }
	    return new Promise((resolve, reject) => {
	        adapter.disconnect(device.instanceId, error => {
	            if (error) {
	                reject(new Error(error.message));
	            } else {
	                resolve();
	            }
	        });
	    });
	}
	
	function _getDeviceByAddress(adapter, address) {
	    const devices = adapter.getDevices();
	    const foundDeviceId = Object.keys(devices).find(deviceId => {
	        return devices[deviceId].address === address;
	    });
	    return devices[foundDeviceId];
	}
	
	function _setupListeners(dispatch, dfu) {
	    dfu.on('transferStart', fileName => {
	        dispatch(transferFileStartedAction(fileName));
	    });
	    dfu.on('transferComplete', fileName => {
	        dispatch(transferFileCompletedAction(fileName));
	    });
	    dfu.on('progressUpdate', progress => {
	        dispatch(updateProgressAction(progress));
	    });
	    dfu.on('logMessage', _onLogMessage);
	}
	
	function _removeListeners(dfu) {
	    dfu.removeAllListeners('transferStart');
	    dfu.removeAllListeners('transferComplete');
	    dfu.removeAllListeners('progressUpdate');
	    dfu.removeAllListeners('logMessage');
	}
	
	function _onLogMessage(severity, message) {
	    switch (severity) {
	        case TRACE:
	        case DEBUG:
	            _logging.logger.debug(message);
	            break;
	        case INFO:
	            _logging.logger.info(message);
	            break;
	        case WARNING:
	            _logging.logger.warn(message);
	            break;
	        case ERROR:
	        case FATAL:
	            _logging.logger.error(message);
	            break;
	        default:
	            _logging.logger.warn(`Log message of unknown severity ${severity} received: ${message}`);
	    }
	}
	
	function showDfuDialog(device) {
	    return (dispatch, getState) => {
	        const dfu = new _pcBleDriverJs.api.Dfu('BLE', {
	            adapter: getState().adapter.api.selectedAdapter,
	            targetAddress: device.address,
	            targetAddressType: device.addressType
	        });
	        getState().dfu.api.dfu = dfu;
	        _setupListeners(dispatch, dfu);
	        dispatch(showDialogAction(device));
	    };
	}
	
	function hideDfuDialog() {
	    return (dispatch, getState) => {
	        const dfu = getState().dfu.api.dfu;
	        const isStarted = getState().dfu.isStarted;
	        if (dfu) {
	            if (isStarted) {
	                dispatch(abortDfuAction());
	                dfu.abort();
	            }
	            _removeListeners(dfu);
	        }
	        dispatch(hideDialogAction());
	    };
	}
	
	function showConfirmCloseDialog() {
	    return showConfirmCloseAction();
	}
	
	function hideConfirmCloseDialog() {
	    return hideConfirmCloseAction();
	}
	
	function setDfuFilePath(filePath) {
	    return setFilePathAction(filePath);
	}
	
	function loadDfuPackageInfo(filePath) {
	    return (dispatch, getState) => {
	        dispatch(loadPackageInfoAction(filePath));
	        const dfu = getState().dfu.api.dfu;
	        dfu.getManifest(filePath, (error, manifest) => {
	            if (error) {
	                dispatch(loadPackageInfoErrorAction(error));
	                dispatch((0, _errorDialogActions.showErrorDialog)({ message: error.message }));
	            } else {
	                dispatch(loadPackageInfoSuccessAction(manifest));
	            }
	        });
	    };
	}
	
	function startDfu(filePath) {
	    return (dispatch, getState) => {
	        dispatch(performDfuAction());
	        const adapter = getState().adapter.api.selectedAdapter;
	        const device = getState().dfu.device;
	        const dfuModule = getState().dfu.api.dfu;
	
	        // The DFU procedure in pc-ble-driver-js will connect to the device
	        // before performing DFU. We disconnect our connection to allow
	        // pc-ble-driver-js to connect.
	        _disconnectFromDevice(adapter, device.address).then(() => {
	
	            // Ignore adapter events for the device while DFU is in progress.
	            // We want to prevent nRF Connect from acting on events from the
	            // device and potentially interfering with the DFU operation.
	            dispatch((0, _adapterActions.disableDeviceEvents)(device.address));
	
	            dfuModule.performDFU(filePath, (error, aborted) => {
	                if (error) {
	                    dispatch(performDfuError(error));
	                    dispatch((0, _errorDialogActions.showErrorDialog)({ message: error.message }));
	                } else if (aborted) {
	                    dispatch(abortSuccessAction());
	                } else {
	                    dispatch(performDfuSuccessAction());
	                }
	
	                // DFU done. The adapter might still be connected to the device,
	                // if the DFU failed or was aborted. Make sure the adapter is
	                // disconnected from the device before handing back control of
	                // events to nRF Connect.
	                _disconnectFromDevice(adapter, device.address).then(() => {
	                    dispatch((0, _adapterActions.enableDeviceEvents)(device.address));
	                });
	            });
	        });
	    };
	}
	
	function stopDfu() {
	    return (dispatch, getState) => {
	        dispatch(abortDfuAction());
	        getState().dfu.api.dfu.abort();
	    };
	}

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SHOW_FIRMWARE_UPDATE_SPINNER = exports.UPDATE_FIRMWARE = exports.HIDE_FIRMWARE_UPDATE_REQUEST = exports.SHOW_FIRMWARE_UPDATE_REQUEST = undefined;
	exports.showFirmwareUpdateRequest = showFirmwareUpdateRequest;
	exports.updateFirmware = updateFirmware;
	exports.continueOpenDevice = continueOpenDevice;
	
	var _os = __webpack_require__(35);
	
	var _os2 = _interopRequireDefault(_os);
	
	var _electron = __webpack_require__(13);
	
	var _adapterActions = __webpack_require__(3);
	
	var _pcNrfjprogJs = __webpack_require__(57);
	
	var _errorDialogActions = __webpack_require__(12);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const SHOW_FIRMWARE_UPDATE_REQUEST = exports.SHOW_FIRMWARE_UPDATE_REQUEST = 'SHOW_FIRMWARE_UPDATE_REQUEST';
	const HIDE_FIRMWARE_UPDATE_REQUEST = exports.HIDE_FIRMWARE_UPDATE_REQUEST = 'HIDE_FIRMWARE_UPDATE_REQUEST';
	const UPDATE_FIRMWARE = exports.UPDATE_FIRMWARE = 'UPDATE_FIRMWARE';
	const SHOW_FIRMWARE_UPDATE_SPINNER = exports.SHOW_FIRMWARE_UPDATE_SPINNER = 'SHOW_FIRMWARE_UPDATE_SPINNER';
	
	function _updateFirmware(dispatch, getState, adapter) {
	    return new Promise((resolve, reject) => {
	        const adapterToUse = getState().adapter.api.adapters.find(x => {
	            return x.state.port === adapter;
	        });
	
	        if (adapterToUse === null) {
	            reject(new Error(`Not able to find ${adapter}.`));
	        }
	
	        _loadFirmwareDefinitions().then(firmwareDefinitions => {
	            const serialNumber = parseInt(adapterToUse.state.serialNumber, 10);
	            const probe = new _pcNrfjprogJs.DebugProbe();
	            probe.program(serialNumber, firmwareDefinitions, err => {
	                if (err) {
	                    reject(new Error('Not able to program. Error: ' + err));
	                } else {
	                    resolve();
	                }
	            });
	        });
	    }).then(() => {
	        dispatch(hideFirmwareUpdateRequestAction());
	        setTimeout(() => dispatch((0, _adapterActions.openAdapter)(adapter)), 1000);
	    }).catch(error => {
	        dispatch(hideFirmwareUpdateRequestAction());
	        dispatch((0, _errorDialogActions.showErrorDialog)(error));
	    });
	}
	
	function _loadFirmwareDefinitions() {
	    return new Promise(resolve => {
	        // Using webpack code splitting to create a separate bundle, so that firmware
	        // data can be loaded on demand.
	        __webpack_require__.e/* nsure */(1, function (require) {
	            const definitions = __webpack_require__(52);
	            if (_os2.default.type() === 'Darwin') {
	                resolve(definitions.firmwareDefinitions115k2);
	            } else {
	                resolve(definitions.firmwareDefinitions1m);
	            }
	        });
	    });
	}
	
	function showFirmwareUpdateRequestAction(adapter, foundVersion, latestVersion) {
	    return {
	        type: SHOW_FIRMWARE_UPDATE_REQUEST,
	        adapter,
	        foundVersion,
	        latestVersion
	    };
	}
	
	function hideFirmwareUpdateRequestAction() {
	    return {
	        type: HIDE_FIRMWARE_UPDATE_REQUEST
	    };
	}
	
	function showUpdateFirmwareSpinnerAction() {
	    return {
	        type: SHOW_FIRMWARE_UPDATE_SPINNER
	    };
	}
	
	function showFirmwareUpdateRequest(adapter, foundVersion, latestVersion) {
	    return showFirmwareUpdateRequestAction(adapter, foundVersion, latestVersion);
	}
	
	function updateFirmware() {
	    return (dispatch, getState) => {
	        const adapter = getState().firmwareUpdate.adapter;
	        dispatch(showUpdateFirmwareSpinnerAction());
	        _updateFirmware(dispatch, getState, adapter);
	    };
	}
	
	function continueOpenDevice() {
	    return (dispatch, getState) => {
	        const adapter = getState().firmwareUpdate.adapter;
	        dispatch(hideFirmwareUpdateRequestAction());
	        dispatch((0, _adapterActions.openAdapter)(adapter));
	    };
	}

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CCCD_UUID = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _EnumeratingAttributes = __webpack_require__(43);
	
	var _EnumeratingAttributes2 = _interopRequireDefault(_EnumeratingAttributes);
	
	var _AddNewItem = __webpack_require__(41);
	
	var _AddNewItem2 = _interopRequireDefault(_AddNewItem);
	
	var _Effects = __webpack_require__(112);
	
	var _colorDefinitions = __webpack_require__(113);
	
	var Colors = _interopRequireWildcard(_colorDefinitions);
	
	var _api = __webpack_require__(9);
	
	var _stringUtil = __webpack_require__(14);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const CCCD_UUID = exports.CCCD_UUID = '2902';
	
	class AttributeItem extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.backgroundColor = Colors.getColor('brand-base');
	        this.bars = 0;
	        this.expandable = true;
	        this.attributeType = 'attribute';
	        this.childAttributeType = 'service';
	    }
	
	    componentWillReceiveProps(nextProps) {
	        if (this.props.item.value !== nextProps.item.value) {
	            if (this.props.onChange) {
	                this.props.onChange();
	            }
	
	            this._blink();
	        }
	    }
	
	    componentWillUnmount() {
	        if (!this.animation) {
	            return;
	        }
	
	        this.animation.stop();
	    }
	
	    _onContentClick(e) {
	        e.stopPropagation();
	        this._selectComponent();
	    }
	
	    _onExpandAreaClick(e) {
	        e.stopPropagation();
	        this.props.onSetAttributeExpanded(this.props.item, !this.props.item.expanded);
	    }
	
	    _childChanged() {
	        if (this.props.onChange) {
	            this.props.onChange();
	        }
	
	        if (!this.props.item.expanded) {
	            this._blink();
	        }
	    }
	
	    _blink() {
	        if (this.animation) {
	            this.animation.stop();
	        }
	
	        const fromColor = Colors.getColor('brand-primary');
	        const toColor = Colors.getColor('brand-base');
	        this.animation = _Effects.Effects.blink(this, 'backgroundColor', fromColor, toColor);
	    }
	
	    _selectComponent() {
	        if (this.props.onSelectAttribute) {
	            this.props.onSelectAttribute(this.props.item.instanceId);
	        }
	    }
	
	    onAddAttribute(item) {
	        var _props = this.props;
	        const onAddCharacteristic = _props.onAddCharacteristic,
	              onAddDescriptor = _props.onAddDescriptor;
	
	
	        if (this.attributeType === 'service') {
	            onAddCharacteristic(item);
	        } else if (this.attributeType === 'characteristic') {
	            onAddDescriptor(item);
	        }
	    }
	
	    _isLocalAttribute() {
	        const instanceIds = (0, _api.getInstanceIds)(this.props.item.instanceId);
	        return instanceIds.device === 'local.server';
	    }
	
	    _isCCCDAttribute(uuid) {
	        return uuid === CCCD_UUID;
	    }
	
	    _onWrite(value) {
	        this.props.onWrite(this.props.item, value);
	    }
	
	    _onRead() {
	        this.props.onRead(this.props.item);
	    }
	
	    renderChildren() {
	        return null;
	    }
	
	    renderName() {
	        const item = this.props.item;
	        const handle = item.handle,
	              valueHandle = item.valueHandle,
	              uuid = item.uuid,
	              name = item.name;
	
	
	        let handleText = '';
	        if (handle) {
	            handleText = `Handle: 0x${(0, _stringUtil.toHexString)(handle)}, `;
	        } else if (valueHandle) {
	            handleText = `Value handle: 0x${(0, _stringUtil.toHexString)(valueHandle)}, `;
	        }
	
	        return _react2.default.createElement(
	            'div',
	            { className: this.attributeType + '-name truncate-text', title: handleText + 'UUID: ' + uuid },
	            name
	        );
	    }
	
	    renderError() {
	        const item = this.props.item;
	        const errorMessage = item.errorMessage;
	
	
	        const errorText = errorMessage ? errorMessage : '';
	        const hideErrorClass = errorText === '' ? 'hide' : '';
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'error-label ' + hideErrorClass },
	            errorText
	        );
	    }
	
	    renderContent(children) {
	        return null;
	    }
	
	    getChildren() {
	        const item = this.props.item;
	        const expanded = item.expanded,
	              discoveringChildren = item.discoveringChildren,
	              children = item.children;
	
	
	        const childrenList = [];
	
	        if (discoveringChildren) {
	            childrenList.push(_react2.default.createElement(_EnumeratingAttributes2.default, { key: 'enumerating-' + this.childAttributeType, bars: this.bars + 1 }));
	        } else if (children && expanded) {
	            childrenList.push(this.renderChildren());
	        }
	
	        return childrenList;
	    }
	
	    render() {
	        var _props2 = this.props;
	        const item = _props2.item,
	              selected = _props2.selected,
	              addNew = _props2.addNew;
	        const instanceId = item.instanceId,
	              expanded = item.expanded,
	              children = item.children;
	
	
	        const barList = [];
	
	        for (let i = 0; i < this.bars; i++) {
	            barList.push(_react2.default.createElement('div', { key: 'bar' + (i + 1), className: 'bar' + (i + 1) }));
	        }
	
	        const content = this.renderContent(null);
	        const childrenList = this.getChildren();
	
	        const expandIcon = expanded ? 'icon-down-dir' : 'icon-right-dir';
	        const iconStyle = !this.expandable || children && children.size === 0 && !addNew ? { display: 'none' } : {};
	        const itemIsSelected = item.instanceId === selected;
	
	        const backgroundClass = itemIsSelected ? 'brand-background' : 'neutral-background'; //@bar1-color
	
	        const backgroundColor = itemIsSelected ? '' : `rgb(${Math.floor(this.backgroundColor.r)}, ${Math.floor(this.backgroundColor.g)}, ${Math.floor(this.backgroundColor.b)})`;
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: this.attributeType + '-item ' + backgroundClass, style: { backgroundColor }, onClick: e => this._onContentClick(e) },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'expand-area', onClick: e => this._onExpandAreaClick(e) },
	                    barList,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'icon-wrap' },
	                        _react2.default.createElement('i', { className: 'icon-slim ' + expandIcon, style: iconStyle })
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'content-wrap' },
	                    content
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { style: { display: expanded ? 'block' : 'none' } },
	                childrenList,
	                addNew ? _react2.default.createElement(_AddNewItem2.default, {
	                    key: 'add-new-' + this.childAttributeType,
	                    text: 'New ' + this.childAttributeType,
	                    id: 'add-btn-' + instanceId,
	                    parentInstanceId: instanceId,
	                    selected: selected,
	                    onClick: () => this.onAddAttribute(item),
	                    bars: this.bars + 1 }) : null
	            )
	        );
	    }
	}
	exports.default = AttributeItem;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _ajaxLoader = __webpack_require__(32);
	
	var _ajaxLoader2 = _interopRequireDefault(_ajaxLoader);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ConfirmationDialog = _react2.default.createClass({
	  displayName: 'ConfirmationDialog',
	
	  getInitialState() {
	    return {
	      showModal: this.props.show,
	      showProgress: this.props.showProgress
	    };
	  },
	
	  render() {
	    const buttonDisabled = this.props.showProgress;
	    const backDrop = this.props.showProgress ? 'static' : false;
	
	    return _react2.default.createElement(
	      'div',
	      null,
	      _react2.default.createElement(
	        _reactBootstrap.Modal,
	        { show: this.props.show, onHide: this.props.onCancel, backdrop: backDrop },
	        _react2.default.createElement(
	          _reactBootstrap.Modal.Header,
	          { closeButton: !buttonDisabled },
	          _react2.default.createElement(
	            _reactBootstrap.Modal.Title,
	            null,
	            'Confirm'
	          )
	        ),
	        _react2.default.createElement(
	          _reactBootstrap.Modal.Body,
	          null,
	          _react2.default.createElement(
	            'p',
	            null,
	            this.props.text
	          )
	        ),
	        _react2.default.createElement(
	          _reactBootstrap.Modal.Footer,
	          null,
	          _react2.default.createElement(_nrfconnectCore.Spinner, { image: _ajaxLoader2.default, visible: this.props.showProgress }),
	          '\xA0',
	          _react2.default.createElement(
	            _reactBootstrap.Button,
	            { onClick: this.props.onOk, disabled: buttonDisabled },
	            'OK'
	          ),
	          _react2.default.createElement(
	            _reactBootstrap.Button,
	            { onClick: this.props.onCancel, disabled: buttonDisabled },
	            'Cancel'
	          )
	        )
	      )
	    );
	  }
	});
	
	module.exports = ConfirmationDialog;

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _UuidLookup = __webpack_require__(46);
	
	var _UuidLookup2 = _interopRequireDefault(_UuidLookup);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _validateUuid = __webpack_require__(21);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class UuidInput extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.uuid = this.props.value;
	    }
	
	    validateUuidInput() {
	        return (0, _validateUuid.validateUuid)(this.uuid);
	    }
	
	    _onUuidChange(uuid) {
	        const _hexRegEx = /^[0-9A-F]*$/i;
	        const valid = _hexRegEx.test(uuid);
	
	        if (!valid) {
	            return;
	        }
	
	        this.uuid = uuid;
	        this.value = uuid;
	
	        this.props.handleSelection(uuid);
	        this.forceUpdate();
	    }
	
	    _handleUuidSelect(event, eventKey) {
	        this._onUuidChange(eventKey);
	    }
	
	    render() {
	        var _props = this.props;
	        const label = _props.label,
	              uuidDefinitions = _props.uuidDefinitions,
	              value = _props.value;
	
	
	        const uuidSelectButton = _react2.default.createElement(_UuidLookup2.default, { onSelect: (event, eventKey) => this._handleUuidSelect(event, eventKey),
	            title: 'Predefined ' + label + 's', uuidDefs: uuidDefinitions(),
	            pullRight: true });
	
	        return _react2.default.createElement(_nrfconnectCore.TextInput, { label: label,
	            hasFeedback: true, validationState: this.validateUuidInput(),
	            value: value,
	            onChange: e => this.props.handleSelection(e.target.value),
	            buttonAfter: uuidSelectButton });
	    }
	}
	
	exports.default = UuidInput;
	UuidInput.propTypes = {
	    uuidDefinitions: _react.PropTypes.func.isRequired,
	    handleSelection: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 31 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fc9b96d5b571f162fa4733f4638a0627.gif";

/***/ },
/* 33 */
/***/ function(module, exports) {

	module.exports = {
		"_comment": {
			"comment": [
				"Add UUIDs for your services, characteristics, and descriptors in this file.",
				"The format is the UUID of the item, followed by an object containing the data.",
				"'name' is a mandatory handle, while 'format' is optional.",
				"Currently the only supported format is 'TEXT', default is 'NO_FORMAT'.",
				"The application must be reloaded to access changes in this file."
			]
		},
		"uuid16bitServiceDefinitions": {
			"180D": {
				"name": "Heart Rate"
			}
		},
		"uuid16bitCharacteristicDefinitions": {
			"2A37": {
				"name": "Heart Rate Measurement"
			},
			"2A29": {
				"name": "Manufacturer Name String",
				"format": "TEXT"
			}
		},
		"uuid16bitDescriptorDefinitions": {},
		"uuid128bitServiceDefinitions": {
			"6E400001B5A3F393E0A9E50E24DCCA9E": {
				"name": "UART over BLE"
			}
		},
		"uuid128bitCharacteristicDefinitions": {
			"6E400002B5A3F393E0A9E50E24DCCA9E": {
				"name": "UART RX"
			},
			"6E400003B5A3F393E0A9E50E24DCCA9E": {
				"name": "UART TX"
			}
		},
		"uuid128bitDescriptorDefinitions": {}
	};

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = require("os");

/***/ },
/* 36 */
/***/ function(module, exports) {

	module.exports = require("underscore");

/***/ },
/* 37 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.selectMainView = selectMainView;
	const SELECT_MAIN_VIEW = exports.SELECT_MAIN_VIEW = 'APP_SELECT_MAIN_VIEW';
	
	function selectMainViewAction(view) {
	    return {
	        type: SELECT_MAIN_VIEW,
	        view: view
	    };
	}
	
	function selectMainView(view) {
	    return selectMainViewAction(view);
	}

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ERROR_OCCURED = exports.DISCOVERY_SET_OPTIONS = exports.DISCOVERY_TOGGLE_OPTIONS_EXPANDED = exports.DISCOVERY_TOGGLE_EXPANDED = exports.DISCOVERY_SCAN_STOPPED = exports.DISCOVERY_SCAN_STARTED = exports.DISCOVERY_CLEAR_LIST = exports.DISCOVERY_DEVICE_FOUND = undefined;
	exports.clearDevicesList = clearDevicesList;
	exports.toggleScan = toggleScan;
	exports.toggleExpanded = toggleExpanded;
	exports.toggleOptionsExpanded = toggleOptionsExpanded;
	exports.setDiscoveryOptions = setDiscoveryOptions;
	
	var _common = __webpack_require__(11);
	
	const DISCOVERY_DEVICE_FOUND = exports.DISCOVERY_DEVICE_FOUND = 'DISCOVERY_DEVICE_FOUND';
	const DISCOVERY_CLEAR_LIST = exports.DISCOVERY_CLEAR_LIST = 'DISCOVERY_CLEAR_LIST';
	const DISCOVERY_SCAN_STARTED = exports.DISCOVERY_SCAN_STARTED = 'DISCOVERY_SCAN_STARTED';
	const DISCOVERY_SCAN_STOPPED = exports.DISCOVERY_SCAN_STOPPED = 'DISCOVERY_SCAN_STOPPED';
	const DISCOVERY_TOGGLE_EXPANDED = exports.DISCOVERY_TOGGLE_EXPANDED = 'DISCOVERY_TOGGLE_EXPANDED';
	const DISCOVERY_TOGGLE_OPTIONS_EXPANDED = exports.DISCOVERY_TOGGLE_OPTIONS_EXPANDED = 'DISCOVERY_TOGGLE_OPTIONS_EXPANDED';
	const DISCOVERY_SET_OPTIONS = exports.DISCOVERY_SET_OPTIONS = 'DISCOVERY_SET_OPTIONS';
	
	const ERROR_OCCURED = exports.ERROR_OCCURED = 'ERROR_OCCURED';
	
	// Internal functions
	function _startScan(dispatch, getState) {
	    return new Promise((resolve, reject) => {
	        const discoveryOptions = getState().discovery.options;
	        const scanParameters = {
	            active: discoveryOptions.activeScan,
	            interval: discoveryOptions.scanInterval,
	            window: discoveryOptions.scanWindow,
	            timeout: discoveryOptions.scanTimeout
	        };
	
	        const adapter = getState().adapter.api.selectedAdapter;
	
	        if (adapter === null || adapter === undefined) {
	            reject('No adapter is selected.');
	        }
	
	        adapter.startScan(scanParameters, error => {
	            if (error) {
	                reject(error);
	            } else {
	                resolve();
	            }
	        });
	    }).then(() => {
	        dispatch(scanStartedAction());
	    }).catch(error => {
	        dispatch(scanErrorAction(error));
	    });
	}
	
	function _stopScan(dispatch, getState) {
	    return new Promise((resolve, reject) => {
	        const adapter = getState().adapter.api.selectedAdapter;
	
	        if (adapter === null) {
	            reject('No adapter is selected.');
	        }
	
	        adapter.stopScan(error => {
	            if (error) {
	                reject(error);
	            } else {
	                resolve();
	            }
	        });
	    }).then(() => {
	        dispatch(scanStoppedAction());
	    }).catch(error => {
	        dispatch(scanErrorAction(error));
	    });
	}
	
	// Action object functions
	function scanErrorAction(error) {
	    return {
	        type: ERROR_OCCURED,
	        error
	    };
	}
	
	function clearDevicesListAction() {
	    return {
	        type: DISCOVERY_CLEAR_LIST
	    };
	}
	
	function scanStartedAction() {
	    return {
	        type: DISCOVERY_SCAN_STARTED
	    };
	}
	
	function scanStoppedAction() {
	    return {
	        type: DISCOVERY_SCAN_STOPPED
	    };
	}
	
	function toggleExpandedAction(deviceAddress) {
	    return {
	        type: DISCOVERY_TOGGLE_EXPANDED,
	        deviceAddress: deviceAddress
	    };
	}
	
	function toggleOptionsExpandedAction() {
	    return {
	        type: DISCOVERY_TOGGLE_OPTIONS_EXPANDED
	    };
	}
	
	function setDiscoveryOptionsAction(options) {
	    return {
	        type: DISCOVERY_SET_OPTIONS,
	        options
	    };
	}
	
	// Exported action starters
	function clearDevicesList() {
	    return dispatch => {
	        dispatch(clearDevicesListAction());
	    };
	}
	
	function toggleScan() {
	    return (dispatch, getState) => {
	        const selectedAdapter = (0, _common.getSelectedAdapter)(getState());
	
	        if (selectedAdapter && selectedAdapter.state) {
	            if (selectedAdapter.state.scanning && selectedAdapter.state.available) {
	                return _stopScan(dispatch, getState);
	            } else if (!selectedAdapter.state.scanning && selectedAdapter.state.available) {
	                return _startScan(dispatch, getState);
	            } else {
	                dispatch(scanErrorAction('scanInProgress and adapterIsOpen is in a combination that makes it impossible to toggle scanning.'));
	            }
	        } else {
	            dispatch(scanErrorAction('No adapter selected or adapter is missing state. Failing.'));
	        }
	    };
	}
	
	function toggleExpanded(deviceAddress) {
	    return toggleExpandedAction(deviceAddress);
	}
	
	function toggleOptionsExpanded() {
	    return toggleOptionsExpandedAction();
	}
	
	function setDiscoveryOptions(options) {
	    return setDiscoveryOptionsAction(options);
	}

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.TOGGLE_AUTOSCROLL = exports.CLEAR_ENTRIES = exports.ADD_ENTRIES = exports.ADD_ENTRY = undefined;
	exports.toggleAutoScroll = toggleAutoScroll;
	exports.clear = clear;
	exports.startReading = startReading;
	exports.stopReading = stopReading;
	
	var _logging = __webpack_require__(4);
	
	const ADD_ENTRY = exports.ADD_ENTRY = 'LOG_ADD_ENTRY';
	const ADD_ENTRIES = exports.ADD_ENTRIES = 'LOG_ADD_ENTRIES';
	const CLEAR_ENTRIES = exports.CLEAR_ENTRIES = 'LOG_CLEAR_ENTRIES';
	const TOGGLE_AUTOSCROLL = exports.TOGGLE_AUTOSCROLL = 'LOG_TOGGLE_AUTOSCROLL';
	
	let logReader;
	let entryCallback;
	
	function _startLogReader(dispatch) {
	    entryCallback = function (entries) {
	        dispatch(logAddEntriesAction(entries));
	    };
	
	    if (logReader === undefined) {
	        logReader = new _logging.LogReader();
	        logReader.on('entry', entryCallback);
	    }
	
	    logReader.start();
	}
	
	function _stopLogReader(dispatch) {
	    if (entryCallback !== undefined && logReader !== undefined) {
	        logReader.removeListener(entryCallback);
	        logReader.stop();
	    }
	}
	
	function logAddEntryAction(entry) {
	    return {
	        type: ADD_ENTRY,
	        entry
	    };
	}
	
	function logAddEntriesAction(entries) {
	    return {
	        type: ADD_ENTRIES,
	        entries
	    };
	}
	
	function clearEntriesAction() {
	    return {
	        type: CLEAR_ENTRIES
	    };
	}
	
	function toggleAutoScrollAction() {
	    return {
	        type: TOGGLE_AUTOSCROLL
	    };
	}
	
	function toggleAutoScroll() {
	    return toggleAutoScrollAction();
	}
	
	function clear() {
	    return clearEntriesAction();
	}
	
	function startReading() {
	    return dispatch => {
	        return _startLogReader(dispatch);
	    };
	}
	
	function stopReading() {
	    return dispatch => {
	        return _stopLogReader(dispatch);
	    };
	}

/***/ },
/* 40 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findSelectedItem = findSelectedItem;
	exports.traverseItems = traverseItems;
	
	function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }
	
	function findSelectedItem(deviceDetails, selectedInstanceId) {
	    for (let item of traverseItems(deviceDetails, true)) {
	        if (item.instanceId === selectedInstanceId) {
	            return item;
	        }
	    }
	}
	
	function* traverseItems(deviceDetails, skipCollapsed, backward) {
	    if (!deviceDetails) {
	        return;
	    }
	
	    const devices = deviceDetails.get('devices');
	
	    if (devices === undefined) {
	        return;
	    }
	
	    var _ref = backward ? devices.reverse().keys() : devices.keys(),
	        _ref2 = _toArray(_ref);
	
	    const deviceKeys = _ref2;
	
	
	    for (let i = 0; i < deviceKeys.length; i++) {
	        const services = devices.getIn([deviceKeys[i], 'children']);
	
	        if (services === undefined) {
	            continue;
	        }
	
	        var _ref3 = backward ? services.reverse().keys() : services.keys(),
	            _ref4 = _toArray(_ref3);
	
	        const servicesKeys = _ref4;
	
	
	        for (let j = 0; j < servicesKeys.length; j++) {
	            const service = services.get(servicesKeys[j]);
	
	            if (!backward) {
	                yield service;
	            }
	
	            if (skipCollapsed && !service.expanded) {
	                if (backward) {
	                    yield service;
	                }
	                continue;
	            }
	
	            const characteristics = services.get(servicesKeys[j]).children;
	
	            if (characteristics === undefined) {
	                continue;
	            }
	
	            var _ref5 = backward ? characteristics.reverse().keys() : characteristics.keys(),
	                _ref6 = _toArray(_ref5);
	
	            const characteristicsKeys = _ref6;
	
	
	            for (let k = 0; k < characteristicsKeys.length; k++) {
	                const characteristic = characteristics.get(characteristicsKeys[k]);
	
	                if (!backward) {
	                    yield characteristic;
	                }
	
	                if (skipCollapsed && !characteristic.expanded) {
	                    if (backward) {
	                        yield characteristic;
	                    }
	                    continue;
	                }
	
	                const descriptors = characteristics.get(characteristicsKeys[k]).children;
	
	                if (descriptors === undefined) {
	                    continue;
	                }
	
	                var _ref7 = backward ? descriptors.reverse().keys() : descriptors.keys(),
	                    _ref8 = _toArray(_ref7);
	
	                const descriptorsKeys = _ref8;
	
	
	                for (let l = 0; l < descriptorsKeys.length; l++) {
	                    yield descriptors.get(descriptorsKeys[l]);
	                }
	
	                if (backward) {
	                    yield characteristic;
	                }
	            }
	
	            if (backward) {
	                yield service;
	            }
	        }
	    }
	}

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	var _underscore = __webpack_require__(36);
	
	var _underscore2 = _interopRequireDefault(_underscore);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var AddNewItem = _react2.default.createClass({
	    displayName: 'AddNewItem',
	
	    componentWillReceiveProps: function (nextProps) {
	        //if we're selected through keyboard navigation, we need to make sure we're visible
	        let selectedId = nextProps.selected && nextProps.selected._addBtnId;
	        if (nextProps.id === selectedId && nextProps.onRequestVisibility) {
	            nextProps.onRequestVisibility();
	        }
	    },
	
	    render: function () {
	        let bars = _underscore2.default.times(this.props.bars, i => _react2.default.createElement('div', { className: 'bar' + (i + 1), key: i }));
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'add-new', onClick: this.props.onClick },
	            bars,
	            _react2.default.createElement(
	                'div',
	                { className: 'content-wrap' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'content padded-row' },
	                    _react2.default.createElement(
	                        'span',
	                        { className: 'icon-wrap' },
	                        _react2.default.createElement('i', { className: 'icon-slim icon-plus-circled' })
	                    ),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        this.props.text
	                    )
	                )
	            )
	        );
	    }
	});
	
	module.exports = AddNewItem;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _AdvertisingSetup = __webpack_require__(88);
	
	var _AdvertisingSetup2 = _interopRequireDefault(_AdvertisingSetup);
	
	var _SecurityParamsDialog = __webpack_require__(97);
	
	var _SecurityParamsDialog2 = _interopRequireDefault(_SecurityParamsDialog);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class CentralDevice extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    _onSelect(event, eventKey) {
	        var _props = this.props;
	        const onToggleAdvertising = _props.onToggleAdvertising,
	              onShowSetupDialog = _props.onShowSetupDialog,
	              onSaveSetup = _props.onSaveSetup,
	              onLoadSetup = _props.onLoadSetup,
	              onToggleAutoConnUpdate = _props.onToggleAutoConnUpdate,
	              onToggleAutoAcceptPairing = _props.onToggleAutoAcceptPairing,
	              onDeleteBondInfo = _props.onDeleteBondInfo,
	              onShowSecurityParamsDialog = _props.onShowSecurityParamsDialog,
	              onOpenCustomUuidFile = _props.onOpenCustomUuidFile;
	
	
	        switch (eventKey) {
	            case 'ToggleAdvertising':
	                onToggleAdvertising();
	                break;
	            case 'AdvertisingSetup':
	                onShowSetupDialog();
	                break;
	            case 'SaveSetup':
	                onSaveSetup();
	                break;
	            case 'LoadSetup':
	                onLoadSetup();
	                break;
	            case 'ToggleAutoConnUpdate':
	                onToggleAutoConnUpdate();
	                break;
	            case 'ToggleAutoAcceptPairing':
	                onToggleAutoAcceptPairing();
	                break;
	            case 'DeleteBondInfo':
	                onDeleteBondInfo();
	                break;
	            case 'SetSecurityParams':
	                onShowSecurityParamsDialog();
	                break;
	            case 'OpenCustomUuidFile':
	                onOpenCustomUuidFile();
	                break;
	            default:
	                console.log('Unknown eventKey received: ' + eventKey);
	        }
	    }
	
	    render() {
	        var _props2 = this.props;
	        const id = _props2.id,
	              name = _props2.name,
	              address = _props2.address,
	              advertising = _props2.advertising,
	              onToggleAdvertising = _props2.onToggleAdvertising,
	              onSaveSetup = _props2.onSaveSetup,
	              onLoadSetup = _props2.onLoadSetup,
	              onToggleAutoConnUpdate = _props2.onToggleAutoConnUpdate,
	              autoConnUpdate = _props2.autoConnUpdate,
	              onToggleAutoAcceptPairing = _props2.onToggleAutoAcceptPairing,
	              onDeleteBondInfo = _props2.onDeleteBondInfo,
	              onShowSecurityParamsDialog = _props2.onShowSecurityParamsDialog,
	              onOpenCustomUuidFile = _props2.onOpenCustomUuidFile,
	              security = _props2.security;
	
	
	        const style = {
	            position: 'relative',
	            height: '102px'
	        };
	
	        const progressStyle = {
	            visibility: advertising ? 'visible' : 'hidden'
	        };
	
	        const iconOpacity = advertising ? '' : 'icon-background';
	        const advMenuText = advertising ? 'Stop advertising' : 'Start advertising';
	        const advIconTitle = advertising ? 'Advertising' : 'Not advertising';
	        const iconCheckmarkConnUpdate = autoConnUpdate ? 'icon-ok' : '';
	        const iconCheckmarkPairing = security && security.autoAcceptPairing ? 'icon-ok' : '';
	
	        return _react2.default.createElement(
	            'div',
	            { id: id, className: 'device main-device standalone', style: style },
	            _react2.default.createElement('img', { className: 'center-block', src: 'resources/nordic_usb_icon.png', height: '41', width: '16', title: 'Development kit or dongle' }),
	            _react2.default.createElement(
	                'div',
	                { className: 'device-body text-small' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'pull-right' },
	                    _react2.default.createElement(
	                        _reactBootstrap.Dropdown,
	                        { id: 'connectionDropDown', onSelect: (eventKey, event) => {
	                                this._onSelect(event, eventKey);
	                            } },
	                        _react2.default.createElement(
	                            _reactBootstrap.Dropdown.Toggle,
	                            { noCaret: true },
	                            _react2.default.createElement('span', { className: 'icon-cog', 'aria-hidden': 'true' })
	                        ),
	                        _react2.default.createElement(
	                            _reactBootstrap.Dropdown.Menu,
	                            null,
	                            (() => {
	                                const items = [];
	
	                                if (onToggleAdvertising !== undefined) {
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'advHeader', header: true },
	                                        'Advertising'
	                                    ));
	                                    if (advertising !== undefined) {
	                                        items.push(_react2.default.createElement(
	                                            _reactBootstrap.MenuItem,
	                                            { key: 'setup', eventKey: 'AdvertisingSetup' },
	                                            'Advertising setup...'
	                                        ));
	                                    }
	
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'advertising', eventKey: 'ToggleAdvertising' },
	                                        advMenuText,
	                                        ' ',
	                                        _react2.default.createElement(
	                                            'span',
	                                            { className: 'subtler-text' },
	                                            '(Alt+A)'
	                                        )
	                                    ));
	                                }
	
	                                if (onLoadSetup !== undefined) {
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'load', eventKey: 'LoadSetup' },
	                                        'Load setup...'
	                                    ));
	                                }
	
	                                if (onSaveSetup !== undefined) {
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'save', eventKey: 'SaveSetup' },
	                                        'Save setup...'
	                                    ));
	                                }
	
	                                if (onToggleAutoConnUpdate !== undefined) {
	                                    items.push(_react2.default.createElement(_reactBootstrap.MenuItem, { key: 'dividerConnUpdate', divider: true }));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'connUpdateHeader', header: true },
	                                        'Connection update'
	                                    ));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'autoConnUpdate',
	                                            title: 'Automatically accept connection update requests',
	                                            eventKey: 'ToggleAutoConnUpdate' },
	                                        _react2.default.createElement('i', { className: iconCheckmarkConnUpdate }),
	                                        'Auto accept update requests'
	                                    ));
	                                }
	
	                                if (onToggleAutoAcceptPairing !== undefined && onShowSecurityParamsDialog !== undefined) {
	                                    items.push(_react2.default.createElement(_reactBootstrap.MenuItem, { key: 'dividerSecurity', divider: true }));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'securityHeader', header: true },
	                                        'Security'
	                                    ));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'setSecurityParams',
	                                            title: 'Configure security parameters related to pairing',
	                                            eventKey: 'SetSecurityParams' },
	                                        'Security parameters...'
	                                    ));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'autoAcceptPairing',
	                                            title: 'Automatically accept security requests',
	                                            eventKey: 'ToggleAutoAcceptPairing' },
	                                        _react2.default.createElement('i', { className: iconCheckmarkPairing }),
	                                        'Auto reply security requests'
	                                    ));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'deleteBondInfo',
	                                            title: 'Delete bond information',
	                                            eventKey: 'DeleteBondInfo' },
	                                        'Delete bond information'
	                                    ));
	                                }
	
	                                if (onOpenCustomUuidFile !== undefined) {
	                                    items.push(_react2.default.createElement(_reactBootstrap.MenuItem, { key: 'dividerOpenUuidFile', divider: true }));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'headerOpenUuidFile', header: true },
	                                        'Custom UUID definitions'
	                                    ));
	                                    items.push(_react2.default.createElement(
	                                        _reactBootstrap.MenuItem,
	                                        { key: 'openUuidFile',
	                                            title: 'Open custom UUID definitions file in default text editor',
	                                            eventKey: 'OpenCustomUuidFile' },
	                                        'Open UUID definitions file'
	                                    ));
	                                }
	
	                                return items;
	                            })()
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'role-flag pull-right' },
	                        'Adapter'
	                    ),
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        name
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'address-text' },
	                    address
	                ),
	                _react2.default.createElement('div', { className: 'icon-wifi ' + iconOpacity, 'aria-hidden': 'true', title: advIconTitle, style: progressStyle }),
	                _react2.default.createElement(_AdvertisingSetup2.default, null),
	                _react2.default.createElement(_SecurityParamsDialog2.default, null)
	            )
	        );
	    }
	}
	
	exports.default = CentralDevice;
	CentralDevice.propTypes = {
	    id: _react.PropTypes.string.isRequired,
	    name: _react.PropTypes.string,
	    address: _react.PropTypes.string,
	    advertising: _react.PropTypes.bool,
	    onToggleAdvertising: _react.PropTypes.func,
	    onShowSetupDialog: _react.PropTypes.func,
	    onSaveSetup: _react.PropTypes.func,
	    onLoadSetup: _react.PropTypes.func,
	    autoConnUpdate: _react.PropTypes.bool,
	    autoAcceptPairing: _react.PropTypes.bool,
	    onToggleAutoConnUpdate: _react.PropTypes.func,
	    onToggleAutoAcceptPairing: _react.PropTypes.func,
	    onDeleteBondInfo: _react.PropTypes.func,
	    onOpenCustomUuidFile: _react.PropTypes.func
	};
	module.exports = exports['default'];

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _ajaxLoader = __webpack_require__(32);
	
	var _ajaxLoader2 = _interopRequireDefault(_ajaxLoader);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class EnumeratingAttributes extends _react2.default.PureComponent {
	    render() {
	        const barList = [];
	
	        for (let i = 0; i < this.props.bars; i++) {
	            barList.push(_react2.default.createElement('div', { key: 'bar' + (i + 1), className: 'bar' + (i + 1) }));
	        }
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'enumerating-items-wrap' },
	            barList,
	            _react2.default.createElement(
	                'div',
	                { className: 'enumerating-content' },
	                _react2.default.createElement(_nrfconnectCore.Spinner, { image: _ajaxLoader2.default, visible: true, className: 'spinner center-block', size: 20 })
	            )
	        );
	    }
	}
	exports.default = EnumeratingAttributes;
	module.exports = exports['default'];

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SecurityParamsControls = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const IO_CAPS_DISPLAY_ONLY = 0;
	const IO_CAPS_DISPLAY_YESNO = 1;
	const IO_CAPS_KEYBOARD_ONLY = 2;
	const IO_CAPS_NONE = 3;
	const IO_CAPS_KEYBOARD_DISPLAY = 4;
	
	class SecurityParamsControls extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this.ioCaps = props.securityParams.io_caps;
	        this.enableLesc = props.securityParams.lesc;
	        this.enableMitm = props.securityParams.mitm;
	        this.enableOob = props.securityParams.oob;
	        this.enableKeypress = props.securityParams.keypress;
	        this.performBonding = props.securityParams.bond;
	
	        this.ioCapsTitle = this.keyToIoCapsText(this.ioCaps);
	    }
	
	    onIoCapsSelect(event, eventKey) {
	        this.ioCaps = parseInt(eventKey);
	        this.ioCapsTitle = this.keyToIoCapsText(this.ioCaps);
	        this.handleChange();
	        this.forceUpdate();
	    }
	
	    keyToIoCapsText(key) {
	        switch (key) {
	            case IO_CAPS_DISPLAY_ONLY:
	                return 'Display, no keyboard';
	
	            case IO_CAPS_DISPLAY_YESNO:
	                return 'Display and yes no entry';
	
	            case IO_CAPS_KEYBOARD_ONLY:
	                return 'Keyboard, no display';
	
	            case IO_CAPS_NONE:
	                return 'No keyboard, no display';
	
	            case IO_CAPS_KEYBOARD_DISPLAY:
	                return 'Keyboard and display';
	        }
	    }
	
	    handleCheckboxChange(variableName, checked) {
	        this[variableName] = checked;
	        this.handleChange();
	    }
	
	    handleChange() {
	        const newSecParams = {
	            io_caps: this.ioCaps,
	            lesc: this.enableLesc,
	            mitm: this.enableMitm,
	            oob: this.enableOob,
	            keypress: this.enableKeypress,
	            bond: this.performBonding
	        };
	
	        this.props.onChange(newSecParams);
	    }
	
	    render() {
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'label',
	                    { className: 'control-label col-sm-4' },
	                    'IO capabilities'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-7' },
	                    _react2.default.createElement(
	                        _reactBootstrap.DropdownButton,
	                        { title: this.ioCapsTitle, key: 'ioCapsDropdownKey',
	                            id: 'ioCapsDropdownId', onSelect: (eventKey, event) => this.onIoCapsSelect(event, eventKey) },
	                        _react2.default.createElement(
	                            _reactBootstrap.MenuItem,
	                            { eventKey: IO_CAPS_DISPLAY_ONLY },
	                            this.keyToIoCapsText(IO_CAPS_DISPLAY_ONLY)
	                        ),
	                        _react2.default.createElement(
	                            _reactBootstrap.MenuItem,
	                            { eventKey: IO_CAPS_DISPLAY_YESNO },
	                            this.keyToIoCapsText(IO_CAPS_DISPLAY_YESNO)
	                        ),
	                        _react2.default.createElement(
	                            _reactBootstrap.MenuItem,
	                            { eventKey: IO_CAPS_KEYBOARD_ONLY },
	                            this.keyToIoCapsText(IO_CAPS_KEYBOARD_ONLY)
	                        ),
	                        _react2.default.createElement(
	                            _reactBootstrap.MenuItem,
	                            { eventKey: IO_CAPS_NONE },
	                            this.keyToIoCapsText(IO_CAPS_NONE)
	                        ),
	                        _react2.default.createElement(
	                            _reactBootstrap.MenuItem,
	                            { eventKey: IO_CAPS_KEYBOARD_DISPLAY },
	                            this.keyToIoCapsText(IO_CAPS_KEYBOARD_DISPLAY)
	                        )
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'label',
	                    { className: 'control-label col-sm-4' },
	                    'Authentication'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-7' },
	                    _react2.default.createElement(
	                        _reactBootstrap.Checkbox,
	                        { defaultChecked: this.enableLesc,
	                            onChange: event => this.handleCheckboxChange('enableLesc', event.target.checked) },
	                        'Enable LE Secure Connection pairing'
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.Checkbox,
	                        { defaultChecked: this.enableMitm,
	                            onChange: event => this.handleCheckboxChange('enableMitm', event.target.checked) },
	                        'Enable MITM protection'
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.Checkbox,
	                        { defaultChecked: this.enableOob,
	                            onChange: event => this.handleCheckboxChange('enableOob', event.target.checked) },
	                        'Enable OOB data'
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'label',
	                    { className: 'control-label col-sm-4' },
	                    'Keypress notifications'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-7' },
	                    _react2.default.createElement(
	                        _reactBootstrap.Checkbox,
	                        { defaultChecked: this.enableKeypress,
	                            onChange: event => this.handleCheckboxChange('enableKeypress', event.target.checked) },
	                        'Enable keypress notifications'
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'label',
	                    { className: 'control-label col-sm-4' },
	                    'Bonding'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-sm-7' },
	                    _react2.default.createElement(
	                        _reactBootstrap.Checkbox,
	                        {
	                            defaultChecked: this.performBonding,
	                            onChange: event => this.handleCheckboxChange('performBonding', event.target.checked) },
	                        'Perform bonding'
	                    )
	                )
	            )
	        );
	    }
	}
	
	exports.SecurityParamsControls = SecurityParamsControls;
	SecurityParamsControls.propTypes = {
	    onChange: _react.PropTypes.func.isRequired,
	    securityParams: _react.PropTypes.object
	};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _AttributeItem = __webpack_require__(28);
	
	var _AttributeItem2 = _interopRequireDefault(_AttributeItem);
	
	var _CharacteristicItem = __webpack_require__(67);
	
	var _CharacteristicItem2 = _interopRequireDefault(_CharacteristicItem);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class ServiceItem extends _AttributeItem2.default {
	
	    constructor(props) {
	        super(props);
	        this.bars = 1;
	        this.attributeType = 'service';
	        this.childAttributeType = 'characteristic';
	    }
	
	    renderContent(children) {
	        const button = this.props.button;
	
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'content' },
	            this.renderName(),
	            button && _react2.default.createElement(
	                'button',
	                { className: 'btn btn-primary btn-nordic', onClick: () => button.onClick() },
	                _react2.default.createElement('img', { src: button.icon })
	            ),
	            children
	        );
	    }
	
	    renderChildren() {
	        var _props = this.props;
	        const item = _props.item,
	              selected = _props.selected,
	              addNew = _props.addNew,
	              selectOnClick = _props.selectOnClick,
	              onAddDescriptor = _props.onAddDescriptor,
	              onSelectAttribute = _props.onSelectAttribute,
	              onSetAttributeExpanded = _props.onSetAttributeExpanded,
	              onReadCharacteristic = _props.onReadCharacteristic,
	              onWriteCharacteristic = _props.onWriteCharacteristic,
	              onReadDescriptor = _props.onReadDescriptor,
	              onWriteDescriptor = _props.onWriteDescriptor;
	        const children = item.children;
	
	
	        return children.map(characteristic => _react2.default.createElement(_CharacteristicItem2.default, {
	            key: characteristic.instanceId,
	            item: characteristic,
	            selectOnClick: selectOnClick,
	            selected: selected,
	            onSelectAttribute: onSelectAttribute,
	            onSetAttributeExpanded: onSetAttributeExpanded,
	            onRead: onReadCharacteristic,
	            onWrite: onWriteCharacteristic,
	            onReadDescriptor: onReadDescriptor,
	            onWriteDescriptor: onWriteDescriptor,
	            onChange: () => this._childChanged(),
	            addNew: addNew,
	            onAddDescriptor: onAddDescriptor }));
	    }
	}
	exports.default = ServiceItem;
	ServiceItem.propTypes = {
	    item: _react.PropTypes.object.isRequired,
	    selected: _react.PropTypes.string,
	    button: _react.PropTypes.shape({
	        icon: _react.PropTypes.string,
	        onClick: _react.PropTypes.func
	    }),
	    onAddDescriptor: _react.PropTypes.func,
	    onSelectAttribute: _react.PropTypes.func,
	    onSetAttributeExpanded: _react.PropTypes.func,
	    onReadCharacteristic: _react.PropTypes.func,
	    onWriteCharacteristic: _react.PropTypes.func,
	    onReadDescriptor: _react.PropTypes.func,
	    onWriteDescriptor: _react.PropTypes.func
	};
	module.exports = exports['default'];

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _uuid_definitions = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class UuidLookup extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    shouldComponentUpdate(nextProps, nextState) {
	        return !(JSON.stringify(this.props.uuidDefs) === JSON.stringify(nextProps.uuidDefs));
	    }
	
	    formatUuid(value) {
	        if (!value) {
	            return value;
	        }
	
	        if (value.length > 8) {
	            return value.slice(0, 8) + '... ';
	        }
	
	        return value;
	    }
	
	    render() {
	        var _props = this.props;
	        const title = _props.title,
	              onSelect = _props.onSelect,
	              uuidDefs = _props.uuidDefs,
	              pullRight = _props.pullRight;
	
	
	        const sorted = Object.keys(uuidDefs).sort((a, b) => {
	            return parseInt(a, 16) - parseInt(b, 16);
	        });
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'uuid-lookup' },
	            _react2.default.createElement(
	                _reactBootstrap.Dropdown,
	                { className: 'uuid-dropdown', id: 'dropdown-uuid-lookup', title: title,
	                    onSelect: (eventKey, event) => onSelect(event, eventKey),
	                    pullRight: pullRight },
	                _react2.default.createElement(
	                    _reactBootstrap.Dropdown.Toggle,
	                    { noCaret: true },
	                    _react2.default.createElement('span', { className: 'icon-search', 'aria-hidden': 'true' })
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Dropdown.Menu,
	                    { className: 'scroll-menu' },
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { header: true, key: 'header0' },
	                        title
	                    ),
	                    sorted.map((uuid, index) => {
	                        return _react2.default.createElement(
	                            _reactBootstrap.MenuItem,
	                            {
	                                key: index,
	                                title: uuid + ': ' + (0, _uuid_definitions.getUuidName)(uuid),
	                                eventKey: uuid
	                            },
	                            this.formatUuid(uuid) + ': ' + (0, _uuid_definitions.getUuidName)(uuid)
	                        );
	                    })
	                )
	            )
	        );
	    }
	}
	
	exports.default = UuidLookup;
	UuidLookup.propTypes = {
	    title: _react.PropTypes.string,
	    onSelect: _react.PropTypes.func.isRequired,
	    uuidDefs: _react.PropTypes.object.isRequired,
	    pullRight: _react.PropTypes.bool
	};
	
	UuidLookup.defaultProps = {
	    title: 'Predefined UUIDs',
	    uuidDefs: (0, _uuid_definitions.uuidDefinitions)(),
	    pullRight: false
	
	};
	module.exports = exports['default'];

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	__webpack_require__(141);
	
	__webpack_require__(139);
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _appActions = __webpack_require__(37);
	
	var AppActions = _interopRequireWildcard(_appActions);
	
	var _advertisingActions = __webpack_require__(15);
	
	var AdvertisingActions = _interopRequireWildcard(_advertisingActions);
	
	var _errorDialogActions = __webpack_require__(12);
	
	var ErrorActions = _interopRequireWildcard(_errorDialogActions);
	
	var _DeviceDetails = __webpack_require__(90);
	
	var _DeviceDetails2 = _interopRequireDefault(_DeviceDetails);
	
	var _ServerSetup = __webpack_require__(98);
	
	var _ServerSetup2 = _interopRequireDefault(_ServerSetup);
	
	var _navbar = __webpack_require__(87);
	
	var _navbar2 = _interopRequireDefault(_navbar);
	
	var _BLEEventDialog = __webpack_require__(89);
	
	var _BLEEventDialog2 = _interopRequireDefault(_BLEEventDialog);
	
	var _ErrorDialog = __webpack_require__(93);
	
	var _ErrorDialog2 = _interopRequireDefault(_ErrorDialog);
	
	var _LogViewer = __webpack_require__(94);
	
	var _LogViewer2 = _interopRequireDefault(_LogViewer);
	
	var _DiscoveredDevices = __webpack_require__(92);
	
	var _DiscoveredDevices2 = _interopRequireDefault(_DiscoveredDevices);
	
	var _adapterActions = __webpack_require__(3);
	
	var _atomKeymap = __webpack_require__(142);
	
	var _atomKeymap2 = _interopRequireDefault(_atomKeymap);
	
	var _electron = __webpack_require__(13);
	
	var _fs = __webpack_require__(22);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const keymaps = new _atomKeymap2.default();
	
	
	let toggleAdvertisingHandle;
	let toggleDebugHandle;
	
	class AppContainer extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this.state = {
	            windowHeight: window.innerHeight
	        };
	
	        keymaps.defaultTarget = document.body;
	
	        // Pass all the window's keydown events to the KeymapManager
	        document.addEventListener('keydown', event => {
	            keymaps.handleKeyboardEvent(event);
	        });
	
	        const keymapFile = _electron.remote.getGlobal('keymap');
	
	        if (_fs2.default.existsSync(keymapFile)) {
	            keymaps.loadKeymap(keymapFile);
	        } else {
	            keymaps.add('core', {
	                body: {
	                    'alt-1': 'core:connection-map',
	                    'alt-2': 'core:server-setup',
	                    'alt-a': 'core:toggle-advertising',
	                    'alt-c': 'core:clear-scan',
	                    'alt-p': 'core:select-adapter',
	                    'alt-s': 'core:toggle-scan',
	                    down: 'core:move-down',
	                    up: 'core:move-up',
	                    left: 'core:move-left',
	                    right: 'core:move-right',
	                    'ctrl-alt-d': 'core:toggle-debug'
	                }
	            });
	        }
	
	        // These shall always be added
	        keymaps.add('core', {
	            'body .native-key-bindings': {
	                left: 'native!',
	                right: 'native!',
	                up: 'native!',
	                down: 'native!'
	            }
	        });
	
	        this._registerKeyboardShortcuts();
	    }
	
	    _registerKeyboardShortcuts() {
	        // Setup keyboard shortcut callbacks
	        //
	        // Since we move between the different "tabs" we have to
	        // remove the listeners and add them again so that the correct instance
	        // of this class is associated with the callback registered on window.
	
	        this.toggleAdvertising = () => {
	            const toggleAdvertising = this.props.toggleAdvertising;
	
	            toggleAdvertising();
	        };
	
	        if (toggleAdvertisingHandle) {
	            window.removeEventListener('core:toggle-advertising', toggleAdvertisingHandle);
	        }
	
	        window.addEventListener('core:toggle-advertising', this.toggleAdvertising);
	        toggleAdvertisingHandle = this.toggleAdvertising;
	
	        this.toggleDebug = () => {
	            const toggleDebug = this.props.toggleDebug;
	
	            toggleDebug();
	        };
	
	        if (toggleDebugHandle) {
	            window.removeEventListener('core:toggle-debug', toggleDebugHandle);
	            toggleDebugHandle = undefined;
	        }
	
	        window.addEventListener('core:toggle-debug', this.toggleDebug);
	        toggleDebugHandle = this.toggleDebug;
	    }
	
	    componentWillMount() {
	        (function () {
	            const throttle = function (type, name, obj) {
	                let running = false;
	                const object = obj || window;
	                const func = () => {
	                    if (running) {
	                        return;
	                    }
	
	                    running = true;
	                    requestAnimationFrame(function () {
	                        object.dispatchEvent(new CustomEvent(name));
	                        running = false;
	                    });
	                };
	
	                object.addEventListener(type, func);
	            };
	
	            throttle('resize', 'optimizedResize');
	        })();
	
	        // handle event
	        window.addEventListener('optimizedResize', () => {
	            this.setState({ windowHeight: window.innerHeight }); //document.documentElement.clientHeight;
	        });
	    }
	
	    componentDidMount() {
	        // Trigger things off by starting to get adapters
	        this.props.findAdapters();
	    }
	
	    render() {
	        var _props = this.props;
	        const selectedMainView = _props.selectedMainView,
	              selectMainView = _props.selectMainView;
	
	        const topBarHeight = 55;
	        const layoutStyle = {
	            height: this.state.windowHeight - topBarHeight
	        };
	        const mainAreaHeight = layoutStyle.height - 189;
	
	        const active = selectedMainView === 'ConnectionMap' ? _react2.default.createElement(_DeviceDetails2.default, { style: { height: mainAreaHeight } }) : selectedMainView === 'ServerSetup' ? _react2.default.createElement(_ServerSetup2.default, { style: { height: mainAreaHeight } }) : null;
	
	        return _react2.default.createElement(
	            'div',
	            { id: 'main-area-wrapper' },
	            _react2.default.createElement(_navbar2.default, { onChangeMainView: view => selectMainView(view), view: selectedMainView, ref: 'navBar' }),
	            _react2.default.createElement(
	                'div',
	                { className: 'main-layout', style: layoutStyle },
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        null,
	                        active
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        null,
	                        _react2.default.createElement(_LogViewer2.default, null)
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(_DiscoveredDevices2.default, null)
	                )
	            ),
	            _react2.default.createElement(_BLEEventDialog2.default, null),
	            _react2.default.createElement(_ErrorDialog2.default, null)
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const app = state.app;
	
	
	    return {
	        selectedMainView: app.selectedMainView
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    return Object.assign({ findAdapters: () => dispatch((0, _adapterActions.findAdapters)()) }, (0, _redux.bindActionCreators)(AppActions, dispatch), (0, _redux.bindActionCreators)(AdvertisingActions, dispatch), (0, _redux.bindActionCreators)(ErrorActions, dispatch));
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(AppContainer);
	
	
	AppContainer.propTypes = {
	    selectedMainView: _react.PropTypes.string.isRequired,
	    selectMainView: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	if (process.env.NODE_ENV === 'production') {
	    module.exports = __webpack_require__(96);
	} else {
	    module.exports = __webpack_require__(95);
	}

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.logger = undefined;
	exports.getLogFilePath = getLogFilePath;
	
	var _winston = __webpack_require__(160);
	
	var _winston2 = _interopRequireDefault(_winston);
	
	var _util = __webpack_require__(159);
	
	var _util2 = _interopRequireDefault(_util);
	
	var _sqlite = __webpack_require__(157);
	
	var _sqlite2 = _interopRequireDefault(_sqlite);
	
	var _electron = __webpack_require__(13);
	
	var _path = __webpack_require__(56);
	
	var _path2 = _interopRequireDefault(_path);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	let filePrefix = new Date().toISOString().replace(/:/gi, '_');
	
	let defaultLogFile = filePrefix + '-log.txt';
	let defaultDbFile = filePrefix + '-logger.db';
	
	// Need to retrieve logFileDir from index.js since we do not have access to app.getPath in this file
	defaultLogFile = _electron.remote.getGlobal('userDataDir') + _path2.default.sep + defaultLogFile;
	defaultDbFile = _electron.remote.getGlobal('userDataDir') + _path2.default.sep + defaultDbFile;
	
	let id = 0; // ID is used as primary key in database
	
	const convertLevel = function (level) {
	    /**
	    * @brief Adds log entries to database and datastore
	    * @details Adds log entries to database and datastore
	    *
	    * @param entries An array with log entries
	    * @param level Log level used for array of entries. May be one of the following:
	    *
	    *    TRACE   = 0
	    *    DEBUG   = 1
	    *    INFO    = 2
	    *    WARNING = 3
	    *    ERROR   = 4
	    *    FATAL   = 5
	    *
	    * @return undefined
	    */
	
	    // Convert log level
	    if (level === 'trace') {
	        return 0;
	    } else if (level === 'debug') {
	        return 1;
	    } else if (level === 'verbose') {
	        return 2;
	    } else if (level === 'info') {
	        return 3;
	    } else if (level === 'warn') {
	        return 4;
	    } else if (level === 'error') {
	        return 5;
	    } else {
	        return 3; // If level is not known, set it to info
	    }
	};
	
	const DbLogger = _winston2.default.transports.DbLogger = function (options) {
	    this.name = 'db';
	    this.level = options.level || 'info';
	    this.filename = options.filename || defaultDbFile;
	    this.db = null;
	    this.dbReady = false;
	    this._queue = [];
	
	    this.db = new _sqlite2.default.Database(this.filename);
	
	    this.db.serialize(() => {
	        this.db.run('CREATE TABLE IF NOT EXISTS log_entries(id INTEGER PRIMARY KEY, time TEXT, level INTEGER, message TEXT, meta TEXT)');
	        this.db.run('CREATE INDEX IF NOT EXISTS log_entries_time on log_entries(time)');
	        this.db.run('CREATE INDEX IF NOT EXISTS log_entries_id on log_entries(id)');
	        this.db.run('CREATE INDEX IF NOT EXISTS log_entries_level on log_entries(level)', () => {
	            this.dbReady = true;
	            processQueue();
	        });
	    });
	
	    const _this = this;
	
	    function processQueue() {
	        _this._queue.forEach(operation => {
	            _this[operation.method].apply(_this, operation.args);
	        });
	
	        delete _this._queue;
	    }
	};
	
	_util2.default.inherits(DbLogger, _winston2.default.Transport);
	
	DbLogger.prototype.log = function (level, msg, meta, callback) {
	    if (this.silent) {
	        return callback(null, true);
	    }
	
	    if (!this.dbReady) {
	        console.log('Database is not ready yet. Storing entries in queue for later storage in DB.');
	
	        this._queue.push({
	            method: 'log',
	            args: arguments
	        });
	
	        return;
	    }
	
	    let timestamp = new Date();
	
	    // Check if we have timestamp in meta data
	    if (meta !== undefined) {
	        if (meta.timestamp !== undefined) {
	            timestamp = meta.timestamp;
	        }
	
	        meta = JSON.stringify(meta);
	    }
	
	    // TODO: We have to figure out if this is an array of events from the ble driver.
	    // TODO: Postpone this to later.
	    const stmt = this.db.prepare('INSERT INTO log_entries(id, time, level, message, meta) VALUES(?,?,?,?,?)');
	
	    stmt.run(id, timestamp.toISOString(), convertLevel(level), msg, meta, err => {
	        if (err) {
	            // Log to console.log because we may not have a valid logger if we get here.
	            console.log(`Error storing log entry, ${err}`);
	        }
	
	        this.emit('logged');
	        callback(null, this.lastID);
	    });
	
	    id++;
	};
	
	DbLogger.prototype.query = function (options, callback) {
	    if (!this.dbReady) {
	        callback(null);
	        return;
	    }
	
	    const opt = {
	        start: options.start,
	        limit: options.rows,
	        sort: { id: options.order === 'desc' ? 'DESC' : 'ASC' }
	    };
	
	    const sql = `SELECT * FROM log_entries WHERE id >= ${opt.start} ORDER BY id ${opt.sort.id}`;
	    const entries = [];
	
	    this.db.each(sql, (err, row) => {
	        if (err) {
	            callback(err);
	            return;
	        }
	
	        if (row === null) {
	            return;
	        }
	
	        entries.push(row);
	    }, function (err, rowCount) {
	        callback(null, entries);
	    });
	};
	
	const createLine = function (options) {
	    let timestamp = options.timestamp();
	
	    if (options.meta !== undefined && options.meta.timestamp !== undefined) {
	        timestamp = options.meta.timestamp;
	    }
	
	    const level = options.level.toUpperCase();
	    const message = options.message !== undefined ? options.message : '';
	
	    return `${timestamp.toISOString()} ${level} ${message}`;
	};
	
	const transports = [new _winston2.default.transports.DbLogger({
	    name: 'db_logger',
	    filename: defaultDbFile,
	    level: 'info'
	}), new _winston2.default.transports.File({
	    name: 'file',
	    filename: defaultLogFile,
	    level: 'debug',
	    json: false,
	    timestamp: function () {
	        return new Date();
	    },
	
	    formatter: createLine
	})];
	
	const isConsoleAvailable = () => {
	    try {
	        process.stdout.write('');
	    } catch (error) {
	        return false;
	    }
	    return true;
	};
	
	if (process.env.NODE_ENV === 'development' && isConsoleAvailable()) {
	    transports.push(new _winston2.default.transports.Console({
	        name: 'console',
	        level: 'silly',
	        timestamp: function () {
	            return new Date();
	        },
	
	        formatter: createLine
	    }));
	}
	
	const logger = exports.logger = new _winston2.default.Logger({
	    transports: transports
	});
	
	function getLogFilePath() {
	    return defaultLogFile;
	}

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getImmutableSecurityParameters = getImmutableSecurityParameters;
	exports.default = discovery;
	
	var _immutable = __webpack_require__(5);
	
	var _immutable2 = _interopRequireDefault(_immutable);
	
	var _securityActions = __webpack_require__(17);
	
	var SecurityActions = _interopRequireWildcard(_securityActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _api = __webpack_require__(9);
	
	var apiHelper = _interopRequireWildcard(_api);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const IO_CAPS_DISPLAY_ONLY = 0;
	const IO_CAPS_DISPLAY_YESNO = 1;
	const IO_CAPS_KEYBOARD_ONLY = 2;
	const IO_CAPS_NONE = 3;
	const IO_CAPS_KEYBOARD_DISPLAY = 4;
	
	const SecurityParameters = (0, _immutable.Record)({
	    bond: false,
	    io_caps: IO_CAPS_KEYBOARD_DISPLAY,
	    lesc: false,
	    mitm: false,
	    oob: false,
	    keypress: false,
	    min_key_size: 7,
	    max_key_size: 16,
	    kdist_own: {
	        enc: true, /**< Long Term Key and Master Identification. */
	        id: false, /**< Identity Resolving Key and Identity Address Information. */
	        sign: false, /**< Connection Signature Resolving Key. */
	        link: false },
	    kdist_peer: {
	        enc: true, /**< Long Term Key and Master Identification. */
	        id: false, /**< Identity Resolving Key and Identity Address Information. */
	        sign: false, /**< Connection Signature Resolving Key. */
	        link: false }
	});
	
	function getImmutableSecurityParameters(params) {
	    return new SecurityParameters(params);
	}
	
	const EncryptionInfo = (0, _immutable.Record)({
	    ltk: (0, _immutable.List)(),
	    lesc: false,
	    auth: false,
	    ltk_len: 16
	});
	
	const ConnectionSecurityParameters = (0, _immutable.Record)({
	    ownParams: new SecurityParameters(),
	    peerParams: new SecurityParameters()
	});
	
	const InitialState = (0, _immutable.Record)({
	    securityParams: new SecurityParameters(),
	    showingSecurityDialog: false,
	    autoAcceptPairing: true,
	    bondStore: new Map(),
	    connectionsSecParameters: new Map()
	});
	
	function authStatus(state, device, params) {
	    const newState = state.set('bondStore', state.bondStore.set(device.address, _immutable2.default.fromJS(params.keyset)));
	    console.log(`Store bonding information for device ${device.address}: ${JSON.stringify(state.bondStore)}`);
	    return newState;
	}
	
	function addBondInfo(state, device, params) {
	    const newState = state.set('bondStore', state.bondStore.set(device.address, _immutable2.default.fromJS(params.keyset)));
	    _logging.logger.info(`Storing bond info for device ${device.address}`);
	    _logging.logger.debug(`Bond info: ${JSON.stringify(state.bondStore)}`);
	    return newState;
	}
	
	function storeConnectionSecurityParameters(state, device, ownParams, peerParams) {
	    let params = state.getIn(['connectionsSecParameters', device.address]);
	
	    if (!params) {
	        params = new ConnectionSecurityParameters({
	            ownParams,
	            peerParams
	        });
	    } else {
	        if (ownParams !== undefined && ownParams !== null) {
	            params = params.set('ownParams', ownParams);
	        }
	
	        if (peerParams !== undefined && peerParams !== null) {
	            params = params.set('peerParams', peerParams);
	        }
	    }
	
	    return state.setIn(['connectionsSecParameters', device.address], params);
	}
	
	function deleteConnectionSecurityParameters(state, device) {
	    return state.deleteIn(['connectionsSecParameters', device.address]);
	}
	
	const initialState = new InitialState();
	
	function discovery() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case SecurityActions.SECURITY_SET_PARAMS:
	            return state.set('securityParams', new SecurityParameters(action.params));
	        case SecurityActions.SECURITY_HIDE_DIALOG:
	            return state.set('showingSecurityDialog', false);
	        case SecurityActions.SECURITY_SHOW_DIALOG:
	            return state.set('showingSecurityDialog', true);
	        case SecurityActions.SECURITY_TOGGLE_AUTO_ACCEPT_PAIRING:
	            return state.set('autoAcceptPairing', !state.autoAcceptPairing);
	        case SecurityActions.SECURITY_DELETE_BOND_INFO:
	            return state.set('bondStore', new Map());
	        case AdapterActions.DEVICE_ADD_BOND_INFO:
	            return addBondInfo(state, action.device, action.params);
	        case AdapterActions.DEVICE_SECURITY_STORE_PEER_PARAMS:
	            return storeConnectionSecurityParameters(state, action.device, null, action.peerParams);
	        case AdapterActions.DEVICE_SECURITY_STORE_OWN_PARAMS:
	            return storeConnectionSecurityParameters(state, action.device, action.ownParams, null);
	        default:
	            return state;
	    }
	}

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.openFileInDefaultApplication = openFileInDefaultApplication;
	
	var _fs = __webpack_require__(22);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	var _os = __webpack_require__(35);
	
	var _os2 = _interopRequireDefault(_os);
	
	var _electron = __webpack_require__(13);
	
	var _child_process = __webpack_require__(145);
	
	var _child_process2 = _interopRequireDefault(_child_process);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function openFileInDefaultApplication(filePath, callback) {
	    _fs2.default.exists(filePath, exists => {
	        if (!exists) {
	            if (callback) {
	                callback(new Error(`Could not find file at path: ${filePath}`));
	            }
	
	            return;
	        }
	
	        const escapedPath = filePath.replace(/ /g, '\\ ');
	
	        // Could not find a method that works on all three platforms:
	        // * shell.openItem works on Windows and Linux but not on OSX
	        // * childProcess.execSync works on OSX but not on Windows
	        if (_os2.default.type() === 'Darwin') {
	            _child_process2.default.execSync(`open  ${escapedPath}`);
	        } else {
	            _electron.shell.openItem(escapedPath);
	        }
	    });
	}

/***/ },
/* 52 */,
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "5f35538a188490ad838e2a2fe841f2a0.eot";

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "f4769f9bdb7466be65088239c12046d1.eot";

/***/ },
/* 55 */,
/* 56 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 57 */
/***/ function(module, exports) {

	module.exports = require("pc-nrfjprog-js");

/***/ },
/* 58 */
/***/ function(module, exports) {

	module.exports = require("uuid-v4");

/***/ },
/* 59 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (strategy) {
	    if (strategy === 'vertical') {
	        return vertical;
	    } else if (strategy === 'horizontal') {
	        return horizontal;
	    } else {
	        // Do something funny.
	        return undefined;
	    }
	};
	
	function horizontal(sourceRect, targetRect, strokeWidth) {
	    const sourceRectMid = sourceRect.top - targetRect.top + sourceRect.height / 2;
	    const targetRectMid = targetRect.height / 2;
	
	    function calculateBoundingBox() {
	        const top = -(strokeWidth + 1) / 2 + (sourceRectMid < targetRectMid ? sourceRectMid : targetRectMid);
	        const height = 2 * ((strokeWidth + 1) / 2) + Math.abs(sourceRectMid - targetRectMid);
	        const width = targetRect.left - (sourceRect.left + sourceRect.width);
	
	        return {
	            top: top,
	            left: -width,
	            width: width,
	            height: height
	        };
	    }
	
	    const connectorBox = calculateBoundingBox();
	    const sourceYCoordinate = sourceRectMid < targetRectMid ? 2 : connectorBox.height - 2;
	    const targetYCoordinate = sourceRectMid < targetRectMid ? connectorBox.height - 2 : 2;
	
	    const lineCoordinates = [{ x: 0, y: sourceYCoordinate }, { x: connectorBox.width / 2, y: sourceYCoordinate }, { x: connectorBox.width / 2, y: targetYCoordinate }, { x: connectorBox.width, y: targetYCoordinate }];
	
	    return {
	        boundingBox: connectorBox,
	        lineCoordinates: lineCoordinates
	    };
	}
	
	function vertical(sourceRect, targetRect, strokeWidth) {
	    const sourceRectYEntry = sourceRect.top - targetRect.top + 20;
	    // const targetRectXEntry = targetRect.width / 2;
	
	    function calculateBoundingBox() {
	        return {
	            top: -(strokeWidth + 1) / 2 + sourceRectYEntry,
	            left: -(targetRect.left - (sourceRect.left + sourceRect.width)),
	            width: (strokeWidth + 1) / 2 + (targetRect.left + targetRect.width / 2) - (sourceRect.left + sourceRect.width),
	            height: (strokeWidth + 1) / 2 + Math.abs(sourceRectYEntry)
	        };
	    }
	
	    const boundingBox = calculateBoundingBox();
	    const lineCoordinates = [{ x: 0, y: 2 }, { x: boundingBox.width - 2, y: 2 }, { x: boundingBox.width - 2, y: boundingBox.height }];
	
	    return {
	        boundingBox: boundingBox,
	        lineCoordinates: lineCoordinates
	    };
	}
	
	module.exports = exports['default'];

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(24);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _firmwareUpdateActions = __webpack_require__(27);
	
	var FirmwareUpdateActions = _interopRequireWildcard(_firmwareUpdateActions);
	
	var _ConfirmationDialog = __webpack_require__(29);
	
	var _ConfirmationDialog2 = _interopRequireDefault(_ConfirmationDialog);
	
	var _uuidV = __webpack_require__(58);
	
	var _uuidV2 = _interopRequireDefault(_uuidV);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class AdapterSelector extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    focusOnComPorts() {
	        const dropDown = _reactDom2.default.findDOMNode(this.refs.comPortDropdown);
	        dropDown.firstChild.focus();
	        dropDown.firstChild.click();
	    }
	
	    componentDidMount() {
	        window.addEventListener('core:select-adapter', function () {
	            this.focusOnComPorts();
	        }.bind(this));
	    }
	
	    compareAdapterNodes(nodeA, nodeB) {
	        if (!nodeA.props.eventKey || !nodeB.props.eventKey) {
	            return 0;
	        }
	
	        const portA = nodeA.props.eventKey;
	        const portB = nodeB.props.eventKey;
	
	        // Trick: COM1 and COM10 sorts equally with regular sort, use length to differentiate them
	        if (portA.length > portB.length) {
	            return 1;
	        }
	
	        if (portA.length < portB.length) {
	            return -1;
	        }
	
	        // Use regulart text comparison on names of equal length
	        if (portA > portB) {
	            return 1;
	        } else if (portA < portB) {
	            return -1;
	        } else {
	            return 0;
	        }
	    }
	
	    createUpdateText(foundVersion, latestVersion) {
	        let updateText;
	
	        if (foundVersion) {
	            updateText = `Detected firmware version ${foundVersion}.`;
	        } else {
	            updateText = `No connectivity firmware was detected.`;
	        }
	
	        updateText += ` Do you want to update to version ${latestVersion}?`;
	
	        return updateText;
	    }
	
	    render() {
	        var _props$adapter = this.props.adapter;
	        const adapters = _props$adapter.adapters,
	              adapterStatus = _props$adapter.adapterStatus,
	              adapterIndicator = _props$adapter.adapterIndicator;
	        var _props = this.props;
	        const programAdapter = _props.programAdapter,
	              closeAdapter = _props.closeAdapter,
	              firmwareUpdate = _props.firmwareUpdate,
	              continueOpenDevice = _props.continueOpenDevice,
	              updateFirmware = _props.updateFirmware;
	        const showingUpdateDialog = firmwareUpdate.showingUpdateDialog,
	              showProgress = firmwareUpdate.showProgress,
	              foundVersion = firmwareUpdate.foundVersion,
	              latestVersion = firmwareUpdate.latestVersion;
	
	
	        const adapterNodes = [];
	
	        adapters.forEach((adapter, i) => {
	            var _adapter$state = adapter.state;
	            const port = _adapter$state.port,
	                  serialNumber = _adapter$state.serialNumber;
	
	            const portDescription = [];
	            portDescription.push(_react2.default.createElement(
	                'div',
	                { className: 'serialPort', key: (0, _uuidV2.default)() },
	                port
	            ));
	
	            // Remove leading zeros and truncate long (DAPLINK) serial numbers
	            const cleanSerial = serialNumber ? serialNumber.replace(/^0+/, '').substring(0, 10) : serialNumber;
	
	            if (cleanSerial) {
	                portDescription.push(_react2.default.createElement(
	                    'div',
	                    { className: 'serialSerialnumber', key: (0, _uuidV2.default)() },
	                    cleanSerial
	                ));
	            } else {
	                portDescription.push(_react2.default.createElement(
	                    'div',
	                    { className: 'serialSerialnumber', key: (0, _uuidV2.default)() },
	                    '\xA0'
	                ));
	            }
	
	            adapterNodes.push(_react2.default.createElement(
	                _reactBootstrap.MenuItem,
	                { className: 'btn-primary', eventKey: port, onSelect: () => programAdapter(port), key: i },
	                portDescription
	            ));
	        });
	
	        adapterNodes.sort(this.compareAdapterNodes);
	
	        const selectedAdapter = this.props.adapter.api.selectedAdapter;
	
	        if (selectedAdapter) {
	            adapterNodes.push(_react2.default.createElement(
	                _reactBootstrap.MenuItem,
	                { className: 'btn-primary', onSelect: () => closeAdapter(selectedAdapter), key: (0, _uuidV2.default)() },
	                'Close Adapter'
	            ));
	        }
	
	        return _react2.default.createElement(
	            'span',
	            { title: 'Select serial port (Alt+P)' },
	            _react2.default.createElement(
	                'div',
	                { className: 'padded-row' },
	                _react2.default.createElement(
	                    _reactBootstrap.DropdownButton,
	                    { id: 'navbar-dropdown', className: 'btn-primary btn-nordic', title: adapterStatus, ref: 'comPortDropdown' },
	                    adapterNodes
	                ),
	                _react2.default.createElement('div', { className: 'indicator ' + adapterIndicator })
	            ),
	            _react2.default.createElement(_ConfirmationDialog2.default, { show: showingUpdateDialog,
	                onOk: updateFirmware,
	                onCancel: continueOpenDevice,
	                showProgress: showProgress,
	                text: this.createUpdateText(foundVersion, latestVersion) })
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const adapter = state.adapter,
	          firmwareUpdate = state.firmwareUpdate;
	
	
	    return {
	        adapter: adapter,
	        adapterStatus: adapter.adapterStatus,
	        adapterIndicator: adapter.adapterIndicator,
	        adapters: adapter.adapters,
	        firmwareUpdate: firmwareUpdate
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    let retval = Object.assign({}, (0, _redux.bindActionCreators)(AdapterActions, dispatch), (0, _redux.bindActionCreators)(FirmwareUpdateActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(AdapterSelector);
	
	
	AdapterSelector.propTypes = {
	    adapters: _react.PropTypes.object.isRequired,
	    adapterStatus: _react.PropTypes.string.isRequired,
	    openAdapter: _react.PropTypes.func.isRequired,
	    programAdapter: _react.PropTypes.func.isRequired,
	    closeAdapter: _react.PropTypes.func.isRequired,
	    firmwareUpdate: _react.PropTypes.object.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _UuidLookup = __webpack_require__(46);
	
	var _UuidLookup2 = _interopRequireDefault(_UuidLookup);
	
	var _uuid_definitions = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const SUCCESS = 'success';
	const ERROR = 'error';
	
	const COMPLETE_LOCAL_NAME = '0';
	const SHORTENED_LOCAL_NAME = '1';
	const COMPLETE_16_UUIDS = '2';
	const INCOMPLETE_16_UUIDS = '3';
	const COMPLETE_128_UUIDS = '4';
	const INCOMPLETE_128_UUIDS = '5';
	const TX_POWER = '6';
	const CUSTOM = '7';
	
	const UUID_TYPE_16 = 0;
	const UUID_TYPE_128 = 1;
	
	class AdvertisingData extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.value = '';
	        this.adTypeValue = '';
	        this.type = null;
	        this.typeApi = null;
	        this.typeKey = null;
	        this.title = 'Select data type';
	        this.placeholderText = 'Select data type';
	    }
	
	    keyToAdvertisingType(key) {
	        switch (key) {
	            case COMPLETE_LOCAL_NAME:
	                return 'Complete local name';
	            case SHORTENED_LOCAL_NAME:
	                return 'Shortened local name';
	            case COMPLETE_16_UUIDS:
	                return 'UUID 16 bit complete list';
	            case INCOMPLETE_16_UUIDS:
	                return 'UUID 16 bit more available';
	            case COMPLETE_128_UUIDS:
	                return 'UUID 128 bit complete list';
	            case INCOMPLETE_128_UUIDS:
	                return 'UUID 128 bit more available';
	            case TX_POWER:
	                return 'TX power level';
	            case CUSTOM:
	                return 'Custom AD type';
	        }
	    }
	
	    keyToApiAdvType(key) {
	        switch (key) {
	            case COMPLETE_LOCAL_NAME:
	                return 'completeLocalName';
	            case SHORTENED_LOCAL_NAME:
	                return 'shortenedLocalName';
	            case COMPLETE_16_UUIDS:
	                return 'completeListOf16BitServiceUuids';
	            case INCOMPLETE_16_UUIDS:
	                return 'incompleteListOf16BitServiceUuids';
	            case COMPLETE_128_UUIDS:
	                return 'completeListOf128BitServiceUuids';
	            case INCOMPLETE_128_UUIDS:
	                return 'incompleteListOf128BitServiceUuids';
	            case TX_POWER:
	                return 'txPowerLevel';
	            case CUSTOM:
	                return 'custom';
	            default:
	                return 'unknown';
	        }
	    }
	
	    formatValue(value, key) {
	        switch (key) {
	            case COMPLETE_LOCAL_NAME:
	            case SHORTENED_LOCAL_NAME:
	                return value;
	
	            case COMPLETE_16_UUIDS:
	            case INCOMPLETE_16_UUIDS:
	            case COMPLETE_128_UUIDS:
	            case INCOMPLETE_128_UUIDS:
	                // Create array of uuid text strings
	                return value.replace(' ', '').split(',');
	
	            case TX_POWER:
	                return parseInt(value);
	
	            case CUSTOM:
	                return value;
	
	            default:
	                return null;
	        }
	    }
	
	    getPlaceholderText(key) {
	        switch (key) {
	            case COMPLETE_LOCAL_NAME:
	            case SHORTENED_LOCAL_NAME:
	                return 'Enter local name';
	
	            case COMPLETE_16_UUIDS:
	            case INCOMPLETE_16_UUIDS:
	            case COMPLETE_128_UUIDS:
	            case INCOMPLETE_128_UUIDS:
	                // Create array of uuid text strings
	                return 'Enter UUID(s)';
	
	            case TX_POWER:
	                return 'Enter TX power';
	
	            case CUSTOM:
	                return 'Enter AD data value (hex)';
	
	            default:
	                return 'Enter value';
	        }
	    }
	
	    handleUuidSelect(event, eventKey) {
	        if (this.value !== '') {
	            this.value += ', ';
	        }
	
	        this.value += eventKey;
	        this.forceUpdate();
	        this.emitValueChange();
	    }
	
	    handleSelect(event, eventKey) {
	        this.value = '';
	        this.typeKey = eventKey;
	        this.title = this.keyToAdvertisingType(eventKey);
	        this.placeholderText = this.getPlaceholderText(eventKey);
	        this.forceUpdate();
	
	        this.type = this.keyToAdvertisingType(this.typeKey);
	        this.typeApi = this.keyToApiAdvType(this.typeKey);
	        this.emitValueChange();
	    }
	
	    handleChange(event) {
	        this.value = event.target.value;
	        this.forceUpdate();
	        this.emitValueChange();
	    }
	
	    handleAdTypeChange(event) {
	        this.adTypeValue = event.target.value;
	        this.forceUpdate();
	        this.emitValueChange();
	    }
	
	    emitValueChange() {
	        const onValueChange = this.props.onValueChange;
	
	
	        if (this.validateInput() != SUCCESS) {
	            onValueChange(null);
	            return;
	        }
	
	        if (this.typeKey === CUSTOM && this.validateAdType() != SUCCESS) {
	            onValueChange(null);
	            return;
	        }
	
	        const tempValue = this.typeKey === CUSTOM ? (this.adTypeValue + this.value).replace(/0[xX]/g, '') : this.value;
	
	        const typeValue = {
	            typeKey: this.typeKey,
	            type: this.type,
	            typeApi: this.typeApi,
	            value: tempValue,
	            formattedValue: this.formatValue(tempValue, this.typeKey)
	        };
	
	        onValueChange(typeValue);
	    }
	
	    validateInput() {
	        switch (this.typeKey) {
	            case COMPLETE_LOCAL_NAME:
	            case SHORTENED_LOCAL_NAME:
	                return this.validateLocalNameString(this.value);
	
	            case COMPLETE_16_UUIDS:
	            case INCOMPLETE_16_UUIDS:
	                return this.validateUuid(this.value, UUID_TYPE_16);
	
	            case COMPLETE_128_UUIDS:
	            case INCOMPLETE_128_UUIDS:
	                return this.validateUuid(this.value, UUID_TYPE_128);
	
	            case TX_POWER:
	                return this.validateTxPower(this.value);
	
	            case CUSTOM:
	                return this.validateCustom(this.value);
	
	            default:
	                return ERROR;
	        }
	    }
	
	    validateLocalNameString(value) {
	        if (value.length === 0 || value.length > 23) {
	            return ERROR;
	        } else {
	            return SUCCESS;
	        }
	    }
	
	    validateUuid(value, uuidType) {
	        const cleanedUuidArray = value.replace(/0[xX]/g, '').replace('-', '').split(',');
	        let regex;
	        switch (uuidType) {
	            case UUID_TYPE_16:
	                regex = /^[0-9a-fA-F]{4}$/;
	                break;
	            case UUID_TYPE_128:
	                regex = /^[0-9a-fA-F]{32}$/;
	                break;
	            default:
	                return ERROR;
	        }
	
	        for (let uuid of cleanedUuidArray) {
	            if (uuid.trim().search(regex) < 0) {
	                return ERROR;
	            }
	        }
	
	        return SUCCESS;
	    }
	
	    validateTxPower(value) {
	        if (value >= -127 && value <= 127 && value !== '') {
	            return SUCCESS;
	        } else {
	            return ERROR;
	        }
	    }
	
	    validateCustom(value) {
	        const regex = /^((0[xX])?[A-Fa-f0-9]{2})+$/g;
	        if (value.trim().search(regex) >= 0) {
	            return SUCCESS;
	        }
	
	        return ERROR;
	    }
	
	    validateAdType() {
	        const regex = /^(0[xX])?[A-Fa-f0-9]{2}$/g;
	        if (this.adTypeValue.trim().search(regex) >= 0) {
	            return SUCCESS;
	        }
	
	        return ERROR;
	    }
	
	    render() {
	        const inputDisabled = this.type === null;
	        const uuidDef = this.title.includes('16 bit') ? (0, _uuid_definitions.uuid16bitServiceDefinitions)() : this.title.includes('128 bit') ? (0, _uuid_definitions.uuid128bitServiceDefinitions)() : {};
	        const uuidLookupDisabled = Object.keys(uuidDef).length === 0;
	
	        const adTypeDiv = this.typeKey === CUSTOM ? _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(_nrfconnectCore.TextInput, { label: 'AD type value', placeholder: 'Enter AD type value (1 byte hex)',
	                hasFeedback: true, defaultValue: this.adTypeValue, labelClassName: '', wrapperClassName: 'col-md-12',
	                validationState: this.validateAdType(), onChange: event => this.handleAdTypeChange(event) })
	        ) : '';
	
	        const uuidLookupDiv = !uuidLookupDisabled ? _react2.default.createElement(
	            'span',
	            { className: 'adv-uuid-lookup' },
	            _react2.default.createElement(_UuidLookup2.default, { onSelect: (event, eventKey) => this.handleUuidSelect(event, eventKey), title: 'Predefined service UUIDs', uuidDefs: uuidDef })
	        ) : '';
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: 'adv-drop-container' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'type-label' },
	                    'AD type'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.DropdownButton,
	                    { className: 'adv-dropdown', title: this.title,
	                        id: 'dropdown-adv', label: 'Type',
	                        onSelect: (eventKey, event) => this.handleSelect(event, eventKey) },
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '0' },
	                        this.keyToAdvertisingType('0')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '1' },
	                        this.keyToAdvertisingType('1')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '2' },
	                        this.keyToAdvertisingType('2')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '3' },
	                        this.keyToAdvertisingType('3')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '4' },
	                        this.keyToAdvertisingType('4')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '5' },
	                        this.keyToAdvertisingType('5')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '6' },
	                        this.keyToAdvertisingType('6')
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.MenuItem,
	                        { eventKey: '7' },
	                        this.keyToAdvertisingType('7')
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'adv-value-container' },
	                adTypeDiv,
	                _react2.default.createElement(_nrfconnectCore.TextInput, {
	                    disabled: inputDisabled,
	                    id: 'value',
	                    ref: 'advDataValue',
	                    value: this.value,
	                    label: 'Value',
	                    hasFeedback: true,
	                    placeholder: this.placeholderText,
	                    validationState: this.validateInput(),
	                    labelClassName: '',
	                    wrapperClassName: 'col-md-12',
	                    onChange: event => this.handleChange(event) })
	            ),
	            uuidLookupDiv
	        );
	    }
	}
	
	exports.default = AdvertisingData;
	AdvertisingData.propTypes = {
	    onValueChange: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _AdvertisingListEntry = __webpack_require__(63);
	
	var _AdvertisingListEntry2 = _interopRequireDefault(_AdvertisingListEntry);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class AdvertisingList extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    render() {
	        var _props = this.props;
	        const title = _props.title,
	              advEntries = _props.advEntries,
	              onDelete = _props.onDelete;
	
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'adv-table-container' },
	            _react2.default.createElement(
	                'div',
	                { className: 'adv-header' },
	                title
	            ),
	            _react2.default.createElement(
	                'table',
	                { className: 'table-striped' },
	                _react2.default.createElement(
	                    'thead',
	                    null,
	                    _react2.default.createElement(
	                        'tr',
	                        null,
	                        _react2.default.createElement(
	                            'th',
	                            null,
	                            'AD type'
	                        ),
	                        _react2.default.createElement(
	                            'th',
	                            null,
	                            'Value'
	                        ),
	                        _react2.default.createElement('th', null)
	                    )
	                ),
	                _react2.default.createElement(
	                    'tbody',
	                    null,
	                    advEntries.map(entry => _react2.default.createElement(_AdvertisingListEntry2.default, _extends({ entry }, { key: entry.id,
	                        onDelete: onDelete })))
	                )
	            )
	        );
	    }
	}
	
	exports.default = AdvertisingList;
	AdvertisingList.propTypes = {
	    title: _react.PropTypes.string.isRequired,
	    advEntries: _react.PropTypes.object.isRequired,
	    onDelete: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class AdvertisingListEntry extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    render() {
	        var _props = this.props;
	        const entry = _props.entry,
	              onDelete = _props.onDelete;
	
	
	        return _react2.default.createElement(
	            'tr',
	            null,
	            _react2.default.createElement(
	                'td',
	                null,
	                entry.type
	            ),
	            _react2.default.createElement(
	                'td',
	                null,
	                entry.value
	            ),
	            _react2.default.createElement(
	                'td',
	                null,
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { className: 'icon-cancel-circled', bsSize: 'xsmall', onClick: () => onDelete(entry.id) },
	                    ' Delete'
	                )
	            )
	        );
	    }
	}
	
	exports.default = AdvertisingListEntry;
	AdvertisingListEntry.propTypes = {
	    entry: _react.PropTypes.object.isRequired,
	    onDelete: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.AuthKeyEditor = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _common = __webpack_require__(11);
	
	var _stringUtil = __webpack_require__(14);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const SUCCESS = 'success';
	const ERROR = 'error';
	
	class AuthKeyEditor extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this.authKeyInput = '';
	        this.randomInput = '';
	        this.confirmInput = '';
	
	        this.validationFeedbackEnabled = false;
	    }
	
	    handlePasskeyChange(event) {
	        const onKeypress = this.props.onKeypress;
	
	        let _event = this.props.event;
	
	        if (_event.sendKeypressEnabled === true) {
	            let newCount = event.target.value.length - this.authKeyInput.length;
	
	            if (event.target.value.length === 0 && this.authKeyInput.length > 1) {
	                onKeypress('BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR');
	            } else {
	                if (newCount > 0) {
	                    for (let i = 0; i < newCount; i++) {
	                        onKeypress('BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN');
	                    }
	                } else if (newCount < 0) {
	                    for (let i = 0; i < Math.abs(newCount); i++) {
	                        onKeypress('BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT');
	                    }
	                }
	            }
	        }
	
	        this.authKeyInput = event.target.value;
	        this.forceUpdate();
	    }
	
	    handleRandomChange(event) {
	        this.randomInput = event.target.value;
	        this.forceUpdate();
	    }
	
	    handleConfirmChange(event) {
	        this.confirmInput = event.target.value;
	        this.forceUpdate();
	    }
	
	    handlePasskeySubmit() {
	        const onAuthKeySubmit = this.props.onAuthKeySubmit;
	
	
	        if (this.validatePasskeyInput(this.authKeyInput) !== SUCCESS) {
	            this.validationFeedbackEnabled = true;
	            this.forceUpdate();
	            return;
	        }
	
	        onAuthKeySubmit('BLE_GAP_AUTH_KEY_TYPE_PASSKEY', this.authKeyInput);
	    }
	
	    handleOobSubmit() {
	        const onAuthKeySubmit = this.props.onAuthKeySubmit;
	
	
	        if (this.validateOobInput(this.authKeyInput) !== SUCCESS) {
	            this.validationFeedbackEnabled = true;
	            this.forceUpdate();
	            return;
	        }
	
	        onAuthKeySubmit('BLE_GAP_AUTH_KEY_TYPE_OOB', this.authKeyInput);
	    }
	
	    handleLescOobSubmit() {
	        const onLescOobSubmit = this.props.onLescOobSubmit;
	
	
	        if (this.validateOobInput(this.confirmInput) !== SUCCESS || this.validateOobInput(this.randomInput) !== SUCCESS) {
	            this.validationFeedbackEnabled = true;
	            this.forceUpdate();
	            return;
	        }
	
	        onLescOobSubmit({
	            confirm: this.confirmInput,
	            random: this.randomInput
	        });
	    }
	
	    handleNumericalComparisonMatch(match) {
	        const onNumericalComparisonMatch = this.props.onNumericalComparisonMatch;
	
	
	        onNumericalComparisonMatch(match);
	    }
	
	    handleCancel() {
	        var _props = this.props;
	        const event = _props.event,
	              onCancel = _props.onCancel;
	
	
	        onCancel();
	    }
	
	    validatePasskeyInput(value) {
	        if (!value && value !== '') {
	            return ERROR;
	        } else if (value.search(/^\d{6}$/) === -1) {
	            return ERROR;
	        } else {
	            return SUCCESS;
	        }
	    }
	
	    validateOobInput(value) {
	        if (!value) {
	            return ERROR;
	        } else if (value.search(/^[0-9a-fA-F]{32}$/) === -1) {
	            return ERROR;
	        } else {
	            return SUCCESS;
	        }
	    }
	
	    createPasskeyDisplayControls(passkey, keypressEnabled, keypressStartReceived, keypressEndReceived, keypressCount) {
	        const digitsCreated = [];
	        const digitsTypedIn = [];
	
	        for (let i = 0; i < 6; i++) {
	            digitsCreated.push(_react2.default.createElement(
	                'div',
	                { key: 'digitsCreated' + i, className: 'col-sm-1' },
	                passkey[i]
	            ));
	        }
	
	        let digitsCreatedFormGroup = _react2.default.createElement(
	            'div',
	            { className: 'form-group' },
	            _react2.default.createElement(
	                'label',
	                { className: 'control-label col-sm-4', htmlFor: 'passkeydigits' },
	                'Passkey'
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'col-sm-8 form-control-static', id: 'passkeydigits' },
	                digitsCreated
	            )
	        );
	
	        let digitsTypedInFormGroup = '';
	
	        if (keypressEnabled) {
	            if (keypressCount !== undefined) {
	                let style = {
	                    backgroundColor: keypressCount > 0 ? keypressCount == 6 ? 'green' : 'yellow' : 'red'
	                };
	
	                for (let i = 0; i < keypressCount; i++) {
	                    digitsTypedIn.push(_react2.default.createElement(
	                        'div',
	                        { key: 'digitsTyped' + i, className: 'col-sm-1', style: style },
	                        '*'
	                    ));
	                }
	
	                if (keypressCount < 6) {
	                    for (let i = 0; i < 6 - keypressCount; i++) {
	                        digitsTypedIn.push(_react2.default.createElement(
	                            'div',
	                            { key: 'count' + i, className: 'col-sm-1', style: style },
	                            '-'
	                        ));
	                    }
	                }
	
	                digitsTypedInFormGroup = _react2.default.createElement(
	                    'div',
	                    { className: 'form-group' },
	                    _react2.default.createElement(
	                        'label',
	                        { className: 'control-label col-sm-4', htmlFor: 'passkeytypedin' },
	                        'Typed'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-sm-8 form-control-static', id: 'passkeytypedin' },
	                        digitsTypedIn
	                    )
	                );
	            }
	        }
	
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal', onSubmit: event => {
	                    this.handleCancel();event.preventDefault();
	                } },
	            digitsCreatedFormGroup,
	            digitsTypedInFormGroup,
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleCancel(), className: 'btn btn-primary btn-sm btn-nordic' },
	                    'OK'
	                )
	            )
	        );
	    }
	
	    createPasskeyRequestControls() {
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal', onSubmit: event => {
	                    this.handlePasskeySubmit();event.preventDefault();
	                } },
	            _react2.default.createElement(_nrfconnectCore.TextInput, {
	                label: 'Passkey',
	                defaultValue: '',
	                id: 'passkeyInputId',
	                hasFeedback: this.validationFeedbackEnabled,
	                placeholder: 'Enter passkey',
	                validationState: this.validatePasskeyInput(this.authKeyInput),
	                onChange: event => this.handlePasskeyChange(event) }),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleCancel(), className: 'btn btn-default btn-sm btn-nordic' },
	                    'Ignore'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handlePasskeySubmit(), className: 'btn btn-primary btn-sm btn-nordic' },
	                    'Submit'
	                )
	            )
	        );
	    }
	
	    createNumericalComparisonControls(passkey) {
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal', onSubmit: event => {
	                    this.handleNumericalComparisonMatch(true);event.preventDefault();
	                } },
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    'label',
	                    { className: 'col-sm-4' },
	                    'Passkey'
	                ),
	                _react2.default.createElement(
	                    'label',
	                    { className: 'col-sm-7' },
	                    passkey
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleNumericalComparisonMatch(false), className: 'btn btn-default btn-sm btn-nordic' },
	                    'No match'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleNumericalComparisonMatch(true), className: 'btn btn-primary btn-sm btn-nordic' },
	                    'Match'
	                )
	            )
	        );
	    }
	
	    createLegacyOobRequestControls() {
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal', onSubmit: event => {
	                    this.handleOobSubmit();event.preventDefault();
	                } },
	            _react2.default.createElement(_nrfconnectCore.TextInput, {
	                label: 'Out-of-band data',
	                defaultValue: '',
	                id: 'oobInputId',
	                hasFeedback: this.validationFeedbackEnabled,
	                placeholder: 'Enter out-of-band data',
	                validationState: this.validateOobInput(this.authKeyInput),
	                onChange: event => this.handlePasskeyChange(event) }),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleCancel(), className: 'btn btn-default btn-sm btn-nordic' },
	                    'Ignore'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleOobSubmit(), className: 'btn btn-primary btn-sm btn-nordic' },
	                    'Submit'
	                )
	            )
	        );
	    }
	
	    createLescOobRequestControls() {
	        const event = this.props.event;
	
	
	        const random = (0, _stringUtil.toHexString)(event.ownOobData.r).replace(/-/g, '');
	        const confirm = (0, _stringUtil.toHexString)(event.ownOobData.c).replace(/-/g, '');
	
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal', onSubmit: event => {
	                    this.handleLescOobSubmit();event.preventDefault();
	                } },
	            _react2.default.createElement(_nrfconnectCore.TextInput, {
	                label: 'Peer random',
	                defaultValue: '',
	                id: 'randomInputId',
	                hasFeedback: this.validationFeedbackEnabled,
	                placeholder: 'Enter out-of-band data',
	                validationState: this.validateOobInput(this.randomInput),
	                onChange: event => this.handleRandomChange(event) }),
	            _react2.default.createElement(_nrfconnectCore.TextInput, {
	                label: 'Peer confirm',
	                defaultValue: '',
	                id: 'confirmInputId',
	                hasFeedback: this.validationFeedbackEnabled,
	                placeholder: 'Enter out-of-band data',
	                validationState: this.validateOobInput(this.confirmInput),
	                onChange: event => this.handleConfirmChange(event) }),
	            _react2.default.createElement(_nrfconnectCore.TextInput, {
	                readOnly: true,
	                label: 'Own random',
	                id: 'randomInputId',
	                value: random }),
	            _react2.default.createElement(_nrfconnectCore.TextInput, {
	                readOnly: true,
	                label: 'Own confirm',
	                id: 'confirmInputId',
	                value: confirm }),
	            _react2.default.createElement(
	                'div',
	                { className: 'form-group' },
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleCancel(), className: 'btn btn-default btn-sm btn-nordic' },
	                    'Ignore'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { type: 'button', onClick: () => this.handleLescOobSubmit(), className: 'btn btn-primary btn-sm btn-nordic' },
	                    'Submit'
	                )
	            )
	        );
	    }
	
	    render() {
	        const event = this.props.event;
	
	
	        const title = event.type === _common.BLEEventType.PASSKEY_DISPLAY ? 'Passkey display' : event.type === _common.BLEEventType.PASSKEY_REQUEST ? 'Passkey request' : event.type === _common.BLEEventType.NUMERICAL_COMPARISON ? 'Numerical comparison' : event.type === _common.BLEEventType.LEGACY_OOB_REQUEST ? 'Out-of-band data request' : event.type === _common.BLEEventType.LESC_OOB_REQUEST ? 'Out-of-band data request' : '';
	
	        const controls = event.type === _common.BLEEventType.PASSKEY_DISPLAY ? this.createPasskeyDisplayControls(event.authKeyParams.passkey, event.receiveKeypressEnabled, event.keypressStartReceived, event.keypressEndReceived, event.keypressCount) : event.type === _common.BLEEventType.PASSKEY_REQUEST ? this.createPasskeyRequestControls() : event.type === _common.BLEEventType.NUMERICAL_COMPARISON ? this.createNumericalComparisonControls(event.authKeyParams.passkey) : event.type === _common.BLEEventType.LEGACY_OOB_REQUEST ? this.createLegacyOobRequestControls() : event.type === _common.BLEEventType.LESC_OOB_REQUEST ? this.createLescOobRequestControls() : '';
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: 'event-header' },
	                _react2.default.createElement(
	                    'h4',
	                    null,
	                    title
	                )
	            ),
	            controls
	        );
	    }
	}
	
	exports.AuthKeyEditor = AuthKeyEditor;
	AuthKeyEditor.propTypes = {
	    event: _react.PropTypes.object.isRequired,
	    onKeypress: _react.PropTypes.func,
	    onAuthKeySubmit: _react.PropTypes.func,
	    onNumericalComparisonMatch: _react.PropTypes.func
	};

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.BLEEvent = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _CountdownTimer = __webpack_require__(71);
	
	var _common = __webpack_require__(11);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const EVENT_TIMEOUT_SECONDS = 30;
	
	class BLEEvent extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.countDownTimerRef = 'counter-' + this.props.event.id;
	    }
	
	    _getEventInfo() {
	        const eventType = this.props.event.type;
	
	        switch (eventType) {
	            case _common.BLEEventType.USER_INITIATED_CONNECTION_UPDATE:
	            case _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE:
	                return {
	                    name: 'Connection update',
	                    icon: _react2.default.createElement(
	                        'span',
	                        { className: 'icon-link' },
	                        _react2.default.createElement('span', { className: 'icon-down' })
	                    )
	                };
	            case _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE:
	                return {
	                    name: 'Connection update request',
	                    icon: _react2.default.createElement(
	                        'span',
	                        { className: 'icon-link' },
	                        _react2.default.createElement('span', { className: 'icon-up' })
	                    )
	                };
	            case _common.BLEEventType.USER_INITIATED_PAIRING:
	                return {
	                    name: 'Pairing',
	                    icon: _react2.default.createElement(
	                        'span',
	                        { className: 'icon-link' },
	                        _react2.default.createElement('span', { className: 'icon-down' })
	                    )
	                };
	            case _common.BLEEventType.PEER_INITIATED_PAIRING:
	                return {
	                    name: 'Pairing requested',
	                    icon: _react2.default.createElement(
	                        'span',
	                        { className: 'icon-link' },
	                        _react2.default.createElement('span', { className: 'icon-up' })
	                    )
	                };
	            case _common.BLEEventType.PASSKEY_DISPLAY:
	                return {
	                    name: 'Passkey display',
	                    icon: ''
	                };
	            case _common.BLEEventType.PASSKEY_REQUEST:
	                return {
	                    name: 'Passkey request',
	                    icon: ''
	                };
	            case _common.BLEEventType.NUMERICAL_COMPARISON:
	                return {
	                    name: 'Numerical comparison',
	                    icon: ''
	                };
	            case _common.BLEEventType.LEGACY_OOB_REQUEST:
	            case _common.BLEEventType.LESC_OOB_REQUEST:
	                return {
	                    name: 'OOB request',
	                    icon: ''
	                };
	            default:
	                return {
	                    name: 'unknown event',
	                    icon: 'unknown event'
	                };
	        }
	    }
	
	    _getEventContent() {
	        var _props = this.props;
	        const event = _props.event,
	              onTimedOut = _props.onTimedOut,
	              countDownTimerRef = _props.countDownTimerRef;
	
	        var _getEventInfo = this._getEventInfo();
	
	        const name = _getEventInfo.name;
	
	
	        let eventTimer = _react2.default.createElement('div', null);
	
	        if ((event.type === _common.BLEEventType.PEER_INITIATED_CONNECTION_UPDATE || event.type === _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE || event.type === _common.BLEEventType.PASSKEY_DISPLAY || event.type === _common.BLEEventType.PASSKEY_REQUEST || event.type === _common.BLEEventType.NUMERICAL_COMPARISON || event.type === _common.BLEEventType.LEGACY_OOB_REQUEST || event.type === _common.BLEEventType.LESC_OOB_REQUEST) && event.state === _common.BLEEventState.INDETERMINATE) {
	            eventTimer = _react2.default.createElement(_CountdownTimer.CountdownTimer, { ref: countDownTimerRef, seconds: EVENT_TIMEOUT_SECONDS, onTimeout: () => onTimedOut() });
	        }
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'content' },
	            _react2.default.createElement(
	                'span',
	                { className: 'left-space' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'service-name truncate-text' },
	                    name
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'address-text' },
	                    event.device.address
	                )
	            ),
	            eventTimer
	        );
	    }
	
	    _onClick(e) {
	        e.stopPropagation();
	
	        var _props2 = this.props;
	        const onSelected = _props2.onSelected,
	              event = _props2.event;
	
	
	        if (onSelected) {
	            onSelected(event.id);
	        }
	    }
	
	    _getClass() {
	        const event = this.props.event;
	
	
	        if (!event) {
	            return '';
	        }
	
	        switch (event.state) {
	            case _common.BLEEventState.ERROR:
	            case _common.BLEEventState.REJECTED:
	            case _common.BLEEventState.DISCONNECTED:
	            case _common.BLEEventState.IGNORED:
	                return 'failed-item';
	            case _common.BLEEventState.INDETERMINATE:
	            case _common.BLEEventState.PENDING:
	                return '';
	            case _common.BLEEventState.SUCCESS:
	                return 'success-item';
	            default:
	                throw `Error. Unknown ble event state: ${event.state}`;
	        }
	    }
	
	    _getStyle() {
	        var _props3 = this.props;
	        const event = _props3.event,
	              selected = _props3.selected;
	
	
	        if (!event.state) {
	            return {
	                backgroundColor: selected ? 'rgb(179,225,245)' : `rgb(${this.state.backgroundColor.r}, ${this.state.backgroundColor.g}, ${this.state.backgroundColor.b})`
	            };
	        } else {
	            return {};
	        }
	    }
	
	    _onExpandAreaClick() {
	        console.log('TODO: implement me! I did not exist earlier either...');
	    }
	
	    stopCounter() {
	        const countDownTimerRef = this.props.countDownTimerRef;
	
	
	        if (this.refs[countDownTimerRef]) {
	            this.refs[countDownTimerRef].cancelTimer();
	        }
	    }
	
	    render() {
	        return _react2.default.createElement(
	            'div',
	            { className: 'service-item ' + this._getClass(), style: this._getStyle(), onClick: _event => this._onClick(_event) },
	            _react2.default.createElement(
	                'div',
	                { className: 'expand-area', onClick: () => this._onExpandAreaClick() },
	                _react2.default.createElement('div', { className: 'bar1' }),
	                _react2.default.createElement('div', { className: 'icon-wrap' })
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'content-wrap' },
	                this._getEventContent()
	            )
	        );
	    }
	}
	
	exports.BLEEvent = BLEEvent;
	BLEEvent.propTypes = {
	    event: _react.PropTypes.object.isRequired,
	    selected: _react.PropTypes.bool.isRequired,
	    onTimedOut: _react.PropTypes.func.isRequired,
	    onSelected: _react.PropTypes.func.isRequired
	};

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _UuidInput = __webpack_require__(30);
	
	var _UuidInput2 = _interopRequireDefault(_UuidInput);
	
	var _HexOnlyEditableField = __webpack_require__(20);
	
	var _HexOnlyEditableField2 = _interopRequireDefault(_HexOnlyEditableField);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _Errors = __webpack_require__(19);
	
	var _validateUuid = __webpack_require__(21);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class CharacteristicEditor extends _react2.default.Component {
	    constructor(props) {
	        super(props);
	    }
	
	    validateValueLength() {
	        const maxLength = parseInt(this.maxLength);
	        const fixedLength = this.fixedLength;
	        const value = this._parseValueProperty(this.value);
	
	        if (maxLength > 510 && fixedLength === true) {
	            return _validateUuid.ERROR;
	        }
	
	        if (maxLength > 512 && fixedLength === false) {
	            return _validateUuid.ERROR;
	        }
	
	        if (maxLength < value.length) {
	            return _validateUuid.ERROR;
	        }
	
	        return _validateUuid.SUCCESS;
	    }
	
	    _setCheckedProperty(property, e) {
	        this[property] = e.target.checked;
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    _setValueProperty(property, e) {
	        this[property] = e.target.value;
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    _parseValueProperty(value) {
	        if (value.length === 0) {
	            return [];
	        }
	
	        if (typeof value === 'string') {
	            const valueArray = value.split(' ');
	            return valueArray.map(value => parseInt(value, 16));
	        }
	
	        return this.value;
	    }
	
	    _setInitialValue(value) {
	        this.value = value;
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    _onUuidChange(e) {
	        const _hexRegEx = /^[0-9A-F]*$/i;
	        const textarea = e.target;
	        const uuid = textarea.value;
	        const valid = _hexRegEx.test(uuid);
	        let caretPosition = textarea.selectionStart;
	
	        if (!valid) {
	            caretPosition--;
	            this.forceUpdate(() => textarea.setSelectionRange(caretPosition, caretPosition));
	            return;
	        }
	
	        this.uuid = uuid;
	        let uuidName = (0, _uuid_definitions.getUuidName)(this.uuid);
	
	        if (this.uuid !== uuidName) {
	            this.name = uuidName;
	        }
	
	        this.forceUpdate(() => textarea.setSelectionRange(caretPosition, caretPosition));
	        this.props.onModified(true);
	    }
	
	    _saveAttribute() {
	        if ((0, _validateUuid.validateUuid)(this.uuid) === _validateUuid.ERROR) {
	            this.props.onValidationError(new _Errors.ValidationError('You have to provide a valid UUID.'));
	            return;
	        }
	
	        if (this.validateValueLength() === _validateUuid.ERROR) {
	            this.props.onValidationError(new _Errors.ValidationError('Length of value is not valid.'));
	            return;
	        }
	
	        const changedProperties = {
	            broadcast: this.broadcast,
	            read: this.read,
	            writeWoResp: this.writeWoResp,
	            write: this.write,
	            notify: this.notify,
	            indicate: this.indicate,
	            authSignedWr: this.authSignedWr,
	            reliableWr: this.reliableWr,
	            wrAux: this.wrAux
	        };
	
	        const changedCharacteristic = {
	            instanceId: this.props.characteristic.instanceId,
	            uuid: this.uuid.toUpperCase().trim(),
	            name: this.name,
	            value: this._parseValueProperty(this.value),
	            properties: changedProperties,
	            readPerm: this.readPerm,
	            writePerm: this.writePerm,
	            fixedLength: this.fixedLength,
	            maxLength: parseInt(this.maxLength)
	        };
	
	        this.props.onSaveChangedAttribute(changedCharacteristic);
	        this.saved = true;
	        this.props.onModified(false);
	    }
	
	    _handleUuidSelect(uuid) {
	        this.uuid = uuid;
	        let uuidName = (0, _uuid_definitions.getUuidName)(this.uuid);
	
	        if (this.uuid !== uuidName) {
	            this.name = uuidName;
	        }
	
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    render() {
	        var _props = this.props;
	        const characteristic = _props.characteristic,
	              onRemoveAttribute = _props.onRemoveAttribute;
	        const instanceId = characteristic.instanceId,
	              uuid = characteristic.uuid,
	              name = characteristic.name,
	              properties = characteristic.properties,
	              value = characteristic.value,
	              readPerm = characteristic.readPerm,
	              writePerm = characteristic.writePerm,
	              fixedLength = characteristic.fixedLength,
	              maxLength = characteristic.maxLength;
	        const broadcast = properties.broadcast,
	              read = properties.read,
	              writeWoResp = properties.writeWoResp,
	              write = properties.write,
	              notify = properties.notify,
	              indicate = properties.indicate,
	              authSignedWr = properties.authSignedWr,
	              reliableWr = properties.reliableWr,
	              wrAux = properties.wrAux;
	
	
	        if (this.saved || this.instanceId !== instanceId) {
	            this.saved = false;
	            this.instanceId = instanceId;
	            this.uuid = uuid || '';
	            this.name = name;
	            this.value = value.toArray();
	
	            this.broadcast = broadcast === true;
	            this.read = read === true;
	            this.writeWoResp = writeWoResp === true;
	            this.write = write === true;
	            this.notify = notify === true;
	            this.indicate = indicate === true;
	            this.authSignedWr = authSignedWr === true;
	            this.reliableWr = reliableWr === true;
	            this.wrAux = wrAux === true;
	
	            this.readPerm = readPerm;
	            this.writePerm = writePerm;
	            this.fixedLength = fixedLength === true;
	            this.maxLength = maxLength;
	        }
	
	        const showText = (0, _uuid_definitions.getUuidFormat)(this.uuid) === _uuid_definitions.TEXT;
	
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal native-key-bindings' },
	            _react2.default.createElement(_UuidInput2.default, { label: 'Characteristic UUID', name: 'uuid', value: this.uuid,
	                onChange: e => this._onUuidChange(e), uuidDefinitions: _uuid_definitions.uuidCharacteristicDefinitions,
	                handleSelection: uuid => this._handleUuidSelect(uuid) }),
	            _react2.default.createElement(_nrfconnectCore.TextInput, { label: 'Characteristic name', name: 'characteristic-name', value: this.name, onChange: e => this._setValueProperty('name', e) }),
	            _react2.default.createElement(_HexOnlyEditableField2.default, { label: 'Initial value', plain: true, className: 'form-control', name: 'initial-value', value: this.value,
	                onChange: value => this._setInitialValue(value), showText: showText }),
	            _react2.default.createElement(
	                _nrfconnectCore.LabeledInputGroup,
	                { label: 'Properties' },
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'broadcast', checked: this.broadcast, onChange: e => this._setCheckedProperty('broadcast', e) },
	                    'Broadcast'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'read', checked: this.read, onChange: e => this._setCheckedProperty('read', e) },
	                    'Read'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'writeWithoutResponse', checked: this.writeWoResp, onChange: e => this._setCheckedProperty('writeWoResp', e) },
	                    'Write without response'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'write', checked: this.write, onChange: e => this._setCheckedProperty('write', e) },
	                    'Write'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'notify', checked: this.notify, onChange: e => this._setCheckedProperty('notify', e) },
	                    'Notify'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'indicate', checked: this.indicate, onChange: e => this._setCheckedProperty('indicate', e) },
	                    'Indicate'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'authenticatedSignedWrites', checked: this.authSignedWr, onChange: e => this._setCheckedProperty('authSignedWr', e) },
	                    'Authenticated signed write'
	                )
	            ),
	            _react2.default.createElement(
	                _nrfconnectCore.LabeledInputGroup,
	                { label: 'Extended Properties' },
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'reliableWrite', checked: this.reliableWr, onChange: e => this._setCheckedProperty('reliableWr', e) },
	                    'Reliable write'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'writeAuxiliary', checked: this.wrAux, onChange: e => this._setCheckedProperty('wrAux', e) },
	                    'Write auxiliary'
	                )
	            ),
	            _react2.default.createElement(
	                _nrfconnectCore.SelectList,
	                { label: 'Read permission', type: 'select', className: 'form-control', value: this.readPerm, onChange: e => this._setValueProperty('readPerm', e) },
	                _react2.default.createElement(
	                    'option',
	                    { value: 'open' },
	                    'No security required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt' },
	                    'Encryption required, no MITM'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt mitm-protection' },
	                    'Encryption with MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'lesc' },
	                    'LESC encryption with MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'no_access' },
	                    'No access rights specified (undefined)'
	                )
	            ),
	            _react2.default.createElement(
	                _nrfconnectCore.SelectList,
	                { label: 'Write permission', type: 'select', className: 'form-control', value: this.writePerm, onChange: e => this._setValueProperty('writePerm', e) },
	                _react2.default.createElement(
	                    'option',
	                    { value: 'open' },
	                    'No security required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt' },
	                    'Encryption required, no MITM'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt mitm-protection' },
	                    'Encryption with MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'lesc' },
	                    'LESC encryption with MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'no_access' },
	                    'No access rights specified (undefined)'
	                )
	            ),
	            _react2.default.createElement(
	                _nrfconnectCore.LabeledInputGroup,
	                { label: 'Max length' },
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'fixedLength', checked: this.fixedLength, onChange: e => this._setCheckedProperty('fixedLength', e) },
	                    'Fixed length'
	                ),
	                _react2.default.createElement(_nrfconnectCore.TextInput, { inline: true, type: 'number', min: '0', max: this.fixedLength ? '510' : '512', name: 'max-length', ref: 'maxLength', value: this.maxLength,
	                    onChange: e => this._setValueProperty('maxLength', e) })
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.ButtonToolbar,
	                null,
	                _react2.default.createElement('div', { className: 'col-md-4' }),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { bsStyle: 'primary', className: 'btn-nordic', onClick: onRemoveAttribute },
	                    _react2.default.createElement('i', { className: 'icon-cancel' }),
	                    'Delete'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { bsStyle: 'primary', className: 'btn-nordic', onClick: () => this._saveAttribute() },
	                    'Save'
	                )
	            )
	        );
	    }
	}
	
	exports.default = CharacteristicEditor;
	CharacteristicEditor.propTypes = {
	    characteristic: _react.PropTypes.object.isRequired,
	    onRemoveAttribute: _react.PropTypes.func.isRequired,
	    onSaveChangedAttribute: _react.PropTypes.func.isRequired,
	    onValidationError: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _AttributeItem = __webpack_require__(28);
	
	var _AttributeItem2 = _interopRequireDefault(_AttributeItem);
	
	var _DescriptorItem = __webpack_require__(73);
	
	var _DescriptorItem2 = _interopRequireDefault(_DescriptorItem);
	
	var _HexOnlyEditableField = __webpack_require__(20);
	
	var _HexOnlyEditableField2 = _interopRequireDefault(_HexOnlyEditableField);
	
	var _uuid_definitions = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const NOTIFY = 1;
	const INDICATE = 2;
	
	class CharacteristicItem extends _AttributeItem2.default {
	    constructor(props) {
	        super(props);
	        this.bars = 2;
	        this.attributeType = 'characteristic';
	        this.childAttributeType = 'descriptor';
	    }
	
	    _onToggleNotify(e) {
	        e.stopPropagation();
	
	        const isNotifying = this._isNotifying(this.cccdDescriptor);
	        const hasNotifyProperty = this.props.item.properties.notify;
	        const hasIndicateProperty = this.props.item.properties.indicate;
	
	        if (this.cccdDescriptor === undefined) {
	            return;
	        }
	
	        if (!hasNotifyProperty && !hasIndicateProperty) {
	            return;
	        }
	
	        let cccdValue;
	        if (!isNotifying) {
	            if (hasNotifyProperty) {
	                cccdValue = NOTIFY;
	            } else {
	                cccdValue = INDICATE;
	            }
	        } else {
	            cccdValue = 0;
	        }
	
	        const value = [cccdValue, 0];
	
	        this.props.onWriteDescriptor(this.cccdDescriptor, value);
	    }
	
	    _findCccdDescriptor(children) {
	        if (!children) {
	            return;
	        }
	
	        return children.find(child => child.uuid === _AttributeItem.CCCD_UUID);
	    }
	
	    _isNotifying(cccdDescriptor) {
	        if (!cccdDescriptor) {
	            return false;
	        }
	
	        const valueArray = cccdDescriptor.value.toArray();
	
	        if (valueArray.length < 2) {
	            return false;
	        }
	
	        return (valueArray[0] & (NOTIFY | INDICATE)) > 0;
	    }
	
	    renderContent() {
	        var _props = this.props;
	        const item = _props.item,
	              selected = _props.selected;
	        const uuid = item.uuid,
	              properties = item.properties,
	              value = item.value,
	              children = item.children;
	
	
	        this.cccdDescriptor = this._findCccdDescriptor(children);
	
	        const isLocal = this._isLocalAttribute();
	        const isNotifying = this._isNotifying(this.cccdDescriptor);
	        const itemIsSelected = item.instanceId === selected;
	
	        const hasCccd = this.cccdDescriptor !== undefined;
	        const hasReadProperty = properties.read;
	        const hasWriteProperty = properties.write || properties.writeWoResp || properties.reliableWr;
	        const hasNotifyProperty = properties.notify;
	        const hasIndicateProperty = properties.indicate;
	        const hasNotifyOrIndicateProperty = hasNotifyProperty || hasIndicateProperty;
	
	        const toggleNotificationsText = hasCccd ? 'Toggle notifications' : 'Toggle notifications (CCCD not discovered)';
	        const notifyIconStyle = !isLocal && hasNotifyOrIndicateProperty ? {} : { display: 'none' };
	        const notifyIcon = isNotifying && hasNotifyOrIndicateProperty ? 'icon-stop' : 'icon-play';
	
	        const showText = (0, _uuid_definitions.getUuidFormat)(uuid) === _uuid_definitions.TEXT;
	
	        const propertyList = [];
	
	        if (properties) {
	            properties.forEach((propertyValue, property) => {
	                if (propertyValue) {
	                    propertyList.push(_react2.default.createElement(
	                        'div',
	                        { key: property, className: 'device-flag' },
	                        property
	                    ));
	                }
	            });
	        }
	
	        const _onRead = hasReadProperty && !isLocal ? () => this._onRead() : undefined;
	
	        const _onWrite = hasWriteProperty || isLocal ? value => this._onWrite(value) : null;
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'content' },
	            _react2.default.createElement(
	                'div',
	                { className: 'btn btn-primary btn-xs btn-nordic btn-notify',
	                    title: toggleNotificationsText,
	                    disabled: !hasCccd,
	                    style: notifyIconStyle,
	                    onClick: e => this._onToggleNotify(e) },
	                _react2.default.createElement('i', { className: notifyIcon })
	            ),
	            _react2.default.createElement(
	                'div',
	                null,
	                this.renderName(),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'flag-line' },
	                    propertyList
	                )
	            ),
	            _react2.default.createElement(_HexOnlyEditableField2.default, { value: value.toArray(),
	                onWrite: _onWrite,
	                showReadButton: hasReadProperty && itemIsSelected,
	                onRead: _onRead,
	                selectParent: () => this._selectComponent(),
	                showText: showText }),
	            this.renderError()
	        );
	    }
	
	    renderChildren() {
	        var _props2 = this.props;
	        const item = _props2.item,
	              selected = _props2.selected,
	              onSelectAttribute = _props2.onSelectAttribute,
	              onReadDescriptor = _props2.onReadDescriptor,
	              onWriteDescriptor = _props2.onWriteDescriptor;
	        const children = item.children;
	
	
	        return children.map(descriptor => _react2.default.createElement(_DescriptorItem2.default, { key: descriptor.instanceId,
	            item: descriptor,
	            selected: selected,
	            onSelectAttribute: onSelectAttribute,
	            onChange: () => this._childChanged(),
	            onRead: onReadDescriptor,
	            onWrite: onWriteDescriptor }));
	    }
	}
	exports.default = CharacteristicItem;
	module.exports = exports['default'];

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(24);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _Connector = __webpack_require__(70);
	
	var _dfu_icon = __webpack_require__(118);
	
	var _dfu_icon2 = _interopRequireDefault(_dfu_icon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const WINDOW_WIDTH_OFFSET = 375;
	const THROTTLE_TIMEOUT = 100;
	
	class ConnectedDevice extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.boundResizeListener = this._resizeThrottler.bind(this);
	    }
	
	    componentDidMount() {
	        window.addEventListener('resize', this.boundResizeListener);
	        const domNode = _reactDom2.default.findDOMNode(this);
	        if (domNode) {
	            this.boundingRect = domNode.getBoundingClientRect();
	        }
	    }
	
	    componentWillUnmount() {
	        window.removeEventListener('resize', this.boundResizeListener);
	    }
	
	    _resizeThrottler() {
	        if (this.resizeTimeout) {
	            return;
	        }
	
	        this.resizeTimeout = setTimeout(() => {
	            this.resizeTimeout = null;
	            this._onResize();
	        }, THROTTLE_TIMEOUT);
	    }
	
	    _onResize() {
	        if (!this.boundingRect) {
	            return;
	        }
	
	        const isCurrentlyBelow = window.innerWidth < this.boundingRect.right + WINDOW_WIDTH_OFFSET;
	        const hasChanged = isCurrentlyBelow !== this.belowWidthThreshold;
	
	        if (!hasChanged) {
	            return;
	        }
	
	        this.belowWidthThreshold = isCurrentlyBelow;
	        this.forceUpdate();
	    }
	
	    _onSelect(event, eventKey) {
	        var _props = this.props;
	        const onDisconnect = _props.onDisconnect,
	              onPair = _props.onPair,
	              onConnectionParamsUpdate = _props.onConnectionParamsUpdate,
	              device = _props.device;
	
	
	        switch (eventKey) {
	            case 'Disconnect':
	                onDisconnect();
	                break;
	            case 'Update':
	                onConnectionParamsUpdate(device);
	                break;
	            case 'Pair':
	                onPair();
	                break;
	            default:
	                console.log('Unknown eventKey received: ' + eventKey);
	        }
	    }
	
	    render() {
	        var _props2 = this.props;
	        const device = _props2.device,
	              id = _props2.id,
	              sourceId = _props2.sourceId,
	              layout = _props2.layout,
	              isDfuSupported = _props2.isDfuSupported;
	
	
	        const role = device.role === 'central' ? 'Central' : 'Peripheral';
	
	        const style = {
	            opacity: device.connected === true ? 1.0 : 0.5
	        };
	
	        const pullRight = this.belowWidthThreshold ? true : false;
	
	        return _react2.default.createElement(
	            'div',
	            { id: id, className: 'device standalone', style: style },
	            _react2.default.createElement(
	                'div',
	                { className: 'top-bar' },
	                _react2.default.createElement('div', { className: 'flag-line' })
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'device-body text-small' },
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'pull-right' },
	                        isDfuSupported ? _react2.default.createElement(
	                            _reactBootstrap.Button,
	                            { id: 'dfuButton', bsStyle: 'primary', className: 'btn-nordic btn-xs', title: 'Start Secure DFU', onClick: this.props.onClickDfu },
	                            _react2.default.createElement('img', { src: _dfu_icon2.default, className: 'icon-dfu-button' })
	                        ) : null,
	                        _react2.default.createElement(
	                            _reactBootstrap.Dropdown,
	                            { pullRight: pullRight, id: 'connectionDropDown', onClick: () => this._onResize(), onSelect: (eventKey, event) => {
	                                    this._onSelect(event, eventKey);
	                                } },
	                            _react2.default.createElement(
	                                _reactBootstrap.Dropdown.Toggle,
	                                { noCaret: true },
	                                _react2.default.createElement('span', { className: 'icon-cog', 'aria-hidden': 'true' })
	                            ),
	                            _react2.default.createElement(
	                                _reactBootstrap.Dropdown.Menu,
	                                { pullRight: pullRight },
	                                _react2.default.createElement(
	                                    _reactBootstrap.MenuItem,
	                                    { id: 'updateConnectionMenuItem', eventKey: 'Update' },
	                                    'Update connection...'
	                                ),
	                                _react2.default.createElement(
	                                    _reactBootstrap.MenuItem,
	                                    { id: 'pairMenuItem', eventKey: 'Pair' },
	                                    'Pair...'
	                                ),
	                                _react2.default.createElement(
	                                    _reactBootstrap.MenuItem,
	                                    { id: 'disconnectMenuItem', eventKey: 'Disconnect' },
	                                    'Disconnect'
	                                )
	                            )
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'role-flag pull-right' },
	                        role
	                    ),
	                    _react2.default.createElement(
	                        'strong',
	                        null,
	                        device.name ? device.name : '<Unknown>'
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'address-text' },
	                    device.address
	                )
	            ),
	            _react2.default.createElement(_Connector.Connector, { sourceId: sourceId, targetId: id, device: device, layout: layout })
	        );
	
	        // TODO: later on, we must implement a transition of data from device discovery flags
	        // TODO: to connected devices.
	        //
	        // <div className='flag-line'>
	        //     {device.services.map((service, index) => {
	        //         return (<div key={index} className='device-flag'>{service}</div>);
	        //     })}
	        // </div>
	    }
	}
	
	exports.default = ConnectedDevice;
	ConnectedDevice.propTypes = {
	    id: _react.PropTypes.string.isRequired,
	    device: _react.PropTypes.object.isRequired,
	    sourceId: _react.PropTypes.string.isRequired,
	    layout: _react.PropTypes.string.isRequired,
	    isDfuSupported: _react.PropTypes.bool,
	    onClickDfu: _react.PropTypes.func,
	    onDisconnect: _react.PropTypes.func.isRequired,
	    onPair: _react.PropTypes.func.isRequired,
	    onConnectionParamsUpdate: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ConnectionUpdateRequestEditor = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _common = __webpack_require__(11);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const CONN_INTERVAL_MIN = 7.5;
	const CONN_INTERVAL_MAX = 4000;
	const CONN_INTERVAL_STEP = 1.25;
	const CONN_TIMEOUT_MIN = 100;
	const CONN_TIMEOUT_MAX = 32000;
	const CONN_TIMEOUT_STEP = 10;
	const CONN_LATENCY_MIN = 0;
	const CONN_LATENCY_MAX = 499;
	const CONN_LATENCY_STEP = 1;
	
	// This component views an editor for connection update parameters
	// One concept is essential:
	//  If the user sets an connectionInterval we force that value to the SoftDevice
	//  by setting both maxConnectionInterval and minConnection interval to that value.
	class ConnectionUpdateRequestEditor extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        const event = props.event;
	        const device = event.device;
	
	
	        const requestedConnectionParams = event.requestedConnectionParams;
	
	        this.connectionInterval = requestedConnectionParams.minConnectionInterval;
	        this.connectionSupervisionTimeout = requestedConnectionParams.connectionSupervisionTimeout;
	        this.slaveLatency = requestedConnectionParams.slaveLatency;
	
	        this.maxConnectionInterval = requestedConnectionParams.maxConnectionInterval;
	        this.minConnectionInterval = requestedConnectionParams.minConnectionInterval;
	
	        this._setAndValidateSlaveLatency(this.slaveLatency);
	        this._setAndValidateConnectionSupervisionTimeout(this.connectionSupervisionTimeout);
	    }
	
	    _generateHeaderMessage() {
	        const event = this.props.event;
	
	        const address = event.device.address;
	
	        if (event.type === _common.BLEEventType.USER_INITIATED_CONNECTION_UPDATE) {
	            return `Connection parameters update for device ${address}`;
	        } else if (event.type === _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE) {
	            return `Connection parameters update request from device ${address}`;
	        } else if (event.type === _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE) {
	            return `Connection parameters updated by peer central ${address}`;
	        }
	    }
	
	    _createConnectionIntervalControl() {
	        const event = this.props.event;
	
	
	        const device = event.device;
	        const address = device.address;
	
	        const range = event.type === _common.BLEEventType.USER_INITIATED_CONNECTION_UPDATE ? undefined : _react2.default.createElement(
	            'div',
	            null,
	            '(',
	            event.requestedConnectionParams.minConnectionInterval,
	            '-',
	            event.requestedConnectionParams.maxConnectionInterval,
	            ')'
	        );
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'label',
	                { className: 'control-label col-sm-7',
	                    htmlFor: 'interval_' + address },
	                'Connection Interval (ms) ',
	                range
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'col-sm-5' },
	                _react2.default.createElement(_nrfconnectCore.TextInput, { id: 'interval_' + address,
	                    className: 'form-control nordic-form-control',
	                    onChange: _event => this._handleConnectionIntervalChange(_event),
	                    type: 'number',
	                    min: CONN_INTERVAL_MIN,
	                    max: CONN_INTERVAL_MAX,
	                    step: CONN_INTERVAL_STEP,
	                    defaultValue: this.connectionInterval,
	                    readOnly: this.readOnly })
	            )
	        );
	    }
	
	    _isSlaveLatencyValid(slaveLatency) {
	        return slaveLatency >= CONN_LATENCY_MIN && slaveLatency <= CONN_LATENCY_MAX;
	    }
	
	    _isConnectionSupervisionTimeoutValid(connectionSupervisionTimeout) {
	        return connectionSupervisionTimeout >= CONN_TIMEOUT_MIN && connectionSupervisionTimeout < CONN_TIMEOUT_MAX;
	    }
	
	    _setAndValidateConnectionSupervisionTimeout(value) {
	        this.connectionSupervisionTimeout = value;
	        this.isConnectionSupervisionTimeoutValid = this._isConnectionSupervisionTimeoutValid(this.connectionSupervisionTimeout);
	    }
	
	    _handleConnectionSupervisionTimeoutChange(event) {
	        this._setAndValidateConnectionSupervisionTimeout(parseInt(event.target.value, 10));
	        this.forceUpdate();
	    }
	
	    _setAndValidateSlaveLatency(value) {
	        this.slaveLatency = value;
	        this.isSlaveLatencyValid = this._isSlaveLatencyValid(value);
	    }
	
	    _handleSlaveLatencyChange(event) {
	        this._setAndValidateSlaveLatency(parseInt(event.target.value, 10));
	        this.forceUpdate();
	    }
	
	    _handleConnectionIntervalChange(event) {
	        if (event.target.value === '') {
	            return;
	        }
	
	        this.connectionInterval = parseFloat(event.target.value);
	    }
	
	    _handleUpdateConnection() {
	        var _props = this.props;
	        const event = _props.event,
	              onUpdateConnectionParams = _props.onUpdateConnectionParams;
	
	        // Set minConnectionInterval and maxConnectionInterval to connectionInterval
	        // that way we force the connectionInterval on SoftDevice.
	
	        this.minConnectionInterval = this.connectionInterval;
	        this.maxConnectionInterval = this.connectionInterval;
	
	        onUpdateConnectionParams(event.device, {
	            minConnectionInterval: this.minConnectionInterval,
	            maxConnectionInterval: this.maxConnectionInterval,
	            slaveLatency: this.slaveLatency,
	            connectionSupervisionTimeout: this.connectionSupervisionTimeout
	        });
	    }
	
	    _getValidInputStyle() {
	        return {
	            boxShadow: 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, 0.6)',
	            borderColor: '#66afe9'
	        };
	    }
	
	    _getInvalidInputStyle() {
	        return {
	            boxShadow: 'inset 0 1px 1px rgba(0,0,0,.075), 0 0 5px rgba(255, 0, 0, 1)',
	            borderColor: 'rgb(200, 10, 10)'
	        };
	    }
	
	    render() {
	        var _props2 = this.props;
	        const event = _props2.event,
	              onUpdateConnectionParams = _props2.onUpdateConnectionParams,
	              onRejectConnectionParams = _props2.onRejectConnectionParams,
	              onIgnoreEvent = _props2.onIgnoreEvent,
	              onCancelUserInitiatedEvent = _props2.onCancelUserInitiatedEvent;
	
	
	        this.readOnly = event.type === _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE;
	
	        const device = event.device;
	        const address = device.address;
	
	        const slaveLatencyStyle = this.isSlaveLatencyValid ? this._getValidInputStyle() : this._getInvalidInputStyle();
	        const connectionSupervisionTimeoutInputStyle = this.isConnectionSupervisionTimeoutValid ? this._getValidInputStyle() : this._getInvalidInputStyle();
	
	        const ignoreButton = event.type === _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button',
	                onClick: () => onIgnoreEvent(event.id),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Ignore'
	        ) : '';
	
	        const rejectButton = event.type === _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button',
	                onClick: () => onRejectConnectionParams(event.device),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Reject'
	        ) : '';
	
	        const disconnectButton = event.type === _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button',
	                onClick: () => onRejectConnectionParams(event.device),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Disconnect'
	        ) : '';
	
	        const updateButton = event.type !== _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { disabled: !this.isSlaveLatencyValid || !this.isConnectionSupervisionTimeoutValid,
	                type: 'button',
	                onClick: () => this._handleUpdateConnection(),
	                className: 'btn btn-primary btn-sm btn-nordic' },
	            'Update'
	        ) : '';
	
	        const acceptButton = event.type === _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { disabled: !this.isSlaveLatencyValid || !this.isConnectionSupervisionTimeoutValid,
	                type: 'button',
	                onClick: () => onUpdateConnectionParams(event.id),
	                className: 'btn btn-primary btn-sm btn-nordic' },
	            'Accept'
	        ) : '';
	
	        const cancelButton = event.type === _common.BLEEventType.USER_INITIATED_CONNECTION_UPDATE ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button',
	                onClick: () => onCancelUserInitiatedEvent(event.id),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Cancel'
	        ) : '';
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: 'event-header' },
	                _react2.default.createElement(
	                    'h4',
	                    null,
	                    this._generateHeaderMessage()
	                )
	            ),
	            _react2.default.createElement(
	                'form',
	                { className: 'form-horizontal' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'form-group ' },
	                    this._createConnectionIntervalControl()
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'form-group' },
	                    _react2.default.createElement(
	                        'label',
	                        { className: 'control-label col-sm-7', htmlFor: 'latency_' + address },
	                        'Slave latency'
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'col-sm-5' },
	                        _react2.default.createElement(_nrfconnectCore.TextInput, { style: slaveLatencyStyle,
	                            id: 'latency_' + address,
	                            className: 'form-control nordic-form-control',
	                            onChange: _event => this._handleSlaveLatencyChange(_event),
	                            type: 'number',
	                            value: this.slaveLatency,
	                            min: CONN_LATENCY_MIN,
	                            max: CONN_LATENCY_MAX,
	                            step: CONN_LATENCY_STEP,
	                            readOnly: this.readOnly
	                        })
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'form-group' },
	                    _react2.default.createElement(
	                        'div',
	                        null,
	                        _react2.default.createElement(
	                            'label',
	                            { className: 'control-label col-sm-7', htmlFor: 'timeout_' + address },
	                            'Connection supervision timeout (ms)'
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'col-sm-5' },
	                            _react2.default.createElement(_nrfconnectCore.TextInput, { style: connectionSupervisionTimeoutInputStyle,
	                                id: 'timeout_' + address,
	                                className: 'form-control nordic-form-control',
	                                onChange: _event => this._handleConnectionSupervisionTimeoutChange(_event),
	                                type: 'number',
	                                min: CONN_TIMEOUT_MIN,
	                                max: CONN_TIMEOUT_MAX,
	                                step: CONN_TIMEOUT_STEP,
	                                readOnly: this.readOnly,
	                                value: this.connectionSupervisionTimeout })
	                        )
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        null,
	                        cancelButton,
	                        rejectButton,
	                        disconnectButton,
	                        updateButton,
	                        acceptButton,
	                        ignoreButton
	                    )
	                )
	            )
	        );
	    }
	}
	
	exports.ConnectionUpdateRequestEditor = ConnectionUpdateRequestEditor;
	ConnectionUpdateRequestEditor.propTypes = {
	    event: _react.PropTypes.object.isRequired,
	    onRejectConnectionParams: _react.PropTypes.func.isRequired,
	    onUpdateConnectionParams: _react.PropTypes.func.isRequired,
	    onIgnoreEvent: _react.PropTypes.func.isRequired,
	    onCancelUserInitiatedEvent: _react.PropTypes.func.isRequired
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.Connector = exports.ConnectionOverlay = exports.ConnectionSetup = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _layoutStrategies = __webpack_require__(59);
	
	var _layoutStrategies2 = _interopRequireDefault(_layoutStrategies);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class ConnectionSetup extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    render() {
	        const device = this.props.device;
	
	
	        const securityLevelText = device.securityLevel === 2 ? 'Unauthenticated encrypted link' : device.securityLevel === 3 ? 'Authenticated encrypted link' : device.securityLevel === 4 ? 'LESC authenticated encrypted link' : 'Unencrypted link';
	
	        const iconClass = device.securityLevel && device.securityLevel > 1 ? 'icon-lock' : 'icon-lock-open';
	        const iconBondedClass = device.bonded ? 'icon-link' : 'icon-unlink';
	        const bondedText = device.bonded ? 'Bonded' : 'Not bonded';
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'connection-parameters' },
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-8 col-xs-8 connection-parameter-label' },
	                'Connection Interval'
	            ),
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-4 col-xs-4 connection-parameter-value' },
	                device.maxConnectionInterval,
	                ' ms'
	            ),
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-8 col-xs-8 connection-parameter-label' },
	                'Slave latency'
	            ),
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-4 col-xs-4 connection-parameter-value' },
	                device.slaveLatency,
	                ' ms'
	            ),
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-8 col-xs-8 connection-parameter-label' },
	                'Timeout'
	            ),
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-4 col-xs-4 connection-parameter-value' },
	                device.connectionSupervisionTimeout,
	                ' ms'
	            ),
	            _react2.default.createElement(
	                'span',
	                { className: 'col-sm-8 col-xs-8 top-spacer ' + iconBondedClass },
	                ' ',
	                bondedText
	            ),
	            _react2.default.createElement('span', { className: 'col-sm-4 col-xs-4 connection-parameter-value' }),
	            _react2.default.createElement(
	                'span',
	                { className: 'connection-security ' + iconClass },
	                ' ',
	                securityLevelText
	            )
	        );
	    }
	}
	
	exports.ConnectionSetup = ConnectionSetup;
	ConnectionSetup.propTypes = {
	    device: _react.PropTypes.object.isRequired
	};
	
	class ConnectionOverlay extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    _closeme() {
	        this.refs.overlayTrigger.hide();
	    }
	
	    render() {
	        var _props = this.props;
	        const style = _props.style,
	              device = _props.device;
	
	
	        const iconClass = device.securityLevel && device.securityLevel > 1 ? 'icon-lock' : 'icon-lock-open';
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'connection-info-button btn btn-xs btn-link', style: style },
	            _react2.default.createElement(
	                _reactBootstrap.OverlayTrigger,
	                { ref: 'overlayTrigger', trigger: ['click', 'focus', 'hover'], rootClose: true, placement: 'left',
	                    overlay: _react2.default.createElement(
	                        _reactBootstrap.Popover,
	                        { id: 'pover', title: 'Connection Information' },
	                        _react2.default.createElement(ConnectionSetup, { device: device, closePopover: this._closeme })
	                    ) },
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    _react2.default.createElement('i', { className: 'icon-encircled ' + iconClass })
	                )
	            )
	        );
	    }
	}
	
	exports.ConnectionOverlay = ConnectionOverlay;
	ConnectionOverlay.propTypes = {
	    style: _react.PropTypes.object.isRequired,
	    device: _react.PropTypes.object.isRequired
	};
	
	class Connector extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    componentDidMount() {
	        // To be able to draw the line between two component they have be in the browser DOM
	        // At first render they are not rendered, therefore we have to do an additional rendering
	        // after the componenets are in the brower DOM.
	        this.forceUpdate();
	    }
	
	    _generateLines(lineCoordinates) {
	        var result = [];
	
	        for (let i = 0; i < lineCoordinates.length - 1; i++) {
	            result.push(_react2.default.createElement('line', { stroke: 'black', strokeWidth: '3', strokeLinecap: 'square', key: i,
	                x1: lineCoordinates[i].x,
	                y1: lineCoordinates[i].y,
	                x2: lineCoordinates[i + 1].x,
	                y2: lineCoordinates[i + 1].y
	            }));
	        }
	
	        return result;
	    }
	
	    _getConnectionOverlay(lineCoordinates) {
	        const device = this.props.device;
	
	
	        if (lineCoordinates.length < 2) {
	            return;
	        }
	
	        const pointA = lineCoordinates[lineCoordinates.length - 2];
	        const pointB = lineCoordinates[lineCoordinates.length - 1];
	
	        let posX = (pointA.x - pointB.x) / 2;
	        let posY = (pointA.y - pointB.y) / 2;
	
	        const targetElement = document.getElementById(this.props.targetId);
	        const targetRect = targetElement.getBoundingClientRect();
	
	        if (posX === 0) {
	            posX = targetRect.width / 2;
	        }
	
	        if (posY === 0) {
	            posY = targetRect.height / 2;
	        }
	
	        return _react2.default.createElement(ConnectionOverlay, { style: { position: 'absolute', left: posX - 14, top: posY - 14 }, device: device });
	    }
	
	    render() {
	        var _props2 = this.props;
	        const sourceId = _props2.sourceId,
	              targetId = _props2.targetId,
	              layout = _props2.layout;
	
	
	        const sourceElement = document.getElementById(sourceId);
	        const targetElement = document.getElementById(targetId);
	
	        if (!sourceElement || !targetElement) {
	            return _react2.default.createElement('div', null);
	        }
	
	        const sourceRect = sourceElement.getBoundingClientRect();
	        const targetRect = targetElement.getBoundingClientRect();
	
	        const layoutInfo = (0, _layoutStrategies2.default)(layout)(sourceRect, targetRect, 3);
	        const connectorBox = layoutInfo.boundingBox;
	        const lines = this._generateLines(layoutInfo.lineCoordinates);
	        const connectionInfoOverlay = this._getConnectionOverlay(layoutInfo.lineCoordinates);
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'connector' },
	            _react2.default.createElement(
	                'svg',
	                { style: { position: 'absolute', left: connectorBox.left, top: connectorBox.top, width: connectorBox.width, height: connectorBox.height } },
	                lines
	            ),
	            connectionInfoOverlay
	        );
	    }
	}
	
	exports.Connector = Connector;
	Connector.propTypes = {
	    device: _react.PropTypes.object.isRequired,
	    sourceId: _react.PropTypes.string.isRequired,
	    targetId: _react.PropTypes.string.isRequired,
	    layout: _react.PropTypes.string.isRequired
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.CountdownTimer = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class CountdownTimer extends _react.Component {
	    constructor(props) {
	        super(props);
	        this.secondsRemaining = props.seconds;
	    }
	
	    _tick() {
	        this.secondsRemaining = --this.secondsRemaining;
	        this.forceUpdate();
	
	        if (this.secondsRemaining <= 0) {
	            clearInterval(this.interval);
	
	            if (this.props.onTimeout) {
	                this.props.onTimeout();
	            }
	        }
	    }
	
	    cancelTimer() {
	        clearInterval(this.intervalId);
	    }
	
	    componentDidMount() {
	        this.interval = setInterval(() => this._tick(), 1000);
	    }
	
	    componentWillUnmount() {
	        clearInterval(this.interval);
	    }
	
	    render() {
	        const content = this.secondsRemaining ? this.secondsRemaining : '';
	        return _react2.default.createElement(
	            'div',
	            { className: 'countdown-timer' },
	            ' ',
	            content,
	            ' '
	        );
	    }
	}
	
	exports.CountdownTimer = CountdownTimer;
	CountdownTimer.propTypes = {
	    seconds: _react.PropTypes.number.isRequired,
	    onTimeout: _react.PropTypes.func.isRequired
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _UuidInput = __webpack_require__(30);
	
	var _UuidInput2 = _interopRequireDefault(_UuidInput);
	
	var _HexOnlyEditableField = __webpack_require__(20);
	
	var _HexOnlyEditableField2 = _interopRequireDefault(_HexOnlyEditableField);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _Errors = __webpack_require__(19);
	
	var _validateUuid = __webpack_require__(21);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DescriptorEditor extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    validateUuidInput() {
	        return (0, _validateUuid.validateUuid)(this.uuid);
	    }
	
	    validateValueLength() {
	        const maxLength = parseInt(this.maxLength);
	        const fixedLength = this.fixedLength;
	        const value = this._parseValueProperty(this.value);
	
	        if (maxLength > 510 && fixedLength === true) {
	            return _validateUuid.ERROR;
	        }
	
	        if (maxLength > 512 && fixedLength === false) {
	            return _validateUuid.ERROR;
	        }
	
	        if (maxLength < value.length) {
	            return _validateUuid.ERROR;
	        }
	
	        return _validateUuid.SUCCESS;
	    }
	
	    _setCheckedProperty(property, e) {
	        this[property] = e.target.checked;
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    _setValueProperty(property, e) {
	        this[property] = e.target.value;
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    _parseValueProperty(value) {
	        if (value.length === 0) {
	            return [];
	        }
	
	        if (typeof value === 'string') {
	            const valueArray = value.split(' ');
	            return valueArray.map(value => parseInt(value, 16));
	        }
	
	        return this.value;
	    }
	
	    _setInitialValue(value) {
	        this.value = value;
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    _onUuidChange(uuid) {
	        const _hexRegEx = /^[0-9A-F]*$/i;
	        const valid = _hexRegEx.test(uuid);
	        let caretPosition = textarea.selectionStart;
	
	        if (!valid) {
	            caretPosition--;
	            this.forceUpdate(() => textarea.setSelectionRange(caretPosition, caretPosition));
	            return;
	        }
	
	        this.uuid = uuid;
	        let uuidName = (0, _uuid_definitions.getUuidName)(this.uuid);
	
	        if (this.uuid !== uuidName) {
	            this.name = uuidName;
	        }
	
	        this.forceUpdate(() => textarea.setSelectionRange(caretPosition, caretPosition));
	        this.props.onModified(true);
	    }
	
	    _saveAttribute() {
	        if (this.validateUuidInput() === _validateUuid.ERROR) {
	            this.props.onValidationError(new _Errors.ValidationError('You have to provide a valid UUID.'));
	            return;
	        }
	
	        if (this.validateValueLength() === _validateUuid.ERROR) {
	            this.props.onValidationError(new _Errors.ValidationError('Length of value is not valid.'));
	            return;
	        }
	
	        const changedDescriptor = {
	            instanceId: this.props.descriptor.instanceId,
	            uuid: this.uuid.toUpperCase().trim(),
	            name: this.name,
	            value: this._parseValueProperty(this.value),
	            readPerm: this.readPerm,
	            writePerm: this.writePerm,
	            fixedLength: this.fixedLength,
	            maxLength: parseInt(this.maxLength)
	        };
	
	        this.props.onSaveChangedAttribute(changedDescriptor);
	        this.saved = true;
	        this.props.onModified(false);
	    }
	
	    _handleUuidSelect(uuid) {
	        this.uuid = uuid;
	        let uuidName = (0, _uuid_definitions.getUuidName)(this.uuid);
	
	        if (this.uuid !== uuidName) {
	            this.name = uuidName;
	        }
	
	        this.forceUpdate();
	        this.props.onModified(true);
	    }
	
	    render() {
	        var _props = this.props;
	        const descriptor = _props.descriptor,
	              onRemoveAttribute = _props.onRemoveAttribute;
	        const instanceId = descriptor.instanceId,
	              uuid = descriptor.uuid,
	              name = descriptor.name,
	              value = descriptor.value,
	              readPerm = descriptor.readPerm,
	              writePerm = descriptor.writePerm,
	              fixedLength = descriptor.fixedLength,
	              maxLength = descriptor.maxLength;
	
	
	        if (this.saved || this.instanceId !== instanceId) {
	            this.saved = false;
	            this.instanceId = instanceId;
	            this.uuid = uuid || '';
	            this.name = name;
	            this.value = value.toArray();
	
	            this.readPerm = readPerm;
	            this.writePerm = writePerm;
	            this.fixedLength = fixedLength === true;
	            this.maxLength = maxLength;
	        }
	
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal native-key-bindings' },
	            _react2.default.createElement(_UuidInput2.default, { label: 'Descriptor UUID', name: 'uuid', value: this.uuid,
	                onChange: e => this._onUuidChange(e.target.value), uuidDefinitions: _uuid_definitions.uuidDescriptorDefinitions,
	                handleSelection: uuid => this._handleUuidSelect(uuid) }),
	            _react2.default.createElement(_nrfconnectCore.TextInput, { label: 'Descriptor name', name: 'descriptor-name', value: this.name, onChange: e => this._setValueProperty('name', e) }),
	            _react2.default.createElement(_HexOnlyEditableField2.default, { label: 'Initial value', plain: true, className: 'form-control', name: 'initial-value', value: this.value,
	                onChange: value => this._setInitialValue(value), labelClassName: 'col-md-3', wrapperClassName: 'col-md-9' }),
	            _react2.default.createElement(
	                _nrfconnectCore.SelectList,
	                { label: 'Read permission', type: 'select', className: 'form-control', value: this.readPerm, onChange: e => this._setValueProperty('readPerm', e) },
	                _react2.default.createElement(
	                    'option',
	                    { value: 'open' },
	                    'No security required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt' },
	                    'Encryption required, no MITM'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt mitm-protection' },
	                    'Encryption and MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'signed' },
	                    'Signing or encryption required, no MITM'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'signed mitm-protection' },
	                    'Signing or encryption with MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'no_access' },
	                    'No access rights specified (undefined)'
	                )
	            ),
	            _react2.default.createElement(
	                _nrfconnectCore.SelectList,
	                { label: 'Write permission', type: 'select', className: 'form-control', value: this.writePerm, onChange: e => this._setValueProperty('writePerm', e) },
	                _react2.default.createElement(
	                    'option',
	                    { value: 'open' },
	                    'No security required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt' },
	                    'Encryption required, no MITM'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'encrypt mitm-protection' },
	                    'Encryption and MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'signed' },
	                    'Signing or encryption required, no MITM'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'signed mitm-protection' },
	                    'Signing or encryption with MITM required'
	                ),
	                _react2.default.createElement(
	                    'option',
	                    { value: 'no_access' },
	                    'No access rights specified (undefined)'
	                )
	            ),
	            _react2.default.createElement(
	                _nrfconnectCore.LabeledInputGroup,
	                { label: 'Max length' },
	                _react2.default.createElement(
	                    _reactBootstrap.Checkbox,
	                    { ref: 'fixedLength', checked: this.fixedLength, onChange: e => this._setCheckedProperty('fixedLength', e) },
	                    'Fixed length'
	                ),
	                _react2.default.createElement(_nrfconnectCore.TextInput, { inline: true, type: 'number', min: '0', max: this.fixedLength ? '510' : '512', name: 'max-length', ref: 'maxLength', value: this.maxLength,
	                    onChange: e => this._setValueProperty('maxLength', e) })
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.ButtonToolbar,
	                null,
	                _react2.default.createElement('div', { className: 'col-md-4' }),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { bsStyle: 'primary', className: 'btn-nordic', onClick: onRemoveAttribute },
	                    _react2.default.createElement('i', { className: 'icon-cancel' }),
	                    'Delete'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { bsStyle: 'primary', className: 'btn-nordic', onClick: () => this._saveAttribute() },
	                    'Save'
	                )
	            )
	        );
	    }
	}
	
	exports.default = DescriptorEditor;
	DescriptorEditor.propTypes = {
	    descriptor: _react.PropTypes.object.isRequired,
	    onRemoveAttribute: _react.PropTypes.func.isRequired,
	    onSaveChangedAttribute: _react.PropTypes.func.isRequired,
	    onValidationError: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _AttributeItem = __webpack_require__(28);
	
	var _AttributeItem2 = _interopRequireDefault(_AttributeItem);
	
	var _immutable = __webpack_require__(5);
	
	var _HexOnlyEditableField = __webpack_require__(20);
	
	var _HexOnlyEditableField2 = _interopRequireDefault(_HexOnlyEditableField);
	
	var _api = __webpack_require__(9);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DescriptorItem extends _AttributeItem2.default {
	    constructor(props) {
	        super(props);
	        this.bars = 3;
	        this.expandable = false;
	        this.attributeType = 'descriptor';
	        this.childAttributeType = '';
	    }
	
	    shouldComponentUpdate(nextProps, nextState) {
	        const update = !(0, _immutable.is)(this.props.item.value, nextProps.item.value) || !(0, _immutable.is)(this.props.item.errorMessage, nextProps.item.errorMessage) || !(0, _immutable.is)(this.props.selected, nextProps.selected) || !(0, _immutable.is)(this.props.item.name, nextProps.item.name);
	        return update;
	    }
	
	    renderContent() {
	        var _props = this.props;
	        const item = _props.item,
	              selected = _props.selected;
	        const uuid = item.uuid,
	              instanceId = item.instanceId,
	              value = item.value;
	
	
	        const isLocal = this._isLocalAttribute();
	        const isCCCD = this._isCCCDAttribute(uuid);
	        const isLocalCCCD = isLocal && isCCCD;
	
	        const _onRead = !isLocal ? () => this._onRead() : undefined;
	
	        const _onWrite = !isLocalCCCD ? value => this._onWrite(value) : null;
	
	        const itemIsSelected = instanceId === selected;
	
	        const valueList = [];
	
	        if (isLocalCCCD && _immutable.Map.isMap(value)) {
	            value.forEach((cccdValue, deviceInstanceId) => {
	                const address = (0, _api.getInstanceIds)(deviceInstanceId).address;
	                valueList.push(_react2.default.createElement(_HexOnlyEditableField2.default, { key: instanceId + '-' + deviceInstanceId,
	                    title: 'CCCD value for device: ' + address,
	                    value: cccdValue.toArray(),
	                    onWrite: _onWrite,
	                    onRead: _onRead,
	                    showReadButton: itemIsSelected,
	                    selectParent: () => this._selectComponent() }));
	            });
	        } else {
	            valueList.push(_react2.default.createElement(_HexOnlyEditableField2.default, { key: instanceId,
	                value: value.toArray(),
	                onWrite: _onWrite,
	                onRead: _onRead,
	                showReadButton: itemIsSelected,
	                selectParent: () => this._selectComponent() }));
	        }
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'content' },
	            this.renderName(),
	            valueList,
	            this.renderError()
	        );
	    }
	}
	exports.default = DescriptorItem;
	module.exports = exports['default'];

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	class DfuButton extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	        const dfuInProgress = _props.dfuInProgress,
	              disabled = _props.disabled,
	              onClick = _props.onClick;
	
	
	        let labelString;
	        let iconName;
	
	        if (dfuInProgress) {
	            labelString = 'Stop DFU';
	            iconName = 'icon-stop';
	        } else {
	            labelString = 'Start DFU';
	            iconName = 'icon-play';
	        }
	
	        return _react2.default.createElement(
	            _reactBootstrap.Button,
	            { bsStyle: 'primary', disabled: disabled, className: 'btn-nordic pull-right', onClick: onClick },
	            _react2.default.createElement('span', { className: iconName }),
	            labelString
	        );
	    }
	}
	exports.default = DfuButton;
	DfuButton.propTypes = {
	    dfuInProgress: _react.PropTypes.bool.isRequired,
	    onClick: _react.PropTypes.func.isRequired,
	    disabled: _react.PropTypes.bool
	};
	module.exports = exports['default'];

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _FileInput = __webpack_require__(84);
	
	var _FileInput2 = _interopRequireDefault(_FileInput);
	
	var _ProgressBarInput = __webpack_require__(85);
	
	var _ProgressBarInput2 = _interopRequireDefault(_ProgressBarInput);
	
	var _ReadOnlyField = __webpack_require__(86);
	
	var _ReadOnlyField2 = _interopRequireDefault(_ReadOnlyField);
	
	var _DfuButton = __webpack_require__(74);
	
	var _DfuButton2 = _interopRequireDefault(_DfuButton);
	
	var _DfuThroughputGraph = __webpack_require__(76);
	
	var _DfuThroughputGraph2 = _interopRequireDefault(_DfuThroughputGraph);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DfuEditor extends _react2.default.PureComponent {
	
	    renderPackageInfo() {
	        return _react2.default.createElement(_ReadOnlyField2.default, {
	            label: 'Package info',
	            value: createPackageInfoString(this.props.packageInfo)
	        });
	    }
	
	    renderProgress() {
	        const percentCompleted = this.getPercentCompleted();
	        return _react2.default.createElement(_ProgressBarInput2.default, {
	            label: 'Progress',
	            status: this.getStatus(),
	            now: percentCompleted,
	            progressLabel: `${percentCompleted}%`
	        });
	    }
	
	    renderGraph() {
	        const throughput = this.props.throughput;
	        if (throughput && throughput.kbpsPoints.length > 0) {
	            return _react2.default.createElement(
	                _reactBootstrap.FormGroup,
	                null,
	                _react2.default.createElement(
	                    _reactBootstrap.ControlLabel,
	                    { className: 'col-md-3 text-right' },
	                    'Throughput (kB/s)'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'col-md-9' },
	                    _react2.default.createElement(_DfuThroughputGraph2.default, throughput)
	                )
	            );
	        }
	        return null;
	    }
	
	    getStatus() {
	        if (this.props.isCompleted) {
	            return 'Completed';
	        } else if (this.props.isStopping) {
	            return 'Stopping...';
	        }
	        let status = this.props.status;
	        const fileNameBeingTransferred = this.props.fileNameBeingTransferred;
	        if (fileNameBeingTransferred) {
	            status += ' ' + fileNameBeingTransferred;
	        }
	        return status + '...';
	    }
	
	    getPercentCompleted() {
	        return this.props.isCompleted ? 100 : this.props.percentCompleted;
	    }
	
	    render() {
	        var _props = this.props;
	        const onChooseFile = _props.onChooseFile,
	              filePath = _props.filePath,
	              packageInfo = _props.packageInfo,
	              isStarted = _props.isStarted,
	              isStopping = _props.isStopping,
	              isCompleted = _props.isCompleted,
	              onStartDfu = _props.onStartDfu,
	              onStopDfu = _props.onStopDfu;
	
	
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal native-key-bindings' },
	            _react2.default.createElement(
	                'div',
	                { className: 'col-md-12' },
	                _react2.default.createElement(_FileInput2.default, {
	                    readOnly: true,
	                    buttonDisabled: isStarted || isCompleted,
	                    label: 'Zip file',
	                    value: filePath,
	                    onChooseClicked: onChooseFile
	                }),
	                packageInfo ? this.renderPackageInfo() : null,
	                isStarted || isCompleted ? this.renderProgress() : null,
	                isStarted || isCompleted ? this.renderGraph() : null
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.ButtonToolbar,
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { style: filePath && !isCompleted ? {} : { display: 'none' } },
	                    _react2.default.createElement(_DfuButton2.default, {
	                        dfuInProgress: isStarted,
	                        disabled: isStopping,
	                        onClick: isStarted ? onStopDfu : onStartDfu })
	                )
	            )
	        );
	    }
	}
	
	exports.default = DfuEditor; /**
	                              * Converts an object like:
	                              *
	                              * { "application": { "dat_file": "file.dat", "bin_file": "file.bin" }, ... }
	                              *
	                              * to:
	                              *
	                              * application:
	                              *   dat_file: file.dat
	                              *   bin_file: file.bin
	                              * ...
	                              */
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	DfuEditor.propTypes = {
	    packageInfo: _react.PropTypes.object,
	    filePath: _react.PropTypes.string,
	    status: _react.PropTypes.string,
	    fileNameBeingTransferred: _react.PropTypes.string,
	    percentCompleted: _react.PropTypes.number,
	    isCompleted: _react.PropTypes.bool,
	    isStopping: _react.PropTypes.bool,
	    isStarted: _react.PropTypes.bool,
	    onChooseFile: _react.PropTypes.func.isRequired,
	    onStartDfu: _react.PropTypes.func.isRequired,
	    onStopDfu: _react.PropTypes.func.isRequired,
	    throughput: _react.PropTypes.object
	};
	function createPackageInfoString(packageInfo) {
	    return Object.keys(packageInfo).reduce((prevType, type) => {
	        const valueString = Object.keys(packageInfo[type]).reduce((prevValue, value) => {
	            return prevValue + '\n  ' + value + ': ' + packageInfo[type][value];
	        }, '');
	        return prevType + type + ':' + valueString + '\n';
	    }, '');
	}
	module.exports = exports['default'];

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSizeme = __webpack_require__(153);
	
	var _reactSizeme2 = _interopRequireDefault(_reactSizeme);
	
	var _reactD3Components = __webpack_require__(150);
	
	var _d = __webpack_require__(146);
	
	var _d2 = _interopRequireDefault(_d);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	const HEIGHT = 250;
	const MARGIN = {
	    top: 10,
	    bottom: 30,
	    left: 30,
	    right: 0
	};
	
	class DfuThroughputGraph extends _react2.default.PureComponent {
	
	    static createGraphData(kbpsPoints, averageKbpsPoints) {
	        return [{
	            label: 'average kB/s',
	            values: averageKbpsPoints
	        }, {
	            label: 'kB/s',
	            values: kbpsPoints
	        }];
	    }
	
	    static createXScale(totalSizeKb, width) {
	        const linearScale = _d2.default.scale.linear();
	        return linearScale.domain([0, totalSizeKb]).range([0, width - MARGIN.left - 1]);
	    }
	
	    getWidth() {
	        // The size prop is added by react-sizeme
	        const size = this.props.size;
	        const fallbackWidth = 400;
	        return size ? size.width : fallbackWidth;
	    }
	
	    render() {
	        var _props = this.props;
	        const totalSizeKb = _props.totalSizeKb,
	              kbpsPoints = _props.kbpsPoints,
	              averageKbpsPoints = _props.averageKbpsPoints;
	
	        const width = this.getWidth();
	
	        if (kbpsPoints.length > 0) {
	            return _react2.default.createElement(_reactD3Components.LineChart, {
	                data: DfuThroughputGraph.createGraphData(kbpsPoints, averageKbpsPoints),
	                width: width,
	                height: HEIGHT,
	                xScale: DfuThroughputGraph.createXScale(totalSizeKb, width),
	                xAxis: { label: "kB transferred" },
	                margin: MARGIN
	            });
	        }
	        return null;
	    }
	}
	
	// Wrap the component inside a react-sizeme higher order component (HOC). Makes
	// the component aware of its size, so that the graph can be resized dynamically.
	DfuThroughputGraph.propTypes = {
	    totalSizeKb: _react.PropTypes.number.isRequired,
	    kbpsPoints: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	        x: _react.PropTypes.number,
	        y: _react.PropTypes.number
	    })).isRequired,
	    averageKbpsPoints: _react.PropTypes.arrayOf(_react.PropTypes.shape({
	        x: _react.PropTypes.number,
	        y: _react.PropTypes.number
	    })).isRequired
	};
	exports.default = (0, _reactSizeme2.default)()(DfuThroughputGraph);
	module.exports = exports['default'];

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _stringUtil = __webpack_require__(14);
	
	var _changeCase = __webpack_require__(144);
	
	var _changeCase2 = _interopRequireDefault(_changeCase);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const RSSI_WIDTH_MAX = 20;
	const RSSI_WIDTH_HIGH = Math.round(RSSI_WIDTH_MAX * 0.8);
	const RSSI_WIDTH_MID = Math.round(RSSI_WIDTH_MAX * 0.6);
	const RSSI_WIDTH_LOW = Math.round(RSSI_WIDTH_MAX * 0.4);
	const RSSI_WIDTH_MIN = Math.round(RSSI_WIDTH_MAX * 0.2);
	
	class DiscoveredDevice extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this.currentAdvType = undefined;
	        this.currentFlags = undefined;
	        this.currentServices = undefined;
	    }
	
	    getRssiWidth(rssi) {
	        let rssiWidth;
	        if (rssi < -100) {
	            rssiWidth = RSSI_WIDTH_MIN;
	        } else if (rssi < -80) {
	            rssiWidth = RSSI_WIDTH_LOW;
	        } else if (rssi < -60) {
	            rssiWidth = RSSI_WIDTH_MID;
	        } else if (rssi < -45) {
	            rssiWidth = RSSI_WIDTH_HIGH;
	        } else {
	            rssiWidth = RSSI_WIDTH_MAX;
	        }
	
	        return rssiWidth;
	    }
	
	    getAdvTypeText(advType) {
	        if (!advType) {
	            return;
	        }
	
	        if (advType.includes('ADV_IND')) {
	            return 'Connectable undirected';
	        } else if (advType.includes('ADV_DIRECT')) {
	            return 'Connectable directed';
	        } else if (advType.includes('ADV_SCAN')) {
	            return 'Scannable undirected';
	        } else if (advType.includes('NONCONN_IND')) {
	            return 'Non connectable undirected';
	        }
	
	        return;
	    }
	
	    rewriter(value) {
	        const rewrite_rules = [{ expr: /BLE_GAP_AD_TYPE_(.*)/, on_match: function (matches) {
	                return _changeCase2.default.pascalCase(matches[1]);
	            }
	        }, { expr: /BLE_GAP_ADDR_TYPE_(.*)/, on_match: function (matches) {
	                return _changeCase2.default.pascalCase(matches[1]);
	            }
	        }];
	
	        try {
	            for (let rewrite_rule in rewrite_rules) {
	                const rule = rewrite_rules[rewrite_rule];
	
	                if (rule.expr.test(value)) {
	                    return rule.on_match(rule.expr.exec(value));
	                }
	            }
	        } catch (err) {
	            // Log to console.log because we may not have a valid logger if we get here.
	            console.log(err);
	        }
	
	        // We did not find any rules to rewrite the value, return original value
	        return _changeCase2.default.camelCase(value);
	    }
	
	    onButtonClick(e, device) {
	        var _props = this.props;
	        const onCancelConnect = _props.onCancelConnect,
	              onConnect = _props.onConnect,
	              adapterIsConnecting = _props.adapterIsConnecting;
	
	
	        e.stopPropagation();
	
	        if (adapterIsConnecting) {
	            onCancelConnect(device);
	        } else {
	            onConnect(device);
	        }
	    }
	
	    render() {
	        var _props2 = this.props;
	        const device = _props2.device,
	              isConnecting = _props2.isConnecting,
	              onToggleExpanded = _props2.onToggleExpanded,
	              adapterIsConnecting = _props2.adapterIsConnecting;
	
	
	        let adDataDiv = '';
	        let advTypeDiv = '';
	        let flagsDiv = '';
	        let servicesDiv = '';
	        let addressDiv = '';
	        let addressTypeDiv = '';
	
	        if (device.isExpanded) {
	            if (device.advType) {
	                this.currentAdvType = device.advType;
	            }
	
	            if (device.flags && device.flags.size > 0) {
	                this.currentFlags = device.flags;
	            }
	
	            if (device.services && device.services.size > 0) {
	                this.currentServices = device.services;
	            }
	
	            adDataDiv = _react2.default.createElement(
	                'div',
	                null,
	                device.adData.filterNot((value, key) => key.includes('BIT_SERVICE') || key.includes('_FLAGS') || key.includes('LOCAL_NAME')).map((value, key) => {
	                    return _react2.default.createElement(
	                        'div',
	                        { className: 'adv-line' },
	                        _react2.default.createElement(
	                            'span',
	                            { key: key + '_1', className: 'adv-label' },
	                            this.rewriter(key),
	                            ': '
	                        ),
	                        _react2.default.createElement(
	                            'span',
	                            { key: key + '_2', className: 'adv-value' },
	                            (0, _stringUtil.toHexString)(value),
	                            ' '
	                        )
	                    );
	                })
	            );
	
	            advTypeDiv = this.currentAdvType ? _react2.default.createElement(
	                'div',
	                { className: 'adv-line' },
	                _react2.default.createElement(
	                    'span',
	                    { className: 'adv-label' },
	                    'Advertising type:'
	                ),
	                _react2.default.createElement(
	                    'span',
	                    { className: 'adv-value' },
	                    this.getAdvTypeText(this.currentAdvType),
	                    ' '
	                )
	            ) : '';
	
	            addressTypeDiv = _react2.default.createElement(
	                'div',
	                { className: 'adv-line' },
	                _react2.default.createElement(
	                    'span',
	                    { className: 'adv-label' },
	                    'Address type: '
	                ),
	                _react2.default.createElement(
	                    'span',
	                    { className: 'adv-value' },
	                    this.rewriter(device.addressType),
	                    ' '
	                )
	            );
	
	            flagsDiv = this.currentFlags && this.currentFlags.size > 0 ? _react2.default.createElement(
	                'div',
	                { className: 'adv-line' },
	                _react2.default.createElement(
	                    'span',
	                    { className: 'adv-label' },
	                    'Flags:'
	                ),
	                this.currentFlags.map(function (flag, index) {
	                    return _react2.default.createElement(
	                        'span',
	                        { key: index + '_3', className: 'adv-value' },
	                        flag
	                    );
	                })
	            ) : '';
	
	            servicesDiv = this.currentServices && this.currentServices.size > 0 ? _react2.default.createElement(
	                'div',
	                { className: 'adv-line' },
	                _react2.default.createElement(
	                    'span',
	                    { className: 'adv-label' },
	                    'Services:'
	                ),
	                device.services.map(function (service, index) {
	                    return _react2.default.createElement(
	                        'span',
	                        { key: index + '_4', className: 'adv-value' },
	                        (0, _uuid_definitions.getUuidName)(service),
	                        ' '
	                    );
	                })
	            ) : '';
	        }
	
	        addressDiv = _react2.default.createElement(
	            'div',
	            { className: 'address-text' },
	            device.address
	        );
	
	        const dirIcon = device.isExpanded ? 'icon-down-dir' : 'icon-right-dir';
	
	        if (!device) {
	            return _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'h3',
	                    { style: { textAlign: 'center' } },
	                    'Local dongle'
	                )
	            );
	        }
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'device', onClick: e => onToggleExpanded(device.address) },
	            _react2.default.createElement(
	                'div',
	                { className: 'top-bar' },
	                _react2.default.createElement(
	                    'div',
	                    { style: { float: 'right' } },
	                    _react2.default.createElement('span', { style: { width: this.getRssiWidth(device.rssi) + 'px' }, className: 'icon-signal icon-foreground' }),
	                    _react2.default.createElement('span', { className: 'icon-signal icon-background', title: device.rssi + ' dBm' })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'device-name' },
	                    device.name || '<Unknown name>'
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'discovered-device-body text-small' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'discovered-device-address-line' },
	                    _react2.default.createElement(
	                        'button',
	                        { onClick: e => this.onButtonClick(e, device), className: 'btn btn-primary btn-xs btn-nordic', disabled: !isConnecting && adapterIsConnecting || device.connected },
	                        isConnecting ? 'Cancel' : 'Connect',
	                        ' ',
	                        _react2.default.createElement('i', { className: 'icon-link' })
	                    ),
	                    addressDiv
	                ),
	                _react2.default.createElement(
	                    'div',
	                    null,
	                    _react2.default.createElement(
	                        'span',
	                        { className: 'adv-details' },
	                        _react2.default.createElement('i', { className: dirIcon }),
	                        'Details'
	                    ),
	                    addressTypeDiv,
	                    advTypeDiv,
	                    servicesDiv,
	                    flagsDiv,
	                    adDataDiv
	                )
	            )
	        );
	    }
	}
	
	exports.default = DiscoveredDevice;
	DiscoveredDevice.propTypes = {
	    device: _react.PropTypes.object.isRequired,
	    adapterIsConnecting: _react.PropTypes.bool.isRequired, // If adapter is currently connecting to a device
	    isConnecting: _react.PropTypes.bool.isRequired, // If adapter is currently connecting to this device
	    onConnect: _react.PropTypes.func.isRequired,
	    onCancelConnect: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(24);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _reactOnclickoutside = __webpack_require__(152);
	
	var _reactOnclickoutside2 = _interopRequireDefault(_reactOnclickoutside);
	
	var _reactTextareaAutosize = __webpack_require__(154);
	
	var _reactTextareaAutosize2 = _interopRequireDefault(_reactTextareaAutosize);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _jquery = __webpack_require__(148);
	
	var _jquery2 = _interopRequireDefault(_jquery);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _reactOnclickoutside2.default)(_react2.default.createClass({
	
	    /*
	    Produces some text that changes into a textarea when clicked, OR if plain={true}, it simply produces a textarea.
	    Exposes various events for validation and formatting.
	     Usage:
	    <EditableField value={value}
	        keyPressValidation={keyPressValidation} completeValidation={completeValidation}
	                    onBeforeBackspace={onBeforeBackspace} formatInput={formatInput} insideSelector='.some-selector' />
	     />
	     If props
	     Props:
	    value (required): The value to make editable.
	    keyPressValidation (optional):
	        a function called for every keypress. If it return false, the keypress is rejected.
	    completeValidation (optional):
	        a function called when the user presses the ok button. If it returns false the component will stay in edit mode.
	    onBeforeBackspace (optional):
	        function called when backspace is detected _onKeyDown. It is passed the event object.
	    formatInput (optional):
	        function to format the textarea content, called onChange, after keyPressValidation.
	        It must return an object with properties value and caretPosition.
	    insideSelector (optional):
	        string with a css selector. The selector must match a parent of the textarea.
	        Clicks on the document that do not hit this parent will close the editor.
	        If no selector is given, the textarea itself will be used for the same purpose.
	    plain (optional):
	        If true, the component simply shows a textarea at all times.
	        It does not change between edit and non-edit modes
	    onChange (optional):
	        function, fires if the value changed due to user input. First argument is the new value.
	     */
	    handleClickOutside(e) {
	        if (this.editing) {
	            if (this.props.insideSelector) {
	                //dont close if click was within a parent element that matches insideSelector
	                const textarea = _reactDom2.default.findDOMNode(this.refs.editableTextarea);
	                if (textarea) {
	                    const insideParent = (0, _jquery2.default)(textarea).parents(this.props.insideSelector)[0];
	                    if (e.path.includes(insideParent)) {
	                        return;
	                    }
	                }
	            }
	
	            this.editing = false;
	            this.value = this.props.value; //reset textarea value
	            this.validationMessage = '';
	            this.forceUpdate();
	        }
	    },
	
	    _selectParentAndToggleEditing(e) {
	        e.stopPropagation();
	        this._toggleEditing(e);
	        this.props.selectParent(e);
	    },
	
	    _selectParent(e) {
	        e.stopPropagation();
	        this.props.selectParent(e);
	    },
	
	    _toggleEditing(e) {
	        e.stopPropagation();
	
	        if (this.props.onWrite) {
	            this.editing = !this.editing;
	            this.forceUpdate();
	        }
	    },
	
	    _onChange(e) {
	        const textarea = e.target;
	        let value = textarea.value;
	        let caretPosition = textarea.selectionStart;
	        const valid = this.props.keyPressValidation ? this.props.keyPressValidation(value) : true;
	
	        if (valid) {
	            if (this.props.formatInput) {
	                const formatInputResult = this.props.formatInput(value, caretPosition);
	                value = formatInputResult.value;
	                caretPosition = formatInputResult.caretPosition;
	            }
	
	            this.value = value;
	            this.validationMessage = '';
	        } else {
	            caretPosition--;
	        }
	
	        this.forceUpdate(() => textarea.setSelectionRange(caretPosition, caretPosition));
	
	        if (this.props.onChange) {
	            this.props.onChange(this.value);
	        }
	    },
	
	    _onKeyDown(e) {
	        if (e.key === 'Backspace' && this.props.onBeforeBackspace) {
	            this.props.onBeforeBackspace(e);
	        }
	
	        if (e.key === 'Delete' && this.props.onBeforeDelete) {
	            this.props.onBeforeDelete(e);
	        }
	
	        if (e.key === 'Enter') {
	            this._write();
	            e.preventDefault();
	        }
	    },
	
	    _onWriteButtonClick(e) {
	        e.stopPropagation();
	        this._write();
	    },
	
	    _onReadButtonClick(e) {
	        const onRead = this.props.onRead;
	
	
	        e.stopPropagation();
	        this._read();
	    },
	
	    _write() {
	        var _ref = this.props.completeValidation ? this.props.completeValidation(this.value) : { valid: true };
	
	        const valid = _ref.valid,
	              validationMessage = _ref.validationMessage;
	
	        if (valid) {
	            this.editing = false;
	            if (this.props.onWrite) {
	                this.props.onWrite(this.props.getValueArray(this.value));
	            }
	        } else {
	            this.validationMessage = validationMessage;
	        }
	    },
	
	    _read() {
	        this.props.onRead();
	    },
	
	    _stopPropagation(e) {
	        e.stopPropagation();
	    },
	
	    componentDidMount() {
	        this.editing = false;
	        this.value = this.props.value;
	        this.validationMessage = '';
	    },
	
	    componentDidUpdate(prevProps, prevState) {
	        if (this.editing) {
	            const textarea = _reactDom2.default.findDOMNode(this.refs.editableTextarea);
	            const caretPosition = textarea.value.length;
	            textarea.focus();
	            textarea.setSelectionRange(caretPosition, caretPosition);
	        }
	    },
	
	    render() {
	        const nonBreakingSpace = '\u00A0';
	        //Delaying the creation of TextareaAutosize etc until they're needed gives a performance win.
	        //This matters when we get rapidly rerendered, e.g. during an animation.
	        let child;
	
	        if (!this.editing) {
	            this.value = this.props.value;
	        }
	
	        const readButton = this.props.showReadButton ? _react2.default.createElement(
	            'div',
	            { className: 'btn btn-primary btn-xs btn-nordic', title: 'Read', onClick: e => this._onReadButtonClick(e) },
	            _react2.default.createElement('i', { className: 'icon-ccw' })
	        ) : null;
	
	        if (this.props.plain) {
	            child = _react2.default.createElement(_nrfconnectCore.TextArea, { ref: 'editableTextarea',
	                label: this.props.label,
	                title: this.props.title,
	                onKeyDown: e => this._onKeyDown(e),
	                value: this.props.value,
	                onChange: e => this._onChange(e),
	                onClick: this._stopPropagation });
	        } else if (this.editing && this.props.onWrite) {
	            child = _react2.default.createElement(
	                'div',
	                { className: 'editable-field-editor-wrap native-key-bindings' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'alert-wrap' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'alert alert-danger tooltip top', style: { display: this.validationMessage === '' ? 'none' : 'block' } },
	                        _react2.default.createElement('div', { className: 'tooltip-arrow' }),
	                        this.validationMessage
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'btn btn-primary btn-xs btn-nordic', title: 'Write', onClick: e => this._onWriteButtonClick(e) },
	                    _react2.default.createElement('i', { className: 'icon-ok' })
	                ),
	                _react2.default.createElement(_reactTextareaAutosize2.default, { ref: 'editableTextarea',
	                    minRows: 1,
	                    onKeyDown: e => this._onKeyDown(e),
	                    title: this.props.title,
	                    value: this.value,
	                    onChange: e => this._onChange(e),
	                    onClick: this._stopPropagation })
	            );
	        } else if (this.props.showReadButton && this.props.onRead && this.props.onWrite) {
	            child = _react2.default.createElement(
	                'div',
	                { className: 'editable-field-editor-wrap' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'btn btn-primary btn-xs btn-nordic', title: 'Read', onClick: e => this._onReadButtonClick(e) },
	                    _react2.default.createElement('i', { className: 'icon-ccw' })
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'subtle-text editable', onClick: e => this._toggleEditing(e) },
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        this.value || nonBreakingSpace
	                    )
	                )
	            );
	        } else if (this.props.onRead && !this.props.onWrite) {
	            child = _react2.default.createElement(
	                'div',
	                null,
	                readButton,
	                _react2.default.createElement(
	                    'div',
	                    { className: 'subtle-text' },
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        this.value || nonBreakingSpace
	                    )
	                )
	            );
	        } else if (!this.props.onRead && !this.props.onWrite) {
	            child = _react2.default.createElement(
	                'div',
	                { className: 'subtle-text', title: this.props.title, onClick: e => this._selectParent(e) },
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    this.value || nonBreakingSpace
	                )
	            );
	        } else {
	            child = _react2.default.createElement(
	                'div',
	                { className: 'subtle-text editable', title: this.props.title, onClick: e => this._selectParentAndToggleEditing(e) },
	                _react2.default.createElement(
	                    'span',
	                    null,
	                    this.value || nonBreakingSpace
	                )
	            );
	        }
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'editable-field' },
	            child
	        );
	    },
	
	    propTypes: {
	        value: _react.PropTypes.string.isRequired,
	        onWrite: _react.PropTypes.func,
	        onRead: _react.PropTypes.func,
	        showReadButton: _react.PropTypes.bool,
	        insideSelector: _react.PropTypes.string
	    }
	}));
	module.exports = exports['default'];

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _moment = __webpack_require__(149);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function entryClassName(entry) {
	    switch (entry.level) {
	        case 0:
	            return 'log-trace';
	        case 1:
	            return 'log-debug';
	        case 2:
	            return 'log-info';
	        case 3:
	            return 'log-warning';
	        case 4:
	            return 'log-error';
	        case 5:
	            return 'log-fatal';
	        default:
	            return 'log-unknown';
	    }
	}
	
	class LogEntry extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    render() {
	        const entry = this.props.entry;
	
	
	        var className = 'log-entry ' + entryClassName(entry);
	        var time = (0, _moment2.default)(new Date(entry.time)).format('HH:mm:ss.SSSS');
	
	        return _react2.default.createElement(
	            'div',
	            { className: className },
	            _react2.default.createElement(
	                'div',
	                { className: 'time' },
	                time
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'message' },
	                entry.message
	            )
	        );
	    }
	}
	
	exports.default = LogEntry;
	LogEntry.propTypes = {
	    entry: _react.PropTypes.object.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.PairingEditor = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _SecurityParamsControls = __webpack_require__(44);
	
	var _common = __webpack_require__(11);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class PairingEditor extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        const event = props.event;
	
	
	        this.secParams = event && event.pairingParameters ? event.pairingParameters : null;
	    }
	
	    handleSecParamsChange(params) {
	        this.secParams = this.secParams.merge(params);
	    }
	
	    handlePair() {
	        var _props = this.props;
	        const event = _props.event,
	              onPair = _props.onPair;
	
	
	        onPair(this.secParams);
	    }
	
	    handleAccept() {
	        var _props2 = this.props;
	        const event = _props2.event,
	              onAccept = _props2.onAccept;
	
	
	        onAccept(this.secParams);
	    }
	
	    handleReject() {
	        var _props3 = this.props;
	        const event = _props3.event,
	              onReject = _props3.onReject;
	
	
	        onReject();
	    }
	
	    handleCancel() {
	        const onCancel = this.props.onCancel;
	
	
	        onCancel();
	    }
	
	    render() {
	        var _props4 = this.props;
	        const event = _props4.event,
	              onCancel = _props4.onCancel,
	              security = _props4.security;
	
	
	        const title = event.type === _common.BLEEventType.PEER_INITIATED_PAIRING ? 'Pairing requested' : 'User initiated pairing';
	
	        const cancelButton = event.type === _common.BLEEventType.USER_INITIATED_PAIRING ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button', onClick: () => this.handleCancel(),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Cancel'
	        ) : '';
	
	        const pairButton = event.type === _common.BLEEventType.USER_INITIATED_PAIRING ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button', onClick: () => this.handlePair(),
	                className: 'btn btn-primary btn-sm btn-nordic' },
	            'Pair'
	        ) : '';
	
	        const acceptButton = event.type === _common.BLEEventType.PEER_INITIATED_PAIRING ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button', onClick: () => this.handleAccept(),
	                className: 'btn btn-primary btn-sm btn-nordic' },
	            'Accept'
	        ) : '';
	
	        const rejectButton = event.type === _common.BLEEventType.PEER_INITIATED_PAIRING ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button', onClick: () => this.handleReject(),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Reject'
	        ) : '';
	
	        const ignoreButton = event.type === _common.BLEEventType.PEER_INITIATED_PAIRING ? _react2.default.createElement(
	            _reactBootstrap.Button,
	            { type: 'button', onClick: () => this.handleCancel(),
	                className: 'btn btn-default btn-sm btn-nordic' },
	            'Ignore'
	        ) : '';
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: 'event-header' },
	                _react2.default.createElement(
	                    'h4',
	                    null,
	                    title
	                )
	            ),
	            _react2.default.createElement(
	                'form',
	                { className: 'form-horizontal' },
	                _react2.default.createElement(_SecurityParamsControls.SecurityParamsControls, { onChange: secParams => this.handleSecParamsChange(secParams), securityParams: event.pairingParameters }),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'form-group' },
	                    cancelButton,
	                    ignoreButton,
	                    pairButton,
	                    rejectButton,
	                    acceptButton
	                )
	            )
	        );
	    }
	}
	
	exports.PairingEditor = PairingEditor;
	PairingEditor.propTypes = {
	    event: _react.PropTypes.object.isRequired
	};

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _UuidInput = __webpack_require__(30);
	
	var _UuidInput2 = _interopRequireDefault(_UuidInput);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _Errors = __webpack_require__(19);
	
	var _validateUuid = __webpack_require__(21);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class ServiceEditor extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    _handleUuidSelect(uuid) {
	        this._onUuidChange(uuid);
	    }
	
	    validateUuidInput() {
	        return (0, _validateUuid.validateUuid)(this.uuid);
	    }
	
	    _onUuidChange(uuid) {
	        const _hexRegEx = /^[0-9A-F]*$/i;
	        const valid = _hexRegEx.test(uuid);
	
	        if (!valid) {
	            return;
	        }
	
	        this.uuid = uuid;
	        let uuidName = (0, _uuid_definitions.getUuidName)(this.uuid);
	
	        if (this.uuid !== uuidName) {
	            this.name = uuidName;
	        }
	
	        this.props.onModified(true);
	
	        this.forceUpdate();
	    }
	
	    _onNameChange(e) {
	        this.name = e.target.value;
	        this.props.onModified(true);
	        this.forceUpdate();
	    }
	
	    _saveAttribute() {
	        if (this.validateUuidInput() === _validateUuid.ERROR) {
	            this.props.onValidationError(new _Errors.ValidationError('You have to provide a valid UUID.'));
	            return;
	        }
	
	        const changedService = {
	            instanceId: this.props.service.instanceId,
	            uuid: this.uuid.toUpperCase().trim(),
	            name: this.name
	        };
	
	        this.props.onSaveChangedAttribute(changedService);
	        this.saved = true;
	        this.props.onModified(false);
	    }
	
	    render() {
	        var _props = this.props;
	        const service = _props.service,
	              onRemoveAttribute = _props.onRemoveAttribute;
	        const instanceId = service.instanceId,
	              uuid = service.uuid,
	              name = service.name;
	
	
	        if (this.saved || this.instanceId !== instanceId) {
	            this.saved = false;
	            this.instanceId = instanceId;
	            this.uuid = uuid || '';
	            this.name = name;
	        }
	
	        return _react2.default.createElement(
	            'form',
	            { className: 'form-horizontal native-key-bindings' },
	            _react2.default.createElement(_UuidInput2.default, { label: 'Service UUID', name: 'uuid', value: this.uuid,
	                onChange: e => this._onUuidChange(e), uuidDefinitions: _uuid_definitions.uuidServiceDefinitions,
	                handleSelection: uuid => this._handleUuidSelect(uuid) }),
	            _react2.default.createElement(_nrfconnectCore.TextInput, { label: 'Service name', name: 'service-name', value: this.name, onChange: e => this._onNameChange(e) }),
	            _react2.default.createElement(
	                _reactBootstrap.ButtonToolbar,
	                null,
	                _react2.default.createElement('div', { className: 'col-md-4' }),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { bsStyle: 'primary', className: 'btn-nordic', onClick: onRemoveAttribute },
	                    _react2.default.createElement('i', { className: 'icon-cancel' }),
	                    'Delete'
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { bsStyle: 'primary', className: 'btn-nordic', onClick: () => this._saveAttribute() },
	                    'Save'
	                )
	            )
	        );
	    }
	}
	
	exports.default = ServiceEditor;
	ServiceEditor.propTypes = {
	    service: _react.PropTypes.object.isRequired,
	    onRemoveAttribute: _react.PropTypes.func.isRequired,
	    onSaveChangedAttribute: _react.PropTypes.func.isRequired,
	    onValidationError: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ConnectedDevice = __webpack_require__(68);
	
	var _ConnectedDevice2 = _interopRequireDefault(_ConnectedDevice);
	
	var _CentralDevice = __webpack_require__(42);
	
	var _CentralDevice2 = _interopRequireDefault(_CentralDevice);
	
	var _EnumeratingAttributes = __webpack_require__(43);
	
	var _EnumeratingAttributes2 = _interopRequireDefault(_EnumeratingAttributes);
	
	var _ServiceItem = __webpack_require__(45);
	
	var _ServiceItem2 = _interopRequireDefault(_ServiceItem);
	
	var _uuid_definitions = __webpack_require__(10);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DeviceDetailsView extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.dfuUuid = (0, _uuid_definitions.getUuidByName)('Secure DFU');
	    }
	
	    renderChildren(instanceId) {
	        const deviceDetail = this.props.deviceDetails.devices.get(instanceId);
	
	        if (deviceDetail.discoveringChildren) {
	            return _react2.default.createElement(_EnumeratingAttributes2.default, { bars: 1 });
	        }
	
	        const children = deviceDetail.get('children');
	        if (children) {
	            return _react2.default.createElement(
	                'div',
	                { className: 'service-items-wrap' },
	                children.map(service => this.createServiceItem(service))
	            );
	        }
	
	        return undefined;
	    }
	
	    createServiceItem(service) {
	        var _props = this.props;
	        const selected = _props.selected,
	              onSelectComponent = _props.onSelectComponent,
	              onSetAttributeExpanded = _props.onSetAttributeExpanded,
	              onReadCharacteristic = _props.onReadCharacteristic,
	              onWriteCharacteristic = _props.onWriteCharacteristic,
	              onReadDescriptor = _props.onReadDescriptor,
	              onWriteDescriptor = _props.onWriteDescriptor;
	
	
	        return _react2.default.createElement(_ServiceItem2.default, { key: service.instanceId,
	            item: service,
	            selectOnClick: true,
	            selected: selected,
	            onSelectAttribute: onSelectComponent,
	            onSetAttributeExpanded: onSetAttributeExpanded,
	            onReadCharacteristic: onReadCharacteristic,
	            onWriteCharacteristic: onWriteCharacteristic,
	            onReadDescriptor: onReadDescriptor,
	            onWriteDescriptor: onWriteDescriptor });
	    }
	
	    _hasDfuService(instanceId) {
	        const deviceDetail = this.props.deviceDetails.devices.get(instanceId);
	        if (!deviceDetail.discoveringChildren) {
	            const services = deviceDetail.get('children');
	            if (services) {
	                return services.some(service => service.uuid === this.dfuUuid);
	            }
	        }
	        return false;
	    }
	
	    render() {
	        var _props2 = this.props;
	        const adapter = _props2.adapter,
	              device = _props2.device,
	              selected = _props2.selected,
	              onSelectComponent = _props2.onSelectComponent;
	        const instanceId = device.instanceId,
	              name = device.name,
	              address = device.address,
	              role = device.role;
	
	
	        const centralPosition = {
	            x: 0,
	            y: 0
	        };
	
	        if (device && role === undefined) {
	            var _props3 = this.props;
	            const advertising = _props3.device.advertising,
	                  deviceDetails = _props3.deviceDetails,
	                  onShowAdvertisingSetupDialog = _props3.onShowAdvertisingSetupDialog,
	                  onToggleAdvertising = _props3.onToggleAdvertising,
	                  autoConnUpdate = _props3.autoConnUpdate,
	                  onToggleAutoConnUpdate = _props3.onToggleAutoConnUpdate,
	                  onShowSecurityParamsDialog = _props3.onShowSecurityParamsDialog,
	                  onToggleAutoAcceptPairing = _props3.onToggleAutoAcceptPairing,
	                  onDeleteBondInfo = _props3.onDeleteBondInfo,
	                  onSetSecurityParams = _props3.onSetSecurityParams,
	                  onOpenCustomUuidFile = _props3.onOpenCustomUuidFile,
	                  security = _props3.security;
	
	
	            const localDevice = _react2.default.createElement(_CentralDevice2.default, { id: instanceId + '_details',
	                position: centralPosition,
	                name: name,
	                address: address,
	                advertising: advertising,
	                selected: selected,
	                onShowSetupDialog: onShowAdvertisingSetupDialog,
	                onToggleAdvertising: onToggleAdvertising,
	                autoConnUpdate: autoConnUpdate,
	                onToggleAutoConnUpdate: onToggleAutoConnUpdate,
	                onShowSecurityParamsDialog: onShowSecurityParamsDialog,
	                onToggleAutoAcceptPairing: onToggleAutoAcceptPairing,
	                onDeleteBondInfo: onDeleteBondInfo,
	                onSetSecurityParams: onSetSecurityParams,
	                onOpenCustomUuidFile: onOpenCustomUuidFile,
	                security: security });
	
	            if (!deviceDetails) {
	                return _react2.default.createElement(
	                    'div',
	                    { className: 'local-server device-details-view', id: instanceId + '_details', style: this.props.style },
	                    localDevice
	                );
	            }
	
	            const services = this.renderChildren('local.server');
	
	            return _react2.default.createElement(
	                'div',
	                { className: 'local-server device-details-view', id: instanceId + '_details', style: this.props.style },
	                localDevice,
	                services
	            );
	        }
	
	        var _props4 = this.props;
	        const onDisconnectFromDevice = _props4.onDisconnectFromDevice,
	              onPairWithDevice = _props4.onPairWithDevice,
	              onUpdateDeviceConnectionParams = _props4.onUpdateDeviceConnectionParams,
	              onShowDfuDialog = _props4.onShowDfuDialog;
	
	
	        const deviceDetail = this.props.deviceDetails.devices.get(instanceId);
	        const isDfuSupported = this._hasDfuService(instanceId);
	        const onClickDfu = () => {
	            onShowDfuDialog(device);
	        };
	
	        if (!deviceDetail) {
	            return _react2.default.createElement('div', null);
	        }
	
	        const connectedDevice = _react2.default.createElement(_ConnectedDevice2.default, { id: instanceId + '_details',
	            sourceId: adapter.instanceId + '_details',
	            key: instanceId,
	            device: device,
	            selected: selected,
	            layout: 'vertical',
	            isDfuSupported: isDfuSupported,
	            onClickDfu: onClickDfu,
	            onSelectComponent: onSelectComponent,
	            onDisconnect: () => onDisconnectFromDevice(device),
	            onPair: () => onPairWithDevice(device),
	            onConnectionParamsUpdate: () => onUpdateDeviceConnectionParams(device) });
	
	        const services = this.renderChildren(instanceId);
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'remote-server device-details-view', id: instanceId + '_details', style: this.props.style },
	            connectedDevice,
	            services
	        );
	    }
	}
	
	exports.default = DeviceDetailsView;
	DeviceDetailsView.propTypes = {
	    device: _react.PropTypes.object.isRequired,
	    selected: _react.PropTypes.string,
	    onSelectComponent: _react.PropTypes.func.isRequired,
	    onSetAttributeExpanded: _react.PropTypes.func.isRequired,
	    onUpdateDeviceConnectionParams: _react.PropTypes.func,
	    deviceDetails: _react.PropTypes.object,
	    adapter: _react.PropTypes.object,
	    onReadCharacteristic: _react.PropTypes.func,
	    onWriteCharacteristic: _react.PropTypes.func,
	    onReadDescriptor: _react.PropTypes.func,
	    onWriteDescriptor: _react.PropTypes.func,
	    onDisconnectFromDevice: _react.PropTypes.func,
	    onPairWithDevice: _react.PropTypes.func,
	    onShowAdvertisingSetupDialog: _react.PropTypes.func,
	    onToggleAdvertising: _react.PropTypes.func,
	    onToggleAutoConnUpdate: _react.PropTypes.func,
	    autoConnUpdate: _react.PropTypes.bool,
	    security: _react.PropTypes.object,
	    onToggleAutoAcceptPairing: _react.PropTypes.func,
	    onDeleteBondInfo: _react.PropTypes.func,
	    onShowSecurityParamsDialog: _react.PropTypes.func,
	    onOpenCustomUuidFile: _react.PropTypes.func
	};
	module.exports = exports['default'];

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DiscoveryButton extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    render() {
	        var _props = this.props;
	        const isAdapterAvailable = _props.isAdapterAvailable,
	              adapterIsConnecting = _props.adapterIsConnecting,
	              scanInProgress = _props.scanInProgress,
	              onScanClicked = _props.onScanClicked;
	
	
	        let labelString;
	        let iconName;
	        let hoverText;
	
	        if (scanInProgress) {
	            labelString = 'Stop scan';
	            iconName = 'icon-stop';
	            hoverText = 'Stop scan (Alt+S)';
	        } else {
	            labelString = 'Start scan';
	            iconName = 'icon-play';
	            hoverText = 'Start scan (Alt+S)';
	        }
	
	        return _react2.default.createElement(
	            'button',
	            { title: hoverText, className: 'btn btn-primary btn-sm btn-nordic padded-row', disabled: !isAdapterAvailable || adapterIsConnecting, onClick: () => onScanClicked() },
	            _react2.default.createElement('span', { className: iconName }),
	            labelString
	        );
	    }
	}
	
	exports.default = DiscoveryButton;
	DiscoveryButton.propTypes = {
	    isAdapterAvailable: _react.PropTypes.bool.isRequired,
	    adapterIsConnecting: _react.PropTypes.bool.isRequired,
	    scanInProgress: _react.PropTypes.bool.isRequired,
	    onScanClicked: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                                              * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                                              *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                                              *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                                              *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                                              *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                                              *   materials provided with the distribution.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                                              *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                                              *   software without specific prior written permission.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                                              *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                                              *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                                              * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                                              * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                                              * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                                              * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                                              * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                                              * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                                              * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                                              * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                                              * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                                              */
	
	class FileInput extends _react2.default.PureComponent {
	
	    constructor(props) {
	        super(props);
	
	        this.onChange = this.onChange.bind(this);
	    }
	
	    onChange(event) {
	        this.props.onChange(this.props.name, event.target.value);
	    }
	
	    render() {
	        var _props = this.props;
	
	        const label = _props.label,
	              value = _props.value,
	              onChooseClicked = _props.onChooseClicked,
	              buttonDisabled = _props.buttonDisabled,
	              props = _objectWithoutProperties(_props, ['label', 'value', 'onChooseClicked', 'buttonDisabled']);
	
	        const fileBrowseButton = _react2.default.createElement(
	            _reactBootstrap.Button,
	            { disabled: buttonDisabled, onClick: onChooseClicked },
	            'Choose'
	        );
	        return _react2.default.createElement(_nrfconnectCore.TextInput, _extends({ label: label, value: value, onChange: this.onChange, buttonAfter: fileBrowseButton }, props));
	    }
	}
	exports.default = FileInput;
	FileInput.propTypes = {
	    label: _react.PropTypes.string,
	    name: _react.PropTypes.string,
	    onChooseClicked: _react.PropTypes.func,
	    buttonDisabled: _react.PropTypes.bool,
	    value: _react.PropTypes.string
	};
	module.exports = exports['default'];

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                                              * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                                              *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                                              *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                                              *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                                              *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                                              *   materials provided with the distribution.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                                              *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                                              *   software without specific prior written permission.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                                              *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                                              *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                                              * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                                              * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                                              * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                                              * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                                              * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                                              * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                                              * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                                              * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                                              * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                                              */
	
	class ProgressBarInput extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	
	        const id = _props.id,
	              label = _props.label,
	              progressLabel = _props.progressLabel,
	              labelClassName = _props.labelClassName,
	              wrapperClassName = _props.wrapperClassName,
	              status = _props.status,
	              props = _objectWithoutProperties(_props, ['id', 'label', 'progressLabel', 'labelClassName', 'wrapperClassName', 'status']);
	
	        return _react2.default.createElement(
	            _reactBootstrap.FormGroup,
	            { controlId: id },
	            label && _react2.default.createElement(
	                _reactBootstrap.ControlLabel,
	                { className: labelClassName },
	                label
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.InputGroup,
	                { className: wrapperClassName },
	                status && _react2.default.createElement(
	                    'p',
	                    null,
	                    status
	                ),
	                _react2.default.createElement(_reactBootstrap.ProgressBar, _extends({ label: progressLabel }, props))
	            )
	        );
	    }
	}
	exports.default = ProgressBarInput;
	ProgressBarInput.propTypes = {
	    id: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    status: _react.PropTypes.string,
	    progressLabel: _react.PropTypes.string,
	    labelClassName: _react.PropTypes.string,
	    wrapperClassName: _react.PropTypes.string
	};
	ProgressBarInput.defaultProps = {
	    labelClassName: 'col-md-3 text-right',
	    wrapperClassName: 'col-md-9'
	};
	module.exports = exports['default'];

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	class ReadOnlyField extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	        const id = _props.id,
	              label = _props.label,
	              labelClassName = _props.labelClassName,
	              wrapperClassName = _props.wrapperClassName,
	              value = _props.value;
	
	
	        return _react2.default.createElement(
	            _reactBootstrap.FormGroup,
	            { controlId: id },
	            label && _react2.default.createElement(
	                _reactBootstrap.ControlLabel,
	                { className: labelClassName },
	                label
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.InputGroup,
	                { className: wrapperClassName },
	                _react2.default.createElement(
	                    'pre',
	                    null,
	                    value
	                )
	            )
	        );
	    }
	}
	exports.default = ReadOnlyField;
	ReadOnlyField.propTypes = {
	    id: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    value: _react.PropTypes.string.isRequired,
	    labelClassName: _react.PropTypes.string,
	    wrapperClassName: _react.PropTypes.string
	};
	ReadOnlyField.defaultProps = {
	    labelClassName: 'col-md-3 text-right',
	    wrapperClassName: 'col-md-9'
	};
	module.exports = exports['default'];

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _nordiclogo_neg = __webpack_require__(133);
	
	var _nordiclogo_neg2 = _interopRequireDefault(_nordiclogo_neg);
	
	var _AdapterSelector = __webpack_require__(60);
	
	var _AdapterSelector2 = _interopRequireDefault(_AdapterSelector);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class NavBar extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.state = {
	            activeStyle: { boxShadow: 'inset 0 5px 10px #133e40' },
	            passiveStyle: {},
	            adapterState: { connected: false }
	        };
	    }
	
	    _onViewChange(newView) {
	        this.props.onChangeMainView(newView);
	    }
	
	    _getClassForTabButton(itemName) {
	        return 'btn btn-primary btn-nordic padded-row' + (this.props.view === itemName ? ' active' : '');
	    }
	
	    componentDidMount() {
	        const onChangeMainView = this.props.onChangeMainView;
	
	
	        window.addEventListener('core:connection-map', () => {
	            onChangeMainView('ConnectionMap');
	        });
	        window.addEventListener('core:server-setup', () => {
	            onChangeMainView('ServerSetup');
	        });
	    }
	
	    render() {
	        return _react2.default.createElement(
	            'div',
	            { className: 'nav-bar' },
	            _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'a',
	                    { href: 'http://www.nordicsemi.com/nRFConnect', target: '_blank' },
	                    _react2.default.createElement('img', { className: 'nrfconnect-logo', src: _nordiclogo_neg2.default })
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'nav-section' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'padded-row' },
	                    _react2.default.createElement(_AdapterSelector2.default, null)
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'nav-section bl padded-row' },
	                _react2.default.createElement(
	                    'button',
	                    { title: 'Connection map (Alt+1)', onClick: this._onViewChange.bind(this, 'ConnectionMap'), className: this._getClassForTabButton('ConnectionMap') },
	                    _react2.default.createElement('span', { className: 'icon-columns' }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        'Connection map'
	                    )
	                ),
	                _react2.default.createElement(
	                    'button',
	                    { title: 'Server setup (Alt+2)', onClick: this._onViewChange.bind(this, 'ServerSetup'), className: this._getClassForTabButton('ServerSetup') },
	                    _react2.default.createElement('span', { className: 'icon-indent-right' }),
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        'Server setup'
	                    )
	                )
	            )
	        );
	    }
	}
	exports.default = NavBar;
	module.exports = exports['default'];

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _AdvertisingList = __webpack_require__(62);
	
	var _AdvertisingList2 = _interopRequireDefault(_AdvertisingList);
	
	var _AdvertisingData = __webpack_require__(61);
	
	var _AdvertisingData2 = _interopRequireDefault(_AdvertisingData);
	
	var _advertisingActions = __webpack_require__(15);
	
	var AdvertisingActions = _interopRequireWildcard(_advertisingActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class AdvertisingSetup extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.id = 0;
	    }
	
	    _prepareValue() {
	        if (!this.typeValue) return;
	
	        this.id++;
	        this.typeValue.id = this.id;
	        return Object.assign({}, this.typeValue);
	    }
	
	    addToAdvData() {
	        const newValue = this._prepareValue();
	
	        if (!newValue || newValue.value === '') {
	            return;
	        }
	
	        this.props.addAdvEntry(newValue);
	    }
	
	    addToScanResponse() {
	        const newValue = this._prepareValue();
	
	        if (!newValue || newValue.value === '') {
	            return;
	        }
	
	        this.props.addScanRsp(newValue);
	    }
	
	    handleValueChange(typeValue) {
	        this.typeValue = typeValue;
	    }
	
	    handleApply() {
	        var _props = this.props;
	        const applyChanges = _props.applyChanges,
	              setAdvertisingData = _props.setAdvertisingData;
	
	
	        applyChanges();
	        setAdvertisingData();
	    }
	
	    render() {
	        var _props2 = this.props;
	        const tempAdvDataEntries = _props2.tempAdvDataEntries,
	              tempScanRespEntries = _props2.tempScanRespEntries,
	              show = _props2.show,
	              addAdvEntry = _props2.addAdvEntry,
	              deleteAdvData = _props2.deleteAdvData,
	              addScanRsp = _props2.addScanRsp,
	              setAdvdataStatus = _props2.setAdvdataStatus,
	              deleteScanRsp = _props2.deleteScanRsp,
	              showSetupDialog = _props2.showSetupDialog,
	              hideSetupDialog = _props2.hideSetupDialog;
	
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                _reactBootstrap.Modal,
	                { className: 'adv-setup', show: show, onHide: () => {}, bsSize: 'large' },
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Header,
	                    null,
	                    _react2.default.createElement(
	                        _reactBootstrap.Modal.Title,
	                        null,
	                        'Advertising setup'
	                    )
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Body,
	                    null,
	                    _react2.default.createElement(_AdvertisingData2.default, { onValueChange: value => this.handleValueChange(value) }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'adv-row' },
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'adv-col adv-pkt' },
	                            _react2.default.createElement(
	                                _reactBootstrap.Button,
	                                {
	                                    className: 'btn-add btn-primary btn-nordic icon-plus',
	                                    onClick: () => this.addToAdvData() },
	                                ' Add to advertising data'
	                            ),
	                            _react2.default.createElement(_AdvertisingList2.default, {
	                                title: 'Advertising data',
	                                onDelete: deleteAdvData,
	                                advEntries: tempAdvDataEntries })
	                        ),
	                        _react2.default.createElement(
	                            'div',
	                            { className: 'adv-col scan-rsp-pkt' },
	                            _react2.default.createElement(
	                                _reactBootstrap.Button,
	                                {
	                                    className: 'btn-add btn-primary btn-nordic icon-plus',
	                                    onClick: () => this.addToScanResponse() },
	                                ' Add to scan response'
	                            ),
	                            _react2.default.createElement(_AdvertisingList2.default, {
	                                title: 'Scan response data',
	                                onDelete: deleteScanRsp,
	                                advEntries: tempScanRespEntries })
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Footer,
	                    null,
	                    _react2.default.createElement(
	                        _reactBootstrap.Label,
	                        { className: 'error-label', bsStyle: 'danger' },
	                        setAdvdataStatus
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { className: 'btn-primary btn-nordic', onClick: () => this.handleApply() },
	                        'Apply'
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { className: 'btn-primary btn-nordic', onClick: hideSetupDialog },
	                        'Close'
	                    )
	                )
	            )
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const advertising = state.advertising;
	
	
	    return {
	        advertising: advertising,
	        tempAdvDataEntries: advertising.tempAdvDataEntries,
	        tempScanRespEntries: advertising.tempScanRespEntries,
	        show: advertising.show,
	        setAdvdataStatus: advertising.setAdvdataStatus
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    let retval = Object.assign({}, (0, _redux.bindActionCreators)(AdvertisingActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(AdvertisingSetup);
	
	
	AdvertisingSetup.propTypes = {
	    tempAdvDataEntries: _react.PropTypes.object.isRequired,
	    tempScanRespEntries: _react.PropTypes.object.isRequired,
	    show: _react.PropTypes.bool.isRequired,
	    addAdvEntry: _react.PropTypes.func.isRequired,
	    applyChanges: _react.PropTypes.func.isRequired,
	    setAdvertisingData: _react.PropTypes.func.isRequired,
	    advertising: _react.PropTypes.object.isRequired,
	    setAdvdataStatus: _react.PropTypes.string.isRequired,
	    deleteAdvData: _react.PropTypes.func.isRequired,
	    addScanRsp: _react.PropTypes.func.isRequired,
	    deleteScanRsp: _react.PropTypes.func.isRequired,
	    showSetupDialog: _react.PropTypes.func.isRequired,
	    hideSetupDialog: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.BLEEventDialog = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(8);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _common = __webpack_require__(11);
	
	var _BLEEvent = __webpack_require__(65);
	
	var _ConnectionUpdateRequestEditor = __webpack_require__(69);
	
	var _PairingEditor = __webpack_require__(80);
	
	var _AuthKeyEditor = __webpack_require__(64);
	
	var _bleEventActions = __webpack_require__(25);
	
	var BLEEventActions = _interopRequireWildcard(_bleEventActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class BLEEventDialog extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    _close() {
	        var _props = this.props;
	        const clearAllEvents = _props.clearAllEvents,
	              showDialog = _props.showDialog;
	
	
	        clearAllEvents();
	        showDialog(false);
	    }
	
	    _onSelected(selectedEventId) {
	        const selectEventId = this.props.selectEventId;
	
	        selectEventId(selectedEventId);
	    }
	
	    _areAllEventsHandled() {
	        const events = this.props.events;
	
	        let allEventsHandled = true;
	
	        events.forEach((event, id) => {
	            if (event.state === _common.BLEEventState.INDETERMINATE) {
	                allEventsHandled = false;
	                return false; // Stops the iteration
	            }
	        });
	
	        return allEventsHandled;
	    }
	
	    _getEditorComponent(event) {
	        var _props2 = this.props;
	        const rejectDeviceConnectionParams = _props2.rejectDeviceConnectionParams,
	              updateDeviceConnectionParams = _props2.updateDeviceConnectionParams,
	              disconnectFromDevice = _props2.disconnectFromDevice,
	              ignoreEvent = _props2.ignoreEvent,
	              acceptEvent = _props2.acceptEvent,
	              removeEvent = _props2.removeEvent,
	              pairWithDevice = _props2.pairWithDevice,
	              security = _props2.security,
	              rejectPairing = _props2.rejectPairing,
	              acceptPairing = _props2.acceptPairing,
	              replyNumericalComparisonMatch = _props2.replyNumericalComparisonMatch,
	              replyAuthKey = _props2.replyAuthKey,
	              replyLescOob = _props2.replyLescOob,
	              sendKeypress = _props2.sendKeypress;
	
	
	        if (event.type === _common.BLEEventType.USER_INITIATED_CONNECTION_UPDATE || event.type === _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE) {
	            return _react2.default.createElement(_ConnectionUpdateRequestEditor.ConnectionUpdateRequestEditor, {
	                event: event,
	                onUpdate: this._handleEditorUpdate,
	                onRejectConnectionParams: device => rejectDeviceConnectionParams(event.id, device),
	                onUpdateConnectionParams: (device, connectionParams) => updateDeviceConnectionParams(event.id, device, connectionParams),
	                onIgnoreEvent: eventId => acceptEvent(eventId),
	                onCancelUserInitiatedEvent: eventId => removeEvent(eventId)
	            });
	        } else if (event.type === _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE) {
	            return _react2.default.createElement(_ConnectionUpdateRequestEditor.ConnectionUpdateRequestEditor, {
	                event: event,
	                onUpdate: this._handleEditorUpdate,
	                onRejectConnectionParams: device => disconnectFromDevice(device),
	                onUpdateConnectionParams: eventId => acceptEvent(eventId),
	                onIgnoreEvent: () => {},
	                onCancelUserInitiatedEvent: eventId => removeEvent(eventId)
	            });
	        } else if (event.type === _common.BLEEventType.USER_INITIATED_PAIRING) {
	            return _react2.default.createElement(_PairingEditor.PairingEditor, {
	                event: event,
	                onPair: securityParams => pairWithDevice(event.id, event.device, securityParams),
	                onCancel: () => removeEvent(event.id),
	                security: security
	            });
	        } else if (event.type === _common.BLEEventType.PEER_INITIATED_PAIRING) {
	            return _react2.default.createElement(_PairingEditor.PairingEditor, {
	                event: event,
	                onAccept: securityParams => acceptPairing(event.id, event.device, securityParams),
	                onReject: () => rejectPairing(event.id, event.device),
	                onCancel: () => removeEvent(event.id),
	                security: security
	            });
	        } else if (event.type === _common.BLEEventType.PASSKEY_DISPLAY || event.type === _common.BLEEventType.PASSKEY_REQUEST || event.type === _common.BLEEventType.NUMERICAL_COMPARISON || event.type === _common.BLEEventType.LEGACY_OOB_REQUEST || event.type === _common.BLEEventType.LESC_OOB_REQUEST) {
	            return _react2.default.createElement(_AuthKeyEditor.AuthKeyEditor, {
	                event: event,
	                onAuthKeySubmit: (keyType, key) => replyAuthKey(event.id, event.device, keyType, key),
	                onLescOobSubmit: peerOobData => replyLescOob(event.id, event.device, peerOobData, event.ownOobData),
	                onNumericalComparisonMatch: match => replyNumericalComparisonMatch(event.id, event.device, match),
	                onKeypress: value => sendKeypress(event.id, event.device, value),
	                onCancel: () => removeEvent(event.id)
	            });
	        }
	    }
	
	    render() {
	        var _props3 = this.props;
	        const visible = _props3.visible,
	              events = _props3.events,
	              selectedEventId = _props3.selectedEventId,
	              showDialog = _props3.showDialog,
	              clearAllEvents = _props3.clearAllEvents;
	
	
	        if (events === null || events === undefined || events.size < 1) {
	            return _react2.default.createElement('div', null);
	        }
	
	        return _react2.default.createElement(
	            _reactBootstrap.Modal,
	            {
	                className: 'events-modal',
	                show: visible,
	                backdrop: true,
	                onHide: () => {
	                    clearAllEvents();
	                    showDialog(false);
	                } },
	            _react2.default.createElement(
	                _reactBootstrap.Modal.Header,
	                null,
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Title,
	                    null,
	                    'Events and actions'
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'bleevent-dialog' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'bleevent-dialog-view' },
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'service-items-wrap' },
	                        events.map(event => {
	                            return _react2.default.createElement(_BLEEvent.BLEEvent, {
	                                key: event.id,
	                                ref: 'event_' + event.id,
	                                onSelected: eventId => this._onSelected(eventId),
	                                selected: selectedEventId === event.id,
	                                event: event,
	                                onTimedOut: () => {
	                                    console.log('Guessing event timed out!');
	                                }
	                            });
	                        })
	                    ),
	                    events.map(event => {
	                        return _react2.default.createElement(
	                            'div',
	                            { key: event.id, className: 'item-editor', style: selectedEventId !== -1 && selectedEventId === event.id && event.state === _common.BLEEventState.INDETERMINATE ? {} : { display: 'none' } },
	                            this._getEditorComponent(event)
	                        );
	                    }),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'item-editor',
	                            style: selectedEventId === -1 && events.size > 0 ? {} : { display: 'none' } },
	                        _react2.default.createElement('div', { className: 'nothing-selected' })
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.Modal.Footer,
	                null,
	                _react2.default.createElement(
	                    _reactBootstrap.Button,
	                    { className: 'btn btn-primary btn-nordic', onClick: () => this._close() },
	                    'Close'
	                )
	            )
	        );
	    }
	}
	
	exports.BLEEventDialog = BLEEventDialog;
	BLEEventDialog.propTypes = {
	    visible: _react.PropTypes.bool.isRequired,
	    events: _react.PropTypes.object.isRequired,
	    selectedEventId: _react.PropTypes.number.isRequired,
	    clearAllEvents: _react.PropTypes.func.isRequired,
	    showDialog: _react.PropTypes.func.isRequired,
	    selectEventId: _react.PropTypes.func.isRequired,
	    rejectDeviceConnectionParams: _react.PropTypes.func.isRequired,
	    updateDeviceConnectionParams: _react.PropTypes.func.isRequired,
	    ignoreEvent: _react.PropTypes.func.isRequired,
	    removeEvent: _react.PropTypes.func.isRequired,
	    rejectPairing: _react.PropTypes.func.isRequired,
	    acceptPairing: _react.PropTypes.func.isRequired,
	    replyNumericalComparisonMatch: _react.PropTypes.func.isRequired,
	    replyAuthKey: _react.PropTypes.func.isRequired,
	    replyLescOob: _react.PropTypes.func.isRequired,
	    sendKeypress: _react.PropTypes.func.isRequired
	};
	
	function mapStateToProps(state) {
	    const bleEvent = state.bleEvent,
	          adapter = state.adapter;
	
	
	    const selectedAdapter = adapter.getIn(['adapters', adapter.selectedAdapter]);
	
	    return {
	        visible: bleEvent.visible,
	        events: bleEvent.events,
	        selectedEventId: bleEvent.selectedEventId,
	        security: selectedAdapter ? selectedAdapter.security : null
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    const retval = Object.assign((0, _redux.bindActionCreators)(AdapterActions, dispatch), (0, _redux.bindActionCreators)(BLEEventActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BLEEventDialog);

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _deviceDetailsActions = __webpack_require__(16);
	
	var DeviceDetailsActions = _interopRequireWildcard(_deviceDetailsActions);
	
	var _advertisingActions = __webpack_require__(15);
	
	var AdvertisingActions = _interopRequireWildcard(_advertisingActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _bleEventActions = __webpack_require__(25);
	
	var BLEEventActions = _interopRequireWildcard(_bleEventActions);
	
	var _securityActions = __webpack_require__(17);
	
	var SecurityActions = _interopRequireWildcard(_securityActions);
	
	var _dfuActions = __webpack_require__(26);
	
	var DfuActions = _interopRequireWildcard(_dfuActions);
	
	var _deviceDetails = __webpack_require__(82);
	
	var _deviceDetails2 = _interopRequireDefault(_deviceDetails);
	
	var _DfuDialog = __webpack_require__(91);
	
	var _DfuDialog2 = _interopRequireDefault(_DfuDialog);
	
	var _api = __webpack_require__(9);
	
	var _treeViewKeyNavigation = __webpack_require__(40);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DeviceDetailsContainer extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this.moveUp = () => this._selectNextComponent(true);
	        this.moveDown = () => this._selectNextComponent(false);
	        this.moveRight = () => this._expandComponent(true);
	        this.moveLeft = () => this._expandComponent(false);
	    }
	
	    componentDidMount() {
	        this._registerKeyboardShortcuts();
	    }
	
	    componentWillUnmount() {
	        this._unregisterKeyboardShortcuts();
	    }
	
	    _registerKeyboardShortcuts() {
	        window.addEventListener('core:move-down', this.moveDown);
	        window.addEventListener('core:move-up', this.moveUp);
	        window.addEventListener('core:move-right', this.moveRight);
	        window.addEventListener('core:move-left', this.moveLeft);
	    }
	
	    _unregisterKeyboardShortcuts() {
	        window.removeEventListener('core:move-down', this.moveDown);
	        window.removeEventListener('core:move-up', this.moveUp);
	        window.removeEventListener('core:move-right', this.moveRight);
	        window.removeEventListener('core:move-left', this.moveLeft);
	    }
	
	    _selectNextComponent(backward) {
	        var _props = this.props;
	        const deviceDetails = _props.deviceDetails,
	              selectedComponent = _props.selectedComponent,
	              selectComponent = _props.selectComponent;
	
	        let foundCurrent = false;
	
	        for (let item of (0, _treeViewKeyNavigation.traverseItems)(deviceDetails, true, backward)) {
	            if (selectedComponent === null) {
	                if (item !== null) {
	                    selectComponent(item.instanceId);
	                    return;
	                }
	            }
	
	            if (item.instanceId === selectedComponent) {
	                foundCurrent = true;
	            } else if (foundCurrent) {
	                selectComponent(item.instanceId);
	                return;
	            }
	        }
	    }
	
	    _expandComponent(expand) {
	        var _props2 = this.props;
	        const deviceDetails = _props2.deviceDetails,
	              selectedComponent = _props2.selectedComponent,
	              setAttributeExpanded = _props2.setAttributeExpanded,
	              selectComponent = _props2.selectComponent;
	
	
	        if (!selectedComponent) {
	            return;
	        }
	
	        const itemInstanceIds = (0, _api.getInstanceIds)(selectedComponent);
	        if (expand && itemInstanceIds.descriptor) {
	            return;
	        }
	
	        const item = (0, _treeViewKeyNavigation.findSelectedItem)(deviceDetails, selectedComponent);
	
	        if (item) {
	            if (expand && item.children && !item.children.size) {
	                return;
	            }
	
	            if (expand && item.expanded && item.children.size) {
	                this._selectNextComponent(false);
	                return;
	            }
	
	            if (!expand && !item.expanded) {
	                if (itemInstanceIds.characteristic) {
	                    selectComponent(selectedComponent.split('.').slice(0, -1).join('.'));
	                }
	
	                return;
	            }
	
	            setAttributeExpanded(item, expand);
	        }
	    }
	
	    render() {
	        var _props3 = this.props;
	        const adapterState = _props3.adapterState,
	              selectedComponent = _props3.selectedComponent,
	              connectedDevices = _props3.connectedDevices,
	              deviceDetails = _props3.deviceDetails,
	              selectComponent = _props3.selectComponent,
	              setAttributeExpanded = _props3.setAttributeExpanded,
	              readCharacteristic = _props3.readCharacteristic,
	              writeCharacteristic = _props3.writeCharacteristic,
	              readDescriptor = _props3.readDescriptor,
	              writeDescriptor = _props3.writeDescriptor,
	              showSetupDialog = _props3.showSetupDialog,
	              toggleAdvertising = _props3.toggleAdvertising,
	              disconnectFromDevice = _props3.disconnectFromDevice,
	              pairWithDevice = _props3.pairWithDevice,
	              createUserInitiatedConnParamsUpdateEvent = _props3.createUserInitiatedConnParamsUpdateEvent,
	              createUserInitiatedPairingEvent = _props3.createUserInitiatedPairingEvent,
	              toggleAutoConnUpdate = _props3.toggleAutoConnUpdate,
	              autoConnUpdate = _props3.autoConnUpdate,
	              showSecurityParamsDialog = _props3.showSecurityParamsDialog,
	              toggleAutoAcceptPairing = _props3.toggleAutoAcceptPairing,
	              deleteBondInfo = _props3.deleteBondInfo,
	              security = _props3.security,
	              openCustomUuidFile = _props3.openCustomUuidFile,
	              showDfuDialog = _props3.showDfuDialog;
	
	
	        const elemWidth = 250;
	        const detailDevices = [];
	
	        if (!adapterState) {
	            return _react2.default.createElement('div', { className: 'device-details-container', style: this.props.style });
	        }
	
	        // Details for connected adapter
	        detailDevices.push(_react2.default.createElement(_deviceDetails2.default, { key: adapterState.instanceId,
	            device: adapterState,
	            selected: selectedComponent,
	            deviceDetails: deviceDetails,
	            onSelectComponent: selectComponent,
	            onSetAttributeExpanded: setAttributeExpanded,
	            onReadCharacteristic: readCharacteristic,
	            onWriteCharacteristic: writeCharacteristic,
	            onReadDescriptor: readDescriptor,
	            onWriteDescriptor: writeDescriptor,
	            onShowAdvertisingSetupDialog: showSetupDialog,
	            onToggleAdvertising: toggleAdvertising,
	            containerHeight: this.props.style.height,
	            onToggleAutoConnUpdate: toggleAutoConnUpdate,
	            autoConnUpdate: autoConnUpdate,
	            onShowSecurityParamsDialog: showSecurityParamsDialog,
	            onToggleAutoAcceptPairing: toggleAutoAcceptPairing,
	            onDeleteBondInfo: deleteBondInfo,
	            security: security,
	            onOpenCustomUuidFile: openCustomUuidFile
	        }));
	
	        // Details for connected devices
	        connectedDevices.forEach(device => {
	            detailDevices.push(_react2.default.createElement(_deviceDetails2.default, { key: device.instanceId,
	                adapter: adapterState,
	                device: device,
	                selected: selectedComponent,
	                deviceDetails: deviceDetails,
	                onShowDfuDialog: showDfuDialog,
	                onSelectComponent: selectComponent,
	                onSetAttributeExpanded: setAttributeExpanded,
	                onReadCharacteristic: readCharacteristic,
	                onWriteCharacteristic: writeCharacteristic,
	                onReadDescriptor: readDescriptor,
	                onWriteDescriptor: writeDescriptor,
	                onDisconnectFromDevice: disconnectFromDevice,
	                onPairWithDevice: createUserInitiatedPairingEvent,
	                onUpdateDeviceConnectionParams: createUserInitiatedConnParamsUpdateEvent,
	                containerHeight: this.props.style.height
	            }));
	        });
	
	        const perDevice = 20 + elemWidth;
	        const width = perDevice * detailDevices.length;
	
	        // TODO: Fix better solution to right padding of scroll area than div box with border
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                'div',
	                { className: 'device-details-container', style: this.props.style },
	                _react2.default.createElement(
	                    'div',
	                    { style: { width: width } },
	                    detailDevices,
	                    _react2.default.createElement('div', { style: { borderColor: 'transparent', borderLeftWidth: '20px', borderRightWidth: '0px', borderStyle: 'solid' } })
	                )
	            ),
	            _react2.default.createElement(_DfuDialog2.default, null)
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const adapter = state.adapter;
	
	
	    const selectedAdapter = adapter.getIn(['adapters', adapter.selectedAdapter]);
	
	    if (!selectedAdapter) {
	        return {};
	    }
	
	    return {
	        adapterState: selectedAdapter.state,
	        selectedComponent: selectedAdapter.deviceDetails && selectedAdapter.deviceDetails.selectedComponent,
	        connectedDevices: selectedAdapter.connectedDevices,
	        deviceDetails: selectedAdapter.deviceDetails,
	        autoConnUpdate: adapter.autoConnUpdate,
	        security: selectedAdapter.security
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    let retval = Object.assign({}, (0, _redux.bindActionCreators)(DeviceDetailsActions, dispatch), (0, _redux.bindActionCreators)(AdvertisingActions, dispatch), (0, _redux.bindActionCreators)(AdapterActions, dispatch), (0, _redux.bindActionCreators)(BLEEventActions, dispatch), (0, _redux.bindActionCreators)(SecurityActions, dispatch), (0, _redux.bindActionCreators)(DfuActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DeviceDetailsContainer);
	
	
	DeviceDetailsContainer.propTypes = {
	    adapterState: _react.PropTypes.object,
	    selectedComponent: _react.PropTypes.string,
	    deviceDetails: _react.PropTypes.object,
	    connectedDevices: _react.PropTypes.object,
	    deviceServers: _react.PropTypes.object,
	    readCharacteristic: _react.PropTypes.func.isRequired,
	    writeCharacteristic: _react.PropTypes.func.isRequired,
	    readDescriptor: _react.PropTypes.func.isRequired,
	    writeDescriptor: _react.PropTypes.func.isRequired,
	    createUserInitiatedConnParamsUpdateEvent: _react.PropTypes.func.isRequired,
	    createUserInitiatedPairingEvent: _react.PropTypes.func.isRequired,
	    security: _react.PropTypes.object,
	    toggleAutoAcceptPairing: _react.PropTypes.func.isRequired,
	    deleteBondInfo: _react.PropTypes.func.isRequired,
	    showSecurityParamsDialog: _react.PropTypes.func.isRequired,
	    openCustomUuidFile: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _dfuActions = __webpack_require__(26);
	
	var DfuActions = _interopRequireWildcard(_dfuActions);
	
	var _DfuEditor = __webpack_require__(75);
	
	var _DfuEditor2 = _interopRequireDefault(_DfuEditor);
	
	var _ConfirmationDialog = __webpack_require__(29);
	
	var _ConfirmationDialog2 = _interopRequireDefault(_ConfirmationDialog);
	
	var _electron = __webpack_require__(13);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                                              * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                                              *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                                              *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                                              *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                                              *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                                              *   materials provided with the distribution.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                                              *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                                              *   software without specific prior written permission.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                                              *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                                              *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                                              * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                                              * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                                              * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                                              * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                                              * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                                              * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                                              * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                                              * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                                              * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                                              */
	
	class DfuDialog extends _react2.default.PureComponent {
	
	    constructor(props) {
	        super(props);
	
	        this.hide = this.hide.bind(this);
	        this.showFileDialog = this.showFileDialog.bind(this);
	        this.onFileSelected = this.onFileSelected.bind(this);
	        this.onStartDfu = this.onStartDfu.bind(this);
	        this.onStopDfu = this.onStopDfu.bind(this);
	    }
	
	    hide() {
	        if (this.props.isStarted) {
	            this.props.showConfirmCloseDialog();
	        } else {
	            this.props.hideDfuDialog();
	        }
	    }
	
	    onFileSelected(filePath) {
	        this.props.setDfuFilePath(filePath);
	        this.props.loadDfuPackageInfo(filePath);
	    }
	
	    showFileDialog() {
	        _electron.ipcRenderer.once('choose-file-dialog-reply', (event, fileArray) => {
	            if (fileArray && fileArray.length === 1) {
	                this.onFileSelected(fileArray[0]);
	            }
	        });
	        const filters = [{
	            name: 'Zip Files',
	            extensions: ['zip']
	        }];
	        _electron.ipcRenderer.send('choose-file-dialog', filters);
	    }
	
	    onStartDfu() {
	        this.props.startDfu(this.props.filePath);
	    }
	
	    onStopDfu() {
	        this.props.stopDfu();
	    }
	
	    render() {
	        var _props = this.props;
	
	        const isVisible = _props.isVisible,
	              hideDfuDialog = _props.hideDfuDialog,
	              hideConfirmCloseDialog = _props.hideConfirmCloseDialog,
	              isConfirmCloseVisible = _props.isConfirmCloseVisible,
	              device = _props.device,
	              props = _objectWithoutProperties(_props, ['isVisible', 'hideDfuDialog', 'hideConfirmCloseDialog', 'isConfirmCloseVisible', 'device']);
	
	        if (!isVisible) {
	            return null;
	        }
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                _reactBootstrap.Modal,
	                { className: 'dfu-setup', bsSize: 'large', show: isVisible },
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Header,
	                    null,
	                    _react2.default.createElement(
	                        _reactBootstrap.Modal.Title,
	                        null,
	                        'Device Firmware Upgrade (DFU) for device ',
	                        device.address
	                    )
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Body,
	                    null,
	                    _react2.default.createElement(_DfuEditor2.default, _extends({
	                        onChooseFile: this.showFileDialog,
	                        onStartDfu: this.onStartDfu,
	                        onStopDfu: this.onStopDfu,
	                        device: device
	                    }, props))
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Footer,
	                    null,
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { className: 'btn-primary btn-nordic', onClick: this.hide },
	                        'Close'
	                    )
	                )
	            ),
	            _react2.default.createElement(_ConfirmationDialog2.default, {
	                show: isConfirmCloseVisible,
	                onOk: hideDfuDialog,
	                onCancel: hideConfirmCloseDialog,
	                text: 'Closing this window will stop DFU. Are you sure?'
	            })
	        );
	    }
	}
	
	DfuDialog.propTypes = {
	    isVisible: _react.PropTypes.bool.isRequired,
	    hideDfuDialog: _react.PropTypes.func.isRequired
	};
	function mapStateToProps(state) {
	    const dfu = state.dfu,
	          adapter = state.adapter;
	
	
	    const selectedAdapter = adapter.getIn(['adapters', adapter.selectedAdapter]);
	
	    return {
	        adapter: selectedAdapter,
	        isVisible: dfu.isDfuDialogVisible,
	        isConfirmCloseVisible: dfu.isConfirmCloseVisible,
	        device: dfu.device,
	        filePath: dfu.filePath,
	        packageInfo: dfu.packageInfo,
	        isStarted: dfu.isStarted,
	        isStopping: dfu.isStopping,
	        isCompleted: dfu.isCompleted,
	        percentCompleted: dfu.percentCompleted,
	        status: dfu.status,
	        fileNameBeingTransferred: dfu.fileNameBeingTransferred,
	        throughput: dfu.throughput
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    return Object.assign({}, (0, _redux.bindActionCreators)(DfuActions, dispatch));
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DfuDialog);
	module.exports = exports['default'];

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _discoveryActions = __webpack_require__(38);
	
	var DiscoveryActions = _interopRequireWildcard(_discoveryActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _discoveryButton = __webpack_require__(83);
	
	var _discoveryButton2 = _interopRequireDefault(_discoveryButton);
	
	var _DiscoveredDevice = __webpack_require__(77);
	
	var _DiscoveredDevice2 = _interopRequireDefault(_DiscoveredDevice);
	
	var _nrfconnectCore = __webpack_require__(6);
	
	var _ajaxLoader = __webpack_require__(32);
	
	var _ajaxLoader2 = _interopRequireDefault(_ajaxLoader);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class DiscoveredDevices extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        var _props = this.props;
	        const toggleScan = _props.toggleScan,
	              clearDevicesList = _props.clearDevicesList;
	
	        window.addEventListener('core:toggle-scan', () => {
	            toggleScan();
	        });
	        window.addEventListener('core:clear-scan', () => {
	            clearDevicesList();
	        });
	    }
	
	    handleCheckedChange(property, e) {
	        this.discoveryOptions[property] = e.target.checked;
	        this.props.setDiscoveryOptions(this.discoveryOptions);
	    }
	
	    handleFilterChange(e) {
	        this.discoveryOptions.filterString = e.target.value;
	        this.props.setDiscoveryOptions(this.discoveryOptions);
	    }
	
	    handleOptionsExpanded() {
	        this.props.toggleOptionsExpanded();
	    }
	
	    render() {
	        var _props2 = this.props;
	        const discoveredDevices = _props2.discoveredDevices,
	              discoveryOptions = _props2.discoveryOptions,
	              isScanning = _props2.isScanning,
	              adapterIsConnecting = _props2.adapterIsConnecting,
	              isAdapterAvailable = _props2.isAdapterAvailable,
	              clearDevicesList = _props2.clearDevicesList,
	              toggleScan = _props2.toggleScan,
	              connectToDevice = _props2.connectToDevice,
	              cancelConnect = _props2.cancelConnect,
	              toggleExpanded = _props2.toggleExpanded,
	              toggleOptionsExpanded = _props2.toggleOptionsExpanded;
	
	
	        this.discoveryOptions = this.props.discoveryOptions.toJS();
	
	        const dirIcon = discoveryOptions.expanded ? 'icon-down-dir' : 'icon-right-dir';
	
	        const discoveryOptionsDiv = discoveryOptions.expanded ? _react2.default.createElement(
	            'div',
	            { className: 'discovery-options' },
	            _react2.default.createElement(
	                _reactBootstrap.Checkbox,
	                { className: 'adv-label',
	                    defaultChecked: discoveryOptions.sortByRssi,
	                    onChange: e => this.handleCheckedChange('sortByRssi', e) },
	                'Sort by signal strength'
	            ),
	            _react2.default.createElement(_nrfconnectCore.TextInput, { inline: true, title: 'Filter list by device name or address', label: 'Filter:', className: 'adv-value',
	                defaultValue: discoveryOptions.filterString, onChange: e => this.handleFilterChange(e),
	                labelClassName: '', wrapperClassName: '', placeholder: 'Device name or address' })
	        ) : '';
	
	        return _react2.default.createElement(
	            'div',
	            { id: 'discoveredDevicesContainer' },
	            _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(
	                    'h4',
	                    null,
	                    'Discovered devices',
	                    _react2.default.createElement(_nrfconnectCore.Spinner, { image: _ajaxLoader2.default, visible: isScanning })
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { className: 'padded-row' },
	                _react2.default.createElement(_discoveryButton2.default, { scanInProgress: isScanning, adapterIsConnecting: adapterIsConnecting, isAdapterAvailable: isAdapterAvailable, onScanClicked: () => toggleScan() }),
	                _react2.default.createElement(
	                    'button',
	                    { title: 'Clear list (Alt+C)', onClick: () => clearDevicesList(), type: 'button', className: 'btn btn-primary btn-sm btn-nordic padded-row' },
	                    _react2.default.createElement('span', { className: 'icon-trash' }),
	                    'Clear'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'discovery-options-expand' },
	                    _react2.default.createElement(
	                        'span',
	                        { onClick: toggleOptionsExpanded },
	                        _react2.default.createElement('i', { className: dirIcon }),
	                        'Options'
	                    ),
	                    discoveryOptionsDiv
	                )
	            ),
	            _react2.default.createElement(
	                'div',
	                { style: { paddingTop: '0px' } },
	                discoveredDevices.map((device, address) => {
	                    return _react2.default.createElement(_DiscoveredDevice2.default, { key: address,
	                        device: device,
	                        standalone: false,
	                        adapterIsConnecting: adapterIsConnecting,
	                        isConnecting: device.isConnecting,
	                        onConnect: device => connectToDevice(device),
	                        onCancelConnect: () => cancelConnect(),
	                        onToggleExpanded: toggleExpanded });
	                })
	            )
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const discovery = state.discovery,
	          adapter = state.adapter;
	
	
	    let selectedAdapter = null;
	    let adapterIsConnecting = false;
	    let scanning = false;
	    let adapterAvailable = false;
	
	    if (adapter.selectedAdapter !== undefined && adapter.selectedAdapter !== null) {
	        selectedAdapter = adapter.getIn(['adapters', adapter.selectedAdapter]);
	
	        if (selectedAdapter && selectedAdapter.state) {
	            adapterIsConnecting = selectedAdapter.state.connecting || false;
	            scanning = selectedAdapter.state.scanning || false;
	            adapterAvailable = selectedAdapter.state.available || false;
	        }
	    }
	
	    return {
	        discoveredDevices: discovery.devices,
	        discoveryOptions: discovery.options,
	        adapterIsConnecting: adapterIsConnecting,
	        isScanning: scanning,
	        isAdapterAvailable: adapterAvailable
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    const retval = Object.assign({}, (0, _redux.bindActionCreators)(DiscoveryActions, dispatch), (0, _redux.bindActionCreators)(AdapterActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DiscoveredDevices);
	
	
	DiscoveredDevices.propTypes = {
	    discoveredDevices: _react.PropTypes.object.isRequired,
	    isAdapterAvailable: _react.PropTypes.bool.isRequired,
	    isScanning: _react.PropTypes.bool.isRequired,
	    adapterIsConnecting: _react.PropTypes.bool.isRequired,
	    clearDevicesList: _react.PropTypes.func.isRequired,
	    toggleScan: _react.PropTypes.func.isRequired,
	    connectToDevice: _react.PropTypes.func.isRequired,
	    cancelConnect: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ErrorDialog = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _redux = __webpack_require__(8);
	
	var _errorDialogActions = __webpack_require__(12);
	
	var ErrorActions = _interopRequireWildcard(_errorDialogActions);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class ErrorDialog extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    _createErrorHtml(index, error) {
	        const debug = this.props.debug;
	
	
	        let html;
	
	        if (debug === true) {
	            html = _react2.default.createElement(
	                'p',
	                { key: index },
	                error.stack
	            );
	        } else {
	            html = _react2.default.createElement(
	                'p',
	                { key: index },
	                error.message
	            );
	        }
	
	        return html;
	    }
	
	    render() {
	        var _props = this.props;
	        const visible = _props.visible,
	              errors = _props.errors,
	              closeErrorDialog = _props.closeErrorDialog;
	
	
	        let _errors = [];
	
	        errors.forEach((error, index) => _errors.push(this._createErrorHtml(index, error)));
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                _reactBootstrap.Modal,
	                { show: visible, onHide: () => closeErrorDialog() },
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Header,
	                    { closeButton: true },
	                    _react2.default.createElement(
	                        _reactBootstrap.Modal.Title,
	                        null,
	                        'Error!'
	                    )
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Body,
	                    null,
	                    _errors
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Footer,
	                    null,
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { autoFocus: true, onClick: () => closeErrorDialog() },
	                        'OK'
	                    )
	                )
	            )
	        );
	    }
	}
	
	exports.ErrorDialog = ErrorDialog;
	ErrorDialog.propTypes = {
	    errors: _react.PropTypes.object.isRequired,
	    visible: _react.PropTypes.bool.isRequired,
	    closeErrorDialog: _react.PropTypes.func.isRequired,
	    toggleDebug: _react.PropTypes.func.isRequired
	};
	
	function mapStateToProps(state) {
	    const errorDialog = state.errorDialog;
	
	
	    return {
	        visible: errorDialog.visible,
	        errors: errorDialog.errors,
	        debug: errorDialog.debug
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    const retval = Object.assign({}, (0, _redux.bindActionCreators)(ErrorActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ErrorDialog);

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactInfinite = __webpack_require__(151);
	
	var _reactInfinite2 = _interopRequireDefault(_reactInfinite);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _uuidV = __webpack_require__(58);
	
	var _uuidV2 = _interopRequireDefault(_uuidV);
	
	var _logging = __webpack_require__(4);
	
	var _logger = __webpack_require__(49);
	
	var _fileUtil = __webpack_require__(51);
	
	var _logActions = __webpack_require__(39);
	
	var LogActions = _interopRequireWildcard(_logActions);
	
	var _LogEntry = __webpack_require__(79);
	
	var _LogEntry2 = _interopRequireDefault(_LogEntry);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class LogContainer extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	        this.props.startReading();
	
	        const clear = this.props.clear;
	
	
	        window.addEventListener('core:clear-log', () => {
	            clear();
	        });
	    }
	
	    componentDidMount() {
	        _logging.logger.info('Ready. Select serial port to connect to adapter.');
	    }
	
	    _openLogFile(path) {
	        (0, _fileUtil.openFileInDefaultApplication)(path, err => {
	            if (err) {
	                _logging.logger.info(err);
	            }
	        });
	    }
	
	    render() {
	        var _props = this.props;
	        const autoScroll = _props.autoScroll,
	              logEntries = _props.logEntries,
	              clear = _props.clear,
	              toggleAutoScroll = _props.toggleAutoScroll;
	
	
	        const logFilePath = (0, _logger.getLogFilePath)();
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'log-wrap' },
	            _react2.default.createElement(
	                'div',
	                { className: 'log-header' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'log-header-text' },
	                    'Log'
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'padded-row log-header-buttons' },
	                    _react2.default.createElement(
	                        'button',
	                        { type: 'button', title: 'Open log file', className: 'btn btn-primary btn-xs btn-nordic', onClick: () => this._openLogFile(logFilePath) },
	                        _react2.default.createElement('span', { className: 'icon-doc-text', 'aria-hidden': 'true' })
	                    ),
	                    _react2.default.createElement(
	                        'button',
	                        { type: 'button', title: 'Clear log', className: 'btn btn-primary btn-xs btn-nordic', onClick: () => clear() },
	                        _react2.default.createElement('span', { className: 'icon-trash', 'aria-hidden': 'true' })
	                    ),
	                    _react2.default.createElement(
	                        'button',
	                        { type: 'button', title: 'Scroll automatically', className: 'btn btn-primary btn-xs btn-nordic ' + (autoScroll ? 'active' : ''), onClick: () => toggleAutoScroll() },
	                        _react2.default.createElement('span', { className: 'icon-down', 'aria-hidden': 'true' })
	                    )
	                )
	            ),
	            _react2.default.createElement(
	                _reactInfinite2.default,
	                { elementHeight: 20,
	                    containerHeight: 155,
	                    infiniteLoadBeginEdgeOffset: 135,
	                    className: 'infinite-log',
	                    autoScroll: autoScroll
	                },
	                logEntries.map(entry => _react2.default.createElement(_LogEntry2.default, _extends({ entry }, { key: (0, _uuidV2.default)() })))
	            )
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const log = state.log;
	
	
	    return {
	        logEntries: log.entries,
	        autoScroll: log.autoScroll
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    let retval = Object.assign({}, (0, _redux.bindActionCreators)(LogActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(LogContainer);
	
	
	LogContainer.propTypes = {
	    logEntries: _react.PropTypes.object.isRequired,
	    autoScroll: _react.PropTypes.bool.isRequired,
	    toggleAutoScroll: _react.PropTypes.func.isRequired,
	    clear: _react.PropTypes.func.isRequired,
	    startReading: _react.PropTypes.func.isRequired,
	    stopReading: _react.PropTypes.func.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _App = __webpack_require__(47);
	
	var _App2 = _interopRequireDefault(_App);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// NOTE: Add <DevTools /> as sibling to <App /> to timetravel.
	
	class Root extends _react2.default.PureComponent {
	    render() {
	        const store = this.props.store;
	
	        return _react2.default.createElement(
	            _reactRedux.Provider,
	            { store: store },
	            _react2.default.createElement(
	                'div',
	                null,
	                _react2.default.createElement(_App2.default, null)
	            )
	        );
	    }
	}
	
	exports.default = Root;
	// import DevTools from './DevTools';
	
	Root.propTypes = {
	    store: _react.PropTypes.object.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(7);
	
	var _App = __webpack_require__(47);
	
	var _App2 = _interopRequireDefault(_App);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class Root extends _react2.default.PureComponent {
	    render() {
	        const store = this.props.store;
	
	        return _react2.default.createElement(
	            _reactRedux.Provider,
	            { store: store },
	            _react2.default.createElement(_App2.default, null)
	        );
	    }
	}
	
	exports.default = Root;
	Root.propTypes = {
	    store: _react.PropTypes.object.isRequired
	};
	module.exports = exports['default'];

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SecurityParamsDialog = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _reactBootstrap = __webpack_require__(2);
	
	var _SecurityParamsControls = __webpack_require__(44);
	
	var _securityActions = __webpack_require__(17);
	
	var SecurityActions = _interopRequireWildcard(_securityActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const IO_CAPS_DISPLAY_ONLY = 0;
	const IO_CAPS_DISPLAY_YESNO = 1;
	const IO_CAPS_KEYBOARD_ONLY = 2;
	const IO_CAPS_NONE = 3;
	const IO_CAPS_KEYBOARD_DISPLAY = 4;
	
	class SecurityParamsDialog extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this.secParams = props.security ? props.security.securityParams : null;
	    }
	
	    handleSecParamsChange(params) {
	        this.secParams = params;
	    }
	
	    handleApplyParams() {
	        var _props = this.props;
	        const setSecurityParams = _props.setSecurityParams,
	              hideSecurityParamsDialog = _props.hideSecurityParamsDialog;
	
	
	        setSecurityParams(this.secParams);
	
	        hideSecurityParamsDialog();
	    }
	
	    handleCancel() {
	        const hideSecurityParamsDialog = this.props.hideSecurityParamsDialog;
	
	
	        hideSecurityParamsDialog();
	    }
	
	    render() {
	        var _props2 = this.props;
	        const onCancel = _props2.onCancel,
	              security = _props2.security;
	
	
	        if (!security) {
	            return _react2.default.createElement('div', null);
	        }
	
	        return _react2.default.createElement(
	            _reactBootstrap.Modal,
	            { className: '', show: security.showingSecurityDialog, onHide: () => {} },
	            _react2.default.createElement(
	                _reactBootstrap.Modal.Header,
	                null,
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Title,
	                    null,
	                    'Security parameters'
	                )
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.Modal.Body,
	                null,
	                _react2.default.createElement(
	                    'form',
	                    { className: 'form-horizontal' },
	                    _react2.default.createElement(_SecurityParamsControls.SecurityParamsControls, { onChange: secParams => this.handleSecParamsChange(secParams), securityParams: security.securityParams })
	                )
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.Modal.Footer,
	                null,
	                _react2.default.createElement(
	                    'div',
	                    { className: 'form-group' },
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { type: 'button', onClick: () => this.handleApplyParams(),
	                            className: 'btn btn-primary btn-sm btn-nordic' },
	                        'Apply'
	                    ),
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { type: 'button',
	                            onClick: () => this.handleCancel(),
	                            className: 'btn btn-default btn-sm btn-nordic' },
	                        'Cancel'
	                    )
	                )
	            )
	        );
	    }
	}
	
	exports.SecurityParamsDialog = SecurityParamsDialog;
	function mapStateToProps(state) {
	    const adapter = state.adapter;
	
	
	    const selectedAdapter = adapter.getIn(['adapters', adapter.selectedAdapter]);
	
	    if (!selectedAdapter) {
	        return {};
	    }
	
	    return {
	        security: selectedAdapter.security
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    let retval = Object.assign({}, (0, _redux.bindActionCreators)(SecurityActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SecurityParamsDialog);
	
	
	SecurityParamsDialog.propTypes = {
	    security: _react.PropTypes.object,
	    setSecurityParams: _react.PropTypes.func.isRequired,
	    hideSecurityParamsDialog: _react.PropTypes.func.isRequired
	};

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _redux = __webpack_require__(8);
	
	var _reactRedux = __webpack_require__(7);
	
	var _immutable = __webpack_require__(5);
	
	var _electron = __webpack_require__(13);
	
	var _serverSetupActions = __webpack_require__(18);
	
	var ServerSetupActions = _interopRequireWildcard(_serverSetupActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _errorDialogActions = __webpack_require__(12);
	
	var ErrorActions = _interopRequireWildcard(_errorDialogActions);
	
	var _AddNewItem = __webpack_require__(41);
	
	var _AddNewItem2 = _interopRequireDefault(_AddNewItem);
	
	var _ServiceItem = __webpack_require__(45);
	
	var _ServiceItem2 = _interopRequireDefault(_ServiceItem);
	
	var _ServiceEditor = __webpack_require__(81);
	
	var _ServiceEditor2 = _interopRequireDefault(_ServiceEditor);
	
	var _CharacteristicEditor = __webpack_require__(66);
	
	var _CharacteristicEditor2 = _interopRequireDefault(_CharacteristicEditor);
	
	var _DescriptorEditor = __webpack_require__(72);
	
	var _DescriptorEditor2 = _interopRequireDefault(_DescriptorEditor);
	
	var _ConfirmationDialog = __webpack_require__(29);
	
	var _ConfirmationDialog2 = _interopRequireDefault(_ConfirmationDialog);
	
	var _CentralDevice = __webpack_require__(42);
	
	var _CentralDevice2 = _interopRequireDefault(_CentralDevice);
	
	var _api = __webpack_require__(9);
	
	var _treeViewKeyNavigation = __webpack_require__(40);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	let loadServerSetupReplyHandle;
	let saveServerSetupReplyHandle;
	
	class ServerSetup extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	
	        this._setupFileDialogs();
	
	        this.moveUp = () => this._selectNextComponent(true);
	        this.moveDown = () => this._selectNextComponent(false);
	        this.moveRight = () => this._expandComponent(true);
	        this.moveLeft = () => this._expandComponent(false);
	
	        this.modified = false;
	        this.pendingSelectInstanceId = null;
	    }
	
	    componentDidMount() {
	        this._registerKeyboardShortcuts();
	    }
	
	    componentWillUnmount() {
	        this._unregisterKeyboardShortcuts();
	    }
	
	    componentWillUpdate(nextProps, nextState) {
	        if (!this.props.serverSetup) {
	            return false;
	        }
	
	        if (!nextProps || !nextProps.serverSetup) {
	            return false;
	        }
	
	        if (!this.props.serverSetup || nextProps.serverSetup.selectedComponent !== this.props.serverSetup.selectedComponent) {
	            this.modified = false;
	        }
	    }
	
	    _registerKeyboardShortcuts() {
	        window.addEventListener('core:move-down', this.moveDown);
	        window.addEventListener('core:move-up', this.moveUp);
	        window.addEventListener('core:move-right', this.moveRight);
	        window.addEventListener('core:move-left', this.moveLeft);
	    }
	
	    _unregisterKeyboardShortcuts() {
	        window.removeEventListener('core:move-down', this.moveDown);
	        window.removeEventListener('core:move-up', this.moveUp);
	        window.removeEventListener('core:move-right', this.moveRight);
	        window.removeEventListener('core:move-left', this.moveLeft);
	    }
	
	    _selectNextComponent(backward) {
	        var _props = this.props;
	        const serverSetup = _props.serverSetup,
	              selectComponent = _props.selectComponent;
	
	
	        if (!serverSetup) {
	            return;
	        }
	
	        const selectedComponent = serverSetup.selectedComponent;
	        const deviceDetails = new _immutable.Map({ devices: new _immutable.Map({ 'local.server': serverSetup }) });
	        let foundCurrent = false;
	
	        for (let item of (0, _treeViewKeyNavigation.traverseItems)(deviceDetails, true, backward)) {
	            if (selectedComponent === null) {
	                if (item !== null) {
	                    selectComponent(item.instanceId);
	                    return;
	                }
	            }
	
	            if (item.instanceId === selectedComponent) {
	                foundCurrent = true;
	            } else if (foundCurrent) {
	                selectComponent(item.instanceId);
	                return;
	            }
	        }
	    }
	
	    _expandComponent(expand) {
	        var _props2 = this.props;
	        const serverSetup = _props2.serverSetup,
	              selectComponent = _props2.selectComponent,
	              setAttributeExpanded = _props2.setAttributeExpanded;
	
	
	        const selectedComponent = serverSetup.selectedComponent;
	        const deviceDetails = new _immutable.Map({ devices: new _immutable.Map({ 'local.server': serverSetup }) });
	
	        if (!selectedComponent) {
	            return;
	        }
	
	        const itemInstanceIds = (0, _api.getInstanceIds)(selectedComponent);
	        if (expand && itemInstanceIds.descriptor) {
	            return;
	        }
	
	        const item = (0, _treeViewKeyNavigation.findSelectedItem)(deviceDetails, selectedComponent);
	
	        if (item) {
	            if (expand && item.expanded && item.children.size) {
	                if (item.children.size) {
	                    this._selectNextComponent(false);
	                }
	
	                return;
	            }
	
	            if (!expand && !item.expanded) {
	                if (itemInstanceIds.characteristic) {
	                    selectComponent(selectedComponent.split('.').slice(0, -1).join('.'));
	                }
	
	                return;
	            }
	
	            setAttributeExpanded(item, expand);
	        }
	    }
	
	    _setupFileDialogs() {
	        var _props3 = this.props;
	        const loadServerSetup = _props3.loadServerSetup,
	              saveServerSetup = _props3.saveServerSetup;
	
	
	        if (loadServerSetupReplyHandle) {
	            _electron.ipcRenderer.removeListener('load-server-setup-reply', loadServerSetupReplyHandle);
	        }
	
	        const loadServerSetupReply = (event, filename) => {
	            loadServerSetup(filename);
	        };
	
	        _electron.ipcRenderer.on('load-server-setup-reply', loadServerSetupReply);
	        loadServerSetupReplyHandle = loadServerSetupReply;
	
	        if (saveServerSetupReplyHandle) {
	            _electron.ipcRenderer.removeListener('save-server-setup-reply', saveServerSetupReplyHandle);
	        }
	
	        const saveServerSetupReply = (event, filename) => {
	            saveServerSetup(filename);
	        };
	
	        _electron.ipcRenderer.on('save-server-setup-reply', saveServerSetupReply);
	        saveServerSetupReplyHandle = saveServerSetupReply;
	    }
	
	    _saveChangedAttribute(changedAttribute) {
	        this.props.saveChangedAttribute(changedAttribute);
	    }
	
	    _onModified(value) {
	        this.modified = value;
	    }
	
	    _onSelectComponent(instanceId) {
	        if (!this.modified) {
	            this.props.selectComponent(instanceId);
	            return;
	        }
	
	        this.pendingSelectInstanceId = instanceId;
	        this.props.showDiscardDialog();
	    }
	
	    _onDiscardCancel() {
	        this.pendingSelectInstanceId = null;
	
	        this.props.hideDiscardDialog();
	    }
	
	    _onDiscardOk() {
	        this.props.hideDiscardDialog();
	        this.props.selectComponent(this.pendingSelectInstanceId);
	    }
	
	    render() {
	        var _props4 = this.props;
	        const selectedAdapter = _props4.selectedAdapter,
	              serverSetup = _props4.serverSetup,
	              selectComponent = _props4.selectComponent,
	              setAttributeExpanded = _props4.setAttributeExpanded,
	              addNewService = _props4.addNewService,
	              addNewCharacteristic = _props4.addNewCharacteristic,
	              addNewDescriptor = _props4.addNewDescriptor,
	              removeAttribute = _props4.removeAttribute,
	              applyServer = _props4.applyServer,
	              clearServer = _props4.clearServer,
	              showDeleteDialog = _props4.showDeleteDialog,
	              hideDeleteDialog = _props4.hideDeleteDialog,
	              showClearDialog = _props4.showClearDialog,
	              hideClearDialog = _props4.hideClearDialog,
	              showErrorDialog = _props4.showErrorDialog,
	              showDiscardDialog = _props4.showDiscardDialog,
	              hideDiscardDialog = _props4.hideDiscardDialog;
	
	
	        if (!serverSetup) {
	            return _react2.default.createElement('div', { className: 'server-setup', style: this.props.style });
	        }
	
	        const selectedComponent = serverSetup.selectedComponent,
	              showingDeleteDialog = serverSetup.showingDeleteDialog,
	              showingClearDialog = serverSetup.showingClearDialog,
	              showingDiscardDialog = serverSetup.showingDiscardDialog,
	              children = serverSetup.children;
	
	
	        const instanceIds = (0, _api.getInstanceIds)(selectedComponent);
	        let selectedAttribute = null;
	        let selectedIsDescriptor = false;
	        let selectedIsCharacteristic = false;
	        let selectedIsService = false;
	
	        if (instanceIds.descriptor) {
	            selectedAttribute = children.getIn([instanceIds.service, 'children', instanceIds.characteristic, 'children', instanceIds.descriptor]);
	            selectedIsDescriptor = true;
	        } else if (instanceIds.characteristic) {
	            selectedAttribute = children.getIn([instanceIds.service, 'children', instanceIds.characteristic]);
	            selectedIsCharacteristic = true;
	        } else if (instanceIds.service) {
	            selectedAttribute = children.getIn([instanceIds.service]);
	            selectedIsService = true;
	        }
	
	        const editorBorderClass = selectedAttribute ? ' selected-component-editor-border' : '';
	        const editor = selectedIsService ? _react2.default.createElement(_ServiceEditor2.default, { service: selectedAttribute,
	            onSaveChangedAttribute: changedAttribute => this._saveChangedAttribute(changedAttribute),
	            onRemoveAttribute: showDeleteDialog,
	            onModified: modified => this._onModified(modified),
	            onValidationError: error => showErrorDialog(error) }) : selectedIsCharacteristic ? _react2.default.createElement(_CharacteristicEditor2.default, { characteristic: selectedAttribute,
	            onSaveChangedAttribute: changedAttribute => this._saveChangedAttribute(changedAttribute),
	            onRemoveAttribute: showDeleteDialog,
	            onModified: modified => this._onModified(modified),
	            onValidationError: error => showErrorDialog(error) }) : selectedIsDescriptor ? _react2.default.createElement(_DescriptorEditor2.default, { descriptor: selectedAttribute,
	            onSaveChangedAttribute: changedAttribute => this._saveChangedAttribute(changedAttribute),
	            onRemoveAttribute: showDeleteDialog,
	            onModified: modified => this._onModified(modified),
	            onValidationError: error => showErrorDialog(error) }) : _react2.default.createElement('div', { className: 'nothing-selected' });
	
	        const services = children.map((service, i) => {
	            let canAdd = true;
	
	            if (service.instanceId === 'local.server.0' || service.instanceId === 'local.server.1') {
	                canAdd = false;
	            }
	
	            return _react2.default.createElement(_ServiceItem2.default, {
	                key: i,
	                item: service,
	                selectOnClick: true,
	                selected: selectedComponent,
	                onSelected: this._onSelected,
	                onSelectAttribute: instanceId => this._onSelectComponent(instanceId),
	                onSetAttributeExpanded: setAttributeExpanded,
	                addNew: canAdd,
	                onAddCharacteristic: addNewCharacteristic,
	                onAddDescriptor: addNewDescriptor });
	        });
	
	        const btnTitle = selectedAdapter.isServerSetupApplied ? 'Server setup can be applied only once between resets' : '';
	
	        const central = _react2.default.createElement(_CentralDevice2.default, { id: selectedAdapter.instanceId + '_serversetup',
	            name: selectedAdapter.state.name,
	            address: selectedAdapter.state.address,
	            onSaveSetup: () => {
	                _electron.ipcRenderer.send('save-server-setup', null);
	            },
	
	            onLoadSetup: () => {
	                _electron.ipcRenderer.send('load-server-setup', null);
	            }
	
	        });
	
	        return _react2.default.createElement(
	            'div',
	            { className: 'server-setup', style: this.props.style },
	            _react2.default.createElement(
	                'div',
	                { className: 'server-setup-view' },
	                _react2.default.createElement(
	                    'div',
	                    { className: 'server-setup-tree' },
	                    central,
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'service-items-wrap' },
	                        services,
	                        _react2.default.createElement(_AddNewItem2.default, { text: 'New service', id: 'add-btn-root', bars: 1, parentInstanceId: 'local.server', selected: selectedComponent, onClick: addNewService })
	                    ),
	                    _react2.default.createElement(
	                        'div',
	                        { className: 'server-setup-buttons' },
	                        _react2.default.createElement(
	                            'button',
	                            { type: 'button', className: 'btn btn-primary btn-nordic',
	                                disabled: selectedAdapter.isServerSetupApplied, title: btnTitle,
	                                onClick: applyServer },
	                            _react2.default.createElement('i', { className: 'icon-ok' }),
	                            ' Apply to device'
	                        ),
	                        _react2.default.createElement(
	                            'button',
	                            { type: 'button', className: 'btn btn-primary btn-nordic', onClick: showClearDialog },
	                            _react2.default.createElement('i', { className: 'icon-trash' }),
	                            ' Clear'
	                        )
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    { className: 'item-editor' + editorBorderClass },
	                    editor
	                ),
	                _react2.default.createElement(_ConfirmationDialog2.default, { show: showingDeleteDialog,
	                    onOk: removeAttribute,
	                    onCancel: hideDeleteDialog,
	                    text: 'Are you sure you want to delete the attribute?' }),
	                _react2.default.createElement(_ConfirmationDialog2.default, { show: showingClearDialog,
	                    onOk: clearServer,
	                    onCancel: hideClearDialog,
	                    text: 'Are you sure you want to clear the server setup?' }),
	                _react2.default.createElement(_ConfirmationDialog2.default, { show: showingDiscardDialog,
	                    onOk: () => this._onDiscardOk(),
	                    onCancel: () => this._onDiscardCancel(),
	                    text: 'The attribute has been modified. Discard the changes?' })
	            )
	        );
	    }
	}
	
	function mapStateToProps(state) {
	    const selectedAdapter = state.adapter.getIn(['adapters', state.adapter.selectedAdapter]);
	
	    if (!selectedAdapter) {
	        return {};
	    }
	
	    return {
	        selectedAdapter: selectedAdapter,
	        serverSetup: selectedAdapter.serverSetup
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    let retval = Object.assign({}, (0, _redux.bindActionCreators)(ServerSetupActions, dispatch), (0, _redux.bindActionCreators)(AdapterActions, dispatch), (0, _redux.bindActionCreators)(ErrorActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ServerSetup);
	
	
	ServerSetup.propTypes = {
	    serverSetup: _react.PropTypes.object
	};
	module.exports = exports['default'];

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	__webpack_require__(143);
	
	var React = __webpack_require__(1);
	var renderReact = __webpack_require__(24).render;
	var Root = __webpack_require__(48);
	
	var configureStore = __webpack_require__(6).configureStore;
	var rootReducer = __webpack_require__(109);
	var initialState = window.__INITIAL_STATE__ || {};
	var store = configureStore(initialState, rootReducer);
	
	let App = __webpack_require__(48);
	const render = Component => {
	    renderReact(React.createElement(Component, { store: store }), document.getElementById('app'));
	};
	render(App);
	
	// Webpack hot module replacement (HMR)
	if (false) {
	    module.hot.accept('./reducers', () => store.replaceReducer(require('./reducers')));
	    module.hot.accept('./containers/Root', function () {
	        render(require('./containers/Root'));
	    });
	}

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = adapter;
	
	var _immutable = __webpack_require__(5);
	
	var _redux = __webpack_require__(8);
	
	var _api = __webpack_require__(9);
	
	var apiHelper = _interopRequireWildcard(_api);
	
	var _deviceDetailsReducer = __webpack_require__(104);
	
	var _deviceDetailsReducer2 = _interopRequireDefault(_deviceDetailsReducer);
	
	var _serverSetupReducer = __webpack_require__(111);
	
	var _serverSetupReducer2 = _interopRequireDefault(_serverSetupReducer);
	
	var _securityReducer = __webpack_require__(50);
	
	var _securityReducer2 = _interopRequireDefault(_securityReducer);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterAction = _interopRequireWildcard(_adapterActions);
	
	var _deviceDetailsActions = __webpack_require__(16);
	
	var DeviceDetailsActions = _interopRequireWildcard(_deviceDetailsActions);
	
	var _serverSetupActions = __webpack_require__(18);
	
	var ServerSetupActions = _interopRequireWildcard(_serverSetupActions);
	
	var _securityActions = __webpack_require__(17);
	
	var SecurityActions = _interopRequireWildcard(_securityActions);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const DEFAULT_ADAPTER_STATUS = 'Select serial port';
	
	const ImmutableRoot = (0, _immutable.Record)({
	    api: { adapters: [], selectedAdapter: null },
	    adapters: (0, _immutable.List)(),
	    adapterStatus: DEFAULT_ADAPTER_STATUS,
	    adapterIndicator: 'off',
	    selectedAdapter: null, // Index of selected adapter in .adapters (not api.adapters)
	    autoConnUpdate: true,
	    ignoredDeviceAddresses: (0, _immutable.Set)(),
	    errors: (0, _immutable.List)()
	});
	
	function getImmutableRoot() {
	    return new ImmutableRoot();
	}
	
	function getSelectedAdapter(state) {
	    return {
	        adapter: state.getIn(['adapters', state.selectedAdapter]),
	        index: state.selectedAdapter
	    };
	}
	
	function addAdapter(state, adapter) {
	    state.api.adapters.push(adapter);
	    return state.set('adapters', state.adapters.push(apiHelper.getImmutableAdapter(adapter)));
	}
	
	function removeAdapter(state, adapter) {
	    const adapterIndex = state.api.adapters.indexOf(adapter);
	
	    if (adapterIndex === -1) {
	        _logging.logger.error(`You removed an adapter I did not know about: ${adapter.adapterStatus.port}.`);
	        return state;
	    }
	
	    state.api.adapters.splice(adapterIndex, 1);
	
	    if (adapterIndex === state.selectedAdapter) {
	        state = state.set('adapterIndicator', 'off');
	        state = state.set('selectedAdapter', null);
	        state = state.set('adapterStatus', DEFAULT_ADAPTER_STATUS);
	    } else if (adapterIndex < state.selectedAdapter) {
	        state = state.set('selectedAdapter', state.selectedAdapter - 1);
	    }
	
	    state = state.deleteIn(['adapters', adapterIndex]);
	
	    return state;
	}
	
	function openAdapter(state, adapter) {
	    _logging.logger.info(`Opening adapter connected to ${adapter.state.port}`);
	    state = state.set('adapterStatus', adapter.state.port);
	    return state;
	}
	
	function adapterOpened(state, adapter) {
	    _logging.logger.info(`Adapter connected to ${adapter.state.port} opened`);
	
	    // Since we maintain state.api.adapters and state.adapters simultaneously
	    // we use adapter index from state.api.adapters to access the "same" adapter
	    // in state.adapters
	    const adapterIndex = state.api.adapters.indexOf(adapter);
	
	    state.api.selectedAdapter = adapter;
	
	    state = state.set('selectedAdapter', adapterIndex);
	    state = state.set('adapterStatus', adapter.state.port);
	    state = state.set('adapterIndicator', 'on');
	
	    return state;
	}
	
	function adapterStateChanged(state, adapter, adapterState) {
	    const adapterIndex = state.api.adapters.indexOf(adapter);
	
	    const immutableState = apiHelper.getImmutableAdapterState(adapterState);
	    state = state.setIn(['adapters', adapterIndex, 'state'], immutableState);
	
	    return state;
	}
	
	function closeAdapter(state, adapter) {
	    state.api.selectedAdapter = null;
	
	    const index = state.api.adapters.indexOf(adapter);
	    state = state.setIn(['adapters', index, 'isServerSetupApplied'], false);
	    state = state.updateIn(['adapters', index, 'connectedDevices'], connectedDevices => connectedDevices.clear());
	
	    state = state.set('adapterIndicator', 'off');
	    state = state.set('selectedAdapter', null);
	    state = state.set('adapterStatus', DEFAULT_ADAPTER_STATUS);
	
	    return state;
	}
	
	function adapterError(state, adapter, error) {
	    _logging.logger.error(`Error on adapter ${adapter.state.port}: ${error.message}`);
	    _logging.logger.debug(error.description);
	
	    state.api.selectedAdapter = null;
	    state = state.set('adapterStatus', 'Error connecting');
	    state = state.set('adapterIndicator', 'error');
	    state = state.set('selectedAdapter', null);
	    state = state.set('errors', state.errors.push(error.message));
	
	    return state;
	}
	
	function adapterResetPerformed(state, adapter) {
	    _logging.logger.info(`Reset performed on adapter ${adapter.state.port}`);
	
	    var _getSelectedAdapter = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter.index;
	
	    if (index !== undefined && index !== null) {
	        state = state.setIn(['adapters', index, 'isServerSetupApplied'], false);
	        state = state.updateIn(['adapters', index, 'connectedDevices'], connectedDevices => connectedDevices.clear());
	    }
	
	    return state;
	}
	
	function adapterScanTimeout(state, adapter) {
	    _logging.logger.info(`Scanning timed out on adapter ${adapter.state.port}`);
	    return state;
	}
	
	function adapterAdvertisementTimeout(state, adapter) {
	    _logging.logger.info(`Advertisement timed out on adapter ${adapter.state.port}`);
	    return state;
	}
	
	function deviceConnect(state, device) {
	    _logging.logger.info('Connecting to device');
	    return state;
	}
	
	function deviceConnected(state, device) {
	    if (device.address === undefined) {
	        return state;
	    }
	
	    _logging.logger.info(`Connected to device ${device.address}`);
	
	    const _device = apiHelper.getImmutableDevice(device);
	
	    var _getSelectedAdapter2 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter2.index;
	
	
	    state = state.updateIn(['adapters', index, 'connectedDevices'], connectedDevices => connectedDevices.set(_device.instanceId, _device));
	
	    const bonded = state.getIn(['adapters', index, 'security', 'bondStore', device.address]);
	    if (bonded) {
	        state = state.setIn(['adapters', index, 'connectedDevices', _device.instanceId, 'bonded'], true);
	    }
	
	    return state;
	}
	
	function deviceConnectCanceled(state) {
	    _logging.logger.info('Connect canceled');
	    return state;
	}
	
	function connectedDeviceUpdated(state, device) {
	    if (device.address === undefined) {
	        return state;
	    }
	
	    _logging.logger.info(`Connection parameters updated for device ${device.address}: interval ${device.minConnectionInterval}ms, timeout ${device.connectionSupervisionTimeout}ms, latency: ${device.slaveLatency}`);
	
	    var _getSelectedAdapter3 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter3.index;
	
	
	    const nodePath = ['adapters', index, 'connectedDevices', device.instanceId];
	    state = state.setIn(nodePath.concat('minConnectionInterval'), device.minConnectionInterval);
	    state = state.setIn(nodePath.concat('maxConnectionInterval'), device.maxConnectionInterval);
	    state = state.setIn(nodePath.concat('slaveLatency'), device.slaveLatency);
	    state = state.setIn(nodePath.concat('connectionSupervisionTimeout'), device.connectionSupervisionTimeout);
	    return state;
	}
	
	function deviceDisconnected(state, device, reason) {
	    _logging.logger.info(`Disconnected from device ${device.address}, reason: ${reason}`);
	
	    var _getSelectedAdapter4 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter4.index;
	
	    return state.deleteIn(['adapters', index, 'connectedDevices', device.instanceId]);
	}
	
	function deviceInitiatePairing(state, device) {
	    _logging.logger.info(`Pairing initiated`);
	    return state;
	}
	
	function deviceSecurityChanged(state, device, parameters) {
	    if (device.address === undefined) {
	        return state;
	    }
	
	    var _getSelectedAdapter5 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter5.index;
	
	
	    _logging.logger.info(`Security updated, mode:${parameters.securityMode}, level:${parameters.securityLevel} `);
	
	    state = state.setIn(['adapters', index, 'connectedDevices', device.instanceId, 'securityMode'], parameters.securityMode);
	    state = state.setIn(['adapters', index, 'connectedDevices', device.instanceId, 'securityLevel'], parameters.securityLevel);
	
	    return state;
	}
	
	function disableDeviceEvents(state, deviceAddress) {
	    return state.set('ignoredDeviceAddresses', state.ignoredDeviceAddresses.add(deviceAddress));
	}
	
	function enableDeviceEvents(state, deviceAddress) {
	    return state.set('ignoredDeviceAddresses', state.ignoredDeviceAddresses.remove(deviceAddress));
	}
	
	function bondStoreUpdated(state) {
	    var _getSelectedAdapter6 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter6.index;
	
	
	    const devices = state.getIn(['adapters', index, 'connectedDevices']);
	
	    devices.map(device => {
	        const bonded = state.getIn(['adapters', index, 'security', 'bondStore', device.address]) ? true : false;
	        state = state.setIn(['adapters', index, 'connectedDevices', device.instanceId, 'bonded'], bonded);
	    });
	
	    return state;
	}
	
	function discoveredDeviceName(state, device, value) {
	    if (!value) {
	        return state;
	    }
	
	    if (device.address === undefined) {
	        return state;
	    }
	
	    const nameBuffer = new Buffer(value);
	    const name = nameBuffer.toString('utf8');
	
	    var _getSelectedAdapter7 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter7.index;
	
	
	    state = state.setIn(['adapters', index, 'connectedDevices', device.instanceId, 'name'], name);
	    return state;
	}
	
	function addError(state, error) {
	    if (error.message === undefined) {
	        console.log(`Error does not contain a message! Something is wrong!`);
	        return state;
	    }
	
	    _logging.logger.error(error.message);
	
	    if (error.description) {
	        _logging.logger.debug(error.description);
	    }
	
	    state = state.update('errors', errors => errors.push(error.message));
	    return state;
	}
	
	function toggleAutoConnUpdate(state) {
	    return state.set('autoConnUpdate', !state.autoConnUpdate);
	}
	
	function addBondInfo(state, device, params) {
	    var _getSelectedAdapter8 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter8.index;
	
	    state = state.setIn(['adapters', index, 'connectedDevices', device.instanceId, 'bonded'], true);
	    return state;
	}
	
	function deleteBondInfo(state) {
	    var _getSelectedAdapter9 = getSelectedAdapter(state);
	
	    const index = _getSelectedAdapter9.index;
	
	
	    const devices = state.getIn(['adapters', index, 'connectedDevices']);
	
	    devices.map(device => {
	        state = state.setIn(['adapters', index, 'connectedDevices', device.instanceId, 'bonded'], false);
	    });
	
	    return state;
	}
	
	function serverSetupApplied(state) {
	    var _getSelectedAdapter10 = getSelectedAdapter(state);
	
	    const adapter = _getSelectedAdapter10.adapter,
	          index = _getSelectedAdapter10.index;
	
	
	    return state.setIn(['adapters', index, 'isServerSetupApplied'], true);
	}
	
	function adapter() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getImmutableRoot();
	    let action = arguments[1];
	
	    const adapterSubReducers = (0, _redux.combineReducers)({
	        deviceDetails: _deviceDetailsReducer2.default,
	        serverSetup: _serverSetupReducer2.default,
	        security: _securityReducer2.default
	    });
	
	    if (state.selectedAdapter !== undefined && state.selectedAdapter !== null) {
	        const selectedAdapter = state.getIn(['adapters', state.selectedAdapter]);
	
	        if (selectedAdapter) {
	            const newSubReducerStates = adapterSubReducers({
	                deviceDetails: selectedAdapter.deviceDetails,
	                serverSetup: selectedAdapter.serverSetup,
	                security: selectedAdapter.security
	            }, action);
	
	            state = state.mergeIn(['adapters', state.selectedAdapter], newSubReducerStates);
	        }
	    }
	
	    switch (action.type) {
	        case AdapterAction.ADAPTER_OPEN:
	            return openAdapter(state, action.adapter);
	        case AdapterAction.ADAPTER_OPENED:
	            return adapterOpened(state, action.adapter);
	        case AdapterAction.ADAPTER_CLOSED:
	            return closeAdapter(state, action.adapter);
	        case AdapterAction.ADAPTER_ADDED:
	            return addAdapter(state, action.adapter);
	        case AdapterAction.ADAPTER_REMOVED:
	            return removeAdapter(state, action.adapter);
	        case AdapterAction.ADAPTER_ERROR:
	            return adapterError(state, action.adapter, action.error);
	        case AdapterAction.ADAPTER_STATE_CHANGED:
	            return adapterStateChanged(state, action.adapter, action.state);
	        case AdapterAction.ADAPTER_RESET_PERFORMED:
	            return adapterResetPerformed(state, action.adapter);
	        case AdapterAction.ADAPTER_SCAN_TIMEOUT:
	            return adapterScanTimeout(state, action.adapter);
	        case AdapterAction.ADAPTER_ADVERTISEMENT_TIMEOUT:
	            return adapterAdvertisementTimeout(state, action.adapter);
	        case AdapterAction.ERROR_OCCURED:
	            return addError(state, action.error);
	        case AdapterAction.DEVICE_CONNECT:
	            return deviceConnect(state, action.device);
	        case AdapterAction.DEVICE_CONNECTED:
	            return deviceConnected(state, action.device);
	        case AdapterAction.DEVICE_CONNECT_CANCELED:
	            return deviceConnectCanceled(state);
	        case AdapterAction.DEVICE_DISCONNECTED:
	            return deviceDisconnected(state, action.device, action.reason);
	        case AdapterAction.DEVICE_INITIATE_PAIRING:
	            return deviceInitiatePairing(state, action.device);
	        case AdapterAction.DEVICE_CONNECTION_PARAMS_UPDATED:
	            return connectedDeviceUpdated(state, action.device);
	        case AdapterAction.DEVICE_SECURITY_CHANGED:
	            return deviceSecurityChanged(state, action.device, action.parameters);
	        case AdapterAction.DEVICE_TOGGLE_AUTO_CONN_UPDATE:
	            return toggleAutoConnUpdate(state);
	        case AdapterAction.DEVICE_ADD_BOND_INFO:
	            return addBondInfo(state, action.device, action.parameters);
	        case AdapterAction.DEVICE_DISABLE_EVENTS:
	            return disableDeviceEvents(state, action.deviceAddress);
	        case AdapterAction.DEVICE_ENABLE_EVENTS:
	            return enableDeviceEvents(state, action.deviceAddress);
	        case SecurityActions.SECURITY_DELETE_BOND_INFO:
	            return deleteBondInfo(state);
	        case DeviceDetailsActions.DISCOVERED_DEVICE_NAME:
	            return discoveredDeviceName(state, action.device, action.value);
	        case ServerSetupActions.APPLIED_SERVER:
	            return serverSetupApplied(state, action.adapter);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = advertising;
	
	var _immutable = __webpack_require__(5);
	
	var _advertisingActions = __webpack_require__(15);
	
	var advertisingActions = _interopRequireWildcard(_advertisingActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterAction = _interopRequireWildcard(_adapterActions);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const defaultAdvData = [{
	    type: 'Complete local name',
	    typeKey: 0,
	    typeApi: 'completeLocalName',
	    value: 'nRF Connect',
	    formattedValue: 'nRF Connect',
	    id: 10000 }];
	
	const InitialState = (0, _immutable.Record)({
	    advDataEntries: (0, _immutable.List)(defaultAdvData),
	    scanResponseEntries: (0, _immutable.List)(),
	    tempAdvDataEntries: (0, _immutable.List)(defaultAdvData),
	    tempScanRespEntries: (0, _immutable.List)(),
	    show: false,
	    setAdvdataStatus: ''
	});
	
	const initialState = new InitialState();
	
	function advertising() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case advertisingActions.ADD_ADVDATA_ENTRY:
	            return state.set('tempAdvDataEntries', state.tempAdvDataEntries.push(action.entry));
	        case advertisingActions.ADD_SCANRSP_ENTRY:
	            return state.set('tempScanRespEntries', state.tempScanRespEntries.push(action.entry));
	        case advertisingActions.DELETE_ADVDATA_ENTRY:
	            return state.set('tempAdvDataEntries', state.tempAdvDataEntries.filterNot(entry => entry.id === action.id));
	        case advertisingActions.DELETE_SCANRSP_ENTRY:
	            return state.set('tempScanRespEntries', state.tempScanRespEntries.filterNot(entry => entry.id === action.id));
	        case advertisingActions.APPLY_CHANGES:
	            state = state.set('advDataEntries', state.tempAdvDataEntries);
	            state = state.set('scanResponseEntries', state.tempScanRespEntries);
	            return state;
	        case advertisingActions.SHOW_DIALOG:
	            return state.set('show', true);
	        case advertisingActions.HIDE_DIALOG:
	            state = state.set('tempAdvDataEntries', state.advDataEntries);
	            state = state.set('tempScanRespEntries', state.scanResponseEntries);
	            state = state.set('show', false);
	            return state;
	        case advertisingActions.SET_ADVDATA_COMPLETED:
	            return state.set('setAdvdataStatus', action.status);
	        case advertisingActions.ADVERTISING_STARTED:
	            _logging.logger.info('Advertising started');
	            return state;
	        case advertisingActions.ADVERTISING_STOPPED:
	            _logging.logger.info('Advertising stopped');
	            return state;
	        case AdapterAction.ADAPTER_RESET_PERFORMED:
	            return initialState;
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = app;
	
	var _immutable = __webpack_require__(5);
	
	var _appActions = __webpack_require__(37);
	
	var AppActions = _interopRequireWildcard(_appActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    selectedMainView: 'ConnectionMap'
	});
	
	const initialState = new InitialState();
	
	function app() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case AppActions.SELECT_MAIN_VIEW:
	            return state.set('selectedMainView', action.view);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = bleEvent;
	
	var _bleEventActions = __webpack_require__(25);
	
	var BLEEventActions = _interopRequireWildcard(_bleEventActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _common = __webpack_require__(11);
	
	var _api = __webpack_require__(9);
	
	var apiHelper = _interopRequireWildcard(_api);
	
	var _securityReducer = __webpack_require__(50);
	
	var _immutable = __webpack_require__(5);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    visible: false,
	    events: (0, _immutable.Map)(),
	    selectedEventId: -1
	});
	
	const initialState = new InitialState();
	
	const Event = (0, _immutable.Record)({
	    id: null,
	    type: null,
	    device: null,
	    requestedConnectionParams: null,
	    pairingParameters: null,
	    authKeyParams: null,
	    ownOobData: null,
	    state: _common.BLEEventState.UNKNOWN,
	    receiveKeypressEnabled: false,
	    keypressStartReceived: false,
	    keypressEndReceived: false,
	    sendKeypressEnabled: false,
	    keypressStartSent: false,
	    keypressEndSent: false,
	    keypressCount: 0
	});
	
	const ConnectionParameters = (0, _immutable.Record)({
	    connectionSupervisionTimeout: 0,
	    maxConnectionInterval: 0,
	    minConnectionInterval: 0,
	    slaveLatency: 0
	});
	
	const PairingParameters = (0, _immutable.Record)({
	    ioCapabilities: 'keyboardAndDisplay',
	    authentication: 'noAuth',
	    bond: false
	});
	
	const AuthKeyParameters = (0, _immutable.Record)({
	    passkey: ''
	});
	
	// Module local variable that is used to generate a unique ID for all events that are
	// added by the user or by incoming connection parameter update requests.
	let eventIndex = 0;
	
	function resetSelectedEventIdAndEventIndex(state) {
	    eventIndex = 0;
	    return state.set('selectedEventId', -1);
	}
	
	function showDialog(state, visible) {
	    return state.set('visible', visible);
	}
	
	function clearAllEvents(state) {
	    state = resetSelectedEventIdAndEventIndex(state);
	    return state.set('events', state.events.clear());
	}
	
	function connectionUpdateParamRequest(state, device, requestedConnectionParams) {
	    const connectionParams = new ConnectionParameters({
	        connectionSupervisionTimeout: requestedConnectionParams.connectionSupervisionTimeout,
	        maxConnectionInterval: requestedConnectionParams.maxConnectionInterval,
	        minConnectionInterval: requestedConnectionParams.minConnectionInterval,
	        slaveLatency: requestedConnectionParams.slaveLatency
	    });
	
	    const type = device.role === 'central' ? _common.BLEEventType.PEER_CENTRAL_INITIATED_CONNECTION_UPDATE : _common.BLEEventType.PEER_PERIPHERAL_INITIATED_CONNECTION_UPDATE;
	
	    const event = new Event({
	        type,
	        device: apiHelper.getImmutableDevice(device),
	        requestedConnectionParams: connectionParams,
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function updateEventStatus(state, eventId, eventState) {
	    if (eventId < 0) {
	        return state;
	    }
	
	    state = state.setIn(['events', eventId, 'state'], eventState);
	    return state;
	}
	
	function selectEventId(state, selectedEventId) {
	    return state.set('selectedEventId', selectedEventId);
	}
	
	function passkeyKeypressReceived(state, device, keypressType) {
	    const events = state.events.filter((value, index) => value.state === _common.BLEEventState.INDETERMINATE && value.device.instanceId === device.instanceId);
	
	    events.forEach(event => {
	        if (event.type === _common.BLEEventType.PASSKEY_DISPLAY && event.receiveKeypressEnabled === true) {
	            state = updateEventKeypressCount(state, event.id, keypressType);
	        }
	    });
	
	    return state;
	}
	
	function updateEventKeypressCount(state, eventId, keypressType) {
	    if (eventId < 0) {
	        return state;
	    }
	
	    let keypressCount = state.getIn(['events', eventId, 'keypressCount']);
	
	    switch (keypressType) {
	        case 'BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN':
	            keypressCount++;
	            break;
	        case 'BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT':
	            keypressCount--;
	            break;
	        case 'BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR':
	            keypressCount = 0;
	            break;
	        case 'BLE_GAP_KP_NOT_TYPE_PASSKEY_START':
	            state = state.setIn(['events', eventId, 'keypressStartReceived'], true);
	            break;
	        case 'BLE_GAP_KP_NOT_TYPE_PASSKEY_END':
	            state = state.setIn(['events', eventId, 'keypressEndReceived'], true);
	            break;
	    }
	
	    return state.setIn(['events', eventId, 'keypressCount'], keypressCount);
	}
	
	function deviceDisconnected(state, device) {
	    // Find given device event that has state INDETERMINATE and set it to DISCONNECTED
	    const events = state.events.filter((value, index) => value.state === _common.BLEEventState.INDETERMINATE && value.device.instanceId === device.instanceId);
	
	    events.forEach(event => {
	        state = updateEventStatus(state, event.id, _common.BLEEventState.DISCONNECTED);
	    });
	
	    return state;
	}
	
	function ignoreEvent(state, eventId) {
	    return state.setIn(['events', eventId, 'state'], _common.BLEEventState.IGNORED);
	}
	
	function acceptEvent(state, eventId) {
	    return state.setIn(['events', eventId, 'state'], _common.BLEEventState.SUCCESS);
	}
	
	function removeEvent(state, eventId) {
	    if (state.selectedEventId === eventId) {
	        state = state.set('selectedEventId', -1);
	    }
	
	    return state.deleteIn(['events', eventId]);
	}
	
	function createUserInitiatedConnParamsUpdateEvent(state, device) {
	    // Information regarding BLE parameters are taken from:
	    // https://developer.bluetooth.org/gatt/characteristics/Pages/CharacteristicViewer.aspx?u=org.bluetooth.characteristic.gap.peripheral_preferred_connection_parameters.xml
	    const initialConnectionParams = new ConnectionParameters({
	        connectionSupervisionTimeout: device.connectionSupervisionTimeout,
	        maxConnectionInterval: device.maxConnectionInterval,
	        minConnectionInterval: device.minConnectionInterval,
	        slaveLatency: device.slaveLatency
	    });
	
	    const event = new Event({
	        type: _common.BLEEventType.USER_INITIATED_CONNECTION_UPDATE,
	        device: apiHelper.getImmutableDevice(device),
	        requestedConnectionParams: initialConnectionParams,
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function securityRequest(state, device, secParams) {
	    const immutableSecParams = (0, _securityReducer.getImmutableSecurityParameters)(secParams);
	
	    const event = new Event({
	        type: _common.BLEEventType.PEER_INITIATED_PAIRING,
	        device: apiHelper.getImmutableDevice(device),
	        pairingParameters: immutableSecParams,
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function passkeyDisplay(state, device, matchRequest, passkey, receiveKeypress) {
	    const eventType = matchRequest ? _common.BLEEventType.NUMERICAL_COMPARISON : _common.BLEEventType.PASSKEY_DISPLAY;
	
	    const keyParams = new AuthKeyParameters({
	        passkey: passkey
	    });
	
	    const event = new Event({
	        type: eventType,
	        device: apiHelper.getImmutableDevice(device),
	        authKeyParams: keyParams,
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE,
	        receiveKeypressEnabled: receiveKeypress
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function passkeyKeypressSent(state, eventId, keypressType) {
	    if (eventId < 0) {
	        return state;
	    }
	
	    let keypressCount = state.getIn(['events', eventId, 'keypressCount']);
	
	    if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_START') {
	        return state.setIn(['events', eventId, 'keypressStartSent'], true);
	    } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_END') {
	        return state.setIn(['events', eventId, 'keypressEndSent'], true);
	    } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_IN') {
	        return state.setIn(['events', eventId, 'keypressCount'], ++keypressCount);
	    } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_DIGIT_OUT') {
	        return state.setIn(['events', eventId, 'keypressCount'], --keypressCount);
	    } else if (keypressType === 'BLE_GAP_KP_NOT_TYPE_PASSKEY_CLEAR') {
	        return state.setIn(['events', eventId, 'keypressCount'], 0);
	    }
	
	    return state;
	}
	
	function authKeyRequest(state, device, keyType, sendKeypress) {
	    const eventType = keyType === 'BLE_GAP_AUTH_KEY_TYPE_PASSKEY' ? _common.BLEEventType.PASSKEY_REQUEST : keyType === 'BLE_GAP_AUTH_KEY_TYPE_OOB' ? _common.BLEEventType.LEGACY_OOB_REQUEST : null;
	
	    const event = new Event({
	        type: eventType,
	        device: apiHelper.getImmutableDevice(device),
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE,
	        sendKeypressEnabled: sendKeypress
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function lescOobRequest(state, device, ownOobData) {
	    const event = new Event({
	        type: _common.BLEEventType.LESC_OOB_REQUEST,
	        device: apiHelper.getImmutableDevice(device),
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE,
	        ownOobData: ownOobData
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function createUserInitiatedPairingEvent(state, device, defaultSecParams) {
	    const immutableSecParams = (0, _securityReducer.getImmutableSecurityParameters)(defaultSecParams);
	    console.log(`PairingParameters: ${JSON.stringify(immutableSecParams)}`);
	
	    const event = new Event({
	        type: _common.BLEEventType.USER_INITIATED_PAIRING,
	        device: apiHelper.getImmutableDevice(device),
	        pairingParameters: immutableSecParams,
	        id: eventIndex,
	        state: _common.BLEEventState.INDETERMINATE
	    });
	
	    let newState = state.setIn(['events', eventIndex], event);
	    newState = newState.set('selectedEventId', eventIndex);
	    newState = newState.set('visible', true);
	    eventIndex++;
	
	    return newState;
	}
	
	function authErrorOccured(state, device) {
	    if (!device) {
	        return state;
	    }
	
	    // Find given device event that has state INDETERMINATE and set it to ERROR
	    const events = state.events.filter((value, index) => (value.state === _common.BLEEventState.INDETERMINATE || value.state === _common.BLEEventState.PENDING) && value.device.instanceId === device.instanceId);
	
	    events.forEach(event => {
	        state = updateEventStatus(state, event.id, _common.BLEEventState.ERROR);
	    });
	
	    return state;
	}
	
	function authSuccessOccured(state, device) {
	    if (!device) {
	        return state;
	    }
	
	    // Find given device event that has state INDETERMINATE and set it to ERROR
	    const events = state.events.filter((value, index) => (value.state === _common.BLEEventState.INDETERMINATE || value.state === _common.BLEEventState.PENDING) && value.device.instanceId === device.instanceId);
	
	    events.forEach(event => {
	        state = updateEventStatus(state, event.id, _common.BLEEventState.SUCCESS);
	    });
	
	    return state;
	}
	
	function securityRequestTimedOut(state, device) {
	    return authErrorOccured(state, device);
	}
	
	function bleEvent() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case BLEEventActions.BLE_EVENT_SHOW_DIALOG:
	            return showDialog(state, action.visible);
	        case BLEEventActions.BLE_EVENT_CLEAR_ALL_EVENTS:
	            return clearAllEvents(state);
	        case BLEEventActions.BLE_EVENT_SELECT_EVENT_ID:
	            return selectEventId(state, action.selectedEventId);
	        case BLEEventActions.BLE_EVENT_IGNORE:
	            return ignoreEvent(state, action.eventId);
	        case BLEEventActions.BLE_EVENT_ACCEPT:
	            return acceptEvent(state, action.eventId);
	        case BLEEventActions.BLE_EVENT_CREATE_USER_INITIATED_CONN_PARAMS_UPDATE_EVENT:
	            return createUserInitiatedConnParamsUpdateEvent(state, action.device);
	        case BLEEventActions.BLE_EVENT_CREATE_USER_INITIATED_PAIRING_EVENT:
	            return createUserInitiatedPairingEvent(state, action.device, action.defaultSecParams);
	        case BLEEventActions.BLE_EVENT_REMOVE:
	            return removeEvent(state, action.eventId);
	        case AdapterActions.DEVICE_CONNECTION_PARAM_UPDATE_REQUEST:
	            return connectionUpdateParamRequest(state, action.device, action.requestedConnectionParams);
	        case AdapterActions.DEVICE_SECURITY_REQUEST:
	            return securityRequest(state, action.device, action.params);
	        case AdapterActions.DEVICE_PASSKEY_DISPLAY:
	            return passkeyDisplay(state, action.device, action.matchRequest, action.passkey, action.receiveKeypress);
	        case AdapterActions.DEVICE_PASSKEY_KEYPRESS_SENT:
	            return passkeyKeypressSent(state, action.eventId, action.keypressType);
	        case AdapterActions.DEVICE_PASSKEY_KEYPRESS_RECEIVED:
	            return passkeyKeypressReceived(state, action.device, action.keypressType);
	        case AdapterActions.DEVICE_AUTHKEY_REQUEST:
	            return authKeyRequest(state, action.device, action.keyType, action.sendKeypress);
	        case AdapterActions.DEVICE_LESC_OOB_REQUEST:
	            return lescOobRequest(state, action.device, action.ownOobData);
	        case AdapterActions.DEVICE_AUTHKEY_STATUS:
	            return updateEventStatus(state, action.id, action.status);
	        case AdapterActions.DEVICE_AUTH_ERROR_OCCURED:
	            return authErrorOccured(state, action.device);
	        case AdapterActions.DEVICE_AUTH_SUCCESS_OCCURED:
	            return authSuccessOccured(state, action.device);
	        case AdapterActions.DEVICE_PAIRING_STATUS:
	            return updateEventStatus(state, action.id, action.status);
	        case AdapterActions.DEVICE_SECURITY_REQUEST_TIMEOUT:
	            return securityRequestTimedOut(state, action.device);
	        case AdapterActions.DEVICE_CONNECTION_PARAM_UPDATE_STATUS:
	            return updateEventStatus(state, action.id, action.status);
	        case AdapterActions.DEVICE_DISCONNECTED:
	            return deviceDisconnected(state, action.device);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = deviceDetails;
	
	var _immutable = __webpack_require__(5);
	
	var _deviceDetailsActions = __webpack_require__(16);
	
	var DeviceDetailsActions = _interopRequireWildcard(_deviceDetailsActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterActions = _interopRequireWildcard(_adapterActions);
	
	var _serverSetupActions = __webpack_require__(18);
	
	var ServerSetupActions = _interopRequireWildcard(_serverSetupActions);
	
	var _api = __webpack_require__(9);
	
	var _uuid_definitions = __webpack_require__(10);
	
	var _stringUtil = __webpack_require__(14);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    selectedComponent: null,
	    devices: (0, _immutable.OrderedMap)()
	});
	
	const DeviceDetail = (0, _immutable.Record)({
	    discoveringChildren: false,
	    children: null
	});
	
	function getInitialGapServiceCharacteristics(gapInstanceId) {
	    let characteristicInstanceIdCounter = 0;
	
	    const deviceNameCharacteristic = (0, _api.getImmutableCharacteristic)({
	        instanceId: gapInstanceId + '.' + characteristicInstanceIdCounter++,
	        name: 'Device Name',
	        uuid: '2A00',
	        value: [0x6E, 0x52, 0x46, 0x35, 0x75], // nRF5x
	        properties: { read: true, write: false },
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    const appearanceCharacteristic = (0, _api.getImmutableCharacteristic)({
	        instanceId: gapInstanceId + '.' + characteristicInstanceIdCounter++,
	        name: 'Appearance',
	        uuid: '2A01',
	        value: [0x00, 0x00],
	        properties: { read: true },
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    const ppcpCharacteristic = (0, _api.getImmutableCharacteristic)({
	        instanceId: gapInstanceId + '.' + characteristicInstanceIdCounter++,
	        name: 'Peripheral Preferred Connection Parameters',
	        uuid: '2A04',
	        value: [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF], // no specific minimum/maximum interval and timeout, 0 slave latency
	        properties: { read: true },
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    let characteristics = (0, _immutable.OrderedMap)();
	    characteristics = characteristics.set(deviceNameCharacteristic.instanceId, deviceNameCharacteristic);
	    characteristics = characteristics.set(appearanceCharacteristic.instanceId, appearanceCharacteristic);
	    characteristics = characteristics.set(ppcpCharacteristic.instanceId, ppcpCharacteristic);
	
	    return characteristics;
	}
	
	function getInitialLocalServer() {
	    let serviceInstanceIdCounter = 0;
	    const gapInstanceId = 'local.server' + '.' + serviceInstanceIdCounter++;
	
	    const gapService = (0, _api.getImmutableService)({
	        instanceId: gapInstanceId,
	        name: 'Generic Access',
	        uuid: '1800',
	        children: getInitialGapServiceCharacteristics(gapInstanceId)
	    });
	    const gattService = (0, _api.getImmutableService)({
	        instanceId: 'local.server' + '.' + serviceInstanceIdCounter++,
	        name: 'Generic Attribute',
	        uuid: '1801',
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    let localServerChildren = (0, _immutable.OrderedMap)();
	    localServerChildren = localServerChildren.set(gapService.instanceId, gapService);
	    localServerChildren = localServerChildren.set(gattService.instanceId, gattService);
	
	    return new DeviceDetail({ children: localServerChildren });
	}
	
	const initialState = new InitialState({ selectedComponent: null, devices: (0, _immutable.OrderedMap)({ 'local.server': getInitialLocalServer() }) });
	
	function getNodeStatePath(instanceId) {
	    const nodeInstanceIds = (0, _api.getInstanceIds)(instanceId);
	    const nodeStatePath = ['devices', nodeInstanceIds.device];
	
	    if (nodeInstanceIds.service) {
	        nodeStatePath.push('children', nodeInstanceIds.service);
	    }
	
	    if (nodeInstanceIds.characteristic) {
	        nodeStatePath.push('children', nodeInstanceIds.characteristic);
	    }
	
	    if (nodeInstanceIds.descriptor) {
	        nodeStatePath.push('children', nodeInstanceIds.descriptor);
	    }
	
	    return nodeStatePath;
	}
	
	function discoveringAttributes(state, parent) {
	    const parentStatePath = getNodeStatePath(parent.instanceId);
	    return state.setIn(parentStatePath.concat('discoveringChildren'), true);
	}
	
	function discoveredAttributes(state, parent, attributes) {
	    const parentStatePath = getNodeStatePath(parent.instanceId);
	    state = state.setIn(parentStatePath.concat('discoveringChildren'), false);
	
	    if (!attributes) {
	        return state;
	    }
	
	    state = state.setIn(parentStatePath.concat('children'), (0, _immutable.OrderedMap)());
	
	    if (attributes.length === 0) {
	        return state.setIn(parentStatePath.concat('expanded'), false);
	    }
	
	    for (let attribute of attributes) {
	        const attributeInstanceIds = (0, _api.getInstanceIds)(attribute.instanceId);
	        const attributeStatePath = getNodeStatePath(attribute.instanceId);
	        let immutableAttribute = null;
	        attribute.name = (0, _uuid_definitions.getUuidName)(attribute.uuid);
	
	        if (attributeInstanceIds.descriptor) {
	            immutableAttribute = (0, _api.getImmutableDescriptor)(attribute);
	        } else if (attributeInstanceIds.characteristic) {
	            immutableAttribute = (0, _api.getImmutableCharacteristic)(attribute);
	        } else if (attributeInstanceIds.service) {
	            immutableAttribute = (0, _api.getImmutableService)(attribute);
	        }
	
	        state = state.setIn(attributeStatePath, immutableAttribute);
	    }
	
	    return state;
	}
	
	function formatErrorMessage(message) {
	    if (typeof message !== 'string') {
	        return '';
	    }
	
	    return message.replace('BLE_GATT_STATUS_ATTERR_INSUF_AUTHENTICATION', 'Insufficient authentication').replace('BLE_GATT_STATUS_ATTERR_WRITE_NOT_PERMITTED', 'Write not permitted').replace('BLE_GATT_STATUS_ATTERR_READ_NOT_PERMITTED', 'Read not permitted').replace('BLE_GATT_STATUS_ATTERR_INVALID_ATT_VAL_LENGTH', 'Invalid length').replace('BLE_GATT_STATUS_', '');
	}
	
	function completedReadingAttribute(state, attribute, value, error) {
	    if (!attribute) {
	        return state;
	    }
	
	    const attributeStatePath = getNodeStatePath(attribute.instanceId);
	
	    let errorMessage = '';
	    if (error) {
	        errorMessage = formatErrorMessage(error.message);
	    } else {
	        const handle = attribute.valueHandle ? attribute.valueHandle : attribute.handle;
	        _logging.logger.info(`Attribute value read, handle: 0x${(0, _stringUtil.toHexString)(handle)}, value (0x): ${(0, _stringUtil.toHexString)(value)}`);
	    }
	
	    state = state.setIn(attributeStatePath.concat('errorMessage'), errorMessage);
	
	    if (!value) {
	        return state;
	    }
	
	    return state.setIn(attributeStatePath.concat('value'), (0, _immutable.List)(value));
	}
	
	function completedWritingAttribute(state, attribute, value, error) {
	    if (!attribute) {
	        return state;
	    }
	
	    const attributeStatePath = getNodeStatePath(attribute.instanceId);
	
	    let errorMessage = '';
	    if (error) {
	        errorMessage = formatErrorMessage(error.message);
	    } else {
	        const handle = attribute.valueHandle ? attribute.valueHandle : attribute.handle;
	        _logging.logger.info(`Attribute value written, handle: 0x${(0, _stringUtil.toHexString)(handle)}, value (0x): ${(0, _stringUtil.toHexString)(value)}`);
	    }
	
	    state = state.setIn(attributeStatePath.concat('errorMessage'), errorMessage);
	
	    if (!value) {
	        // If value is null the operation failed. Trigger a state change by setting
	        // the original value in a new List object.
	        const attributeInstanceIds = (0, _api.getInstanceIds)(attribute.instanceId);
	
	        let immutableAttribute = null;
	        if (attributeInstanceIds.descriptor) {
	            immutableAttribute = (0, _api.getImmutableDescriptor)(attribute);
	        } else if (attributeInstanceIds.characteristic) {
	            immutableAttribute = (0, _api.getImmutableCharacteristic)(attribute);
	        }
	
	        return state.setIn(attributeStatePath.concat('value'), immutableAttribute.value);
	    } else {
	        return state.setIn(attributeStatePath.concat('value'), (0, _immutable.List)(value));
	    }
	}
	
	function attributeValueChanged(state, attribute, value, error) {
	    if (!attribute) {
	        return state;
	    }
	
	    const attributeStatePath = getNodeStatePath(attribute.instanceId);
	    if (!state.hasIn(attributeStatePath)) {
	        return state;
	    }
	
	    let errorMessage = '';
	    if (error) {
	        errorMessage = formatErrorMessage(error.message);
	    }
	
	    state = state.setIn(attributeStatePath.concat('errorMessage'), errorMessage);
	
	    if (Array.isArray(value)) {
	        // Normal value
	        state = state.setIn(attributeStatePath.concat('value'), (0, _immutable.List)(value));
	    } else {
	        // CCCD or other per-connection based values.
	        let valueMap = (0, _immutable.Map)();
	        for (let connectedDeviceIds in value) {
	            valueMap = valueMap.set(connectedDeviceIds, (0, _immutable.List)(value[connectedDeviceIds]));
	        }
	
	        state = state.setIn(attributeStatePath.concat('value'), valueMap);
	    }
	
	    return state;
	}
	
	function appliedServerSetup(state, services) {
	    let localDeviceDetails = new DeviceDetail({ children: new _immutable.OrderedMap() });
	
	    for (let service of services) {
	        service.name = (0, _uuid_definitions.getUuidName)(service.uuid);
	        service.children = new _immutable.OrderedMap();
	        let immutableService = (0, _api.getImmutableService)(service);
	
	        if (service._factory_characteristics) {
	            for (let characteristic of service._factory_characteristics) {
	                characteristic.name = (0, _uuid_definitions.getUuidName)(characteristic.uuid);
	                characteristic.properties = characteristic.properties;
	                characteristic.children = new _immutable.OrderedMap();
	                let immutableCharacteristic = (0, _api.getImmutableCharacteristic)(characteristic);
	
	                if (characteristic._factory_descriptors) {
	                    for (let descriptor of characteristic._factory_descriptors) {
	                        descriptor.name = (0, _uuid_definitions.getUuidName)(descriptor.uuid);
	                        descriptor.children = new _immutable.OrderedMap();
	                        let immutableDescriptor = (0, _api.getImmutableDescriptor)(descriptor);
	                        immutableCharacteristic = immutableCharacteristic.setIn(['children', descriptor.instanceId], immutableDescriptor);
	                    }
	                }
	
	                immutableService = immutableService.setIn(['children', characteristic.instanceId], immutableCharacteristic);
	            }
	        }
	
	        localDeviceDetails = localDeviceDetails.setIn(['children', service.instanceId], immutableService);
	    }
	
	    return state.setIn(['devices', 'local.server'], localDeviceDetails);
	}
	
	function setAttributeExpanded(state, attribute, value) {
	    const expandedStatePath = getNodeStatePath(attribute.instanceId).concat('expanded');
	    return state.setIn(expandedStatePath, value);
	}
	
	function deviceDetails() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case DeviceDetailsActions.SELECT_COMPONENT:
	            return state.update('selectedComponent', selectedComponent => action.component);
	        case DeviceDetailsActions.DISCOVERING_ATTRIBUTES:
	            return discoveringAttributes(state, action.parent);
	        case DeviceDetailsActions.DISCOVERED_ATTRIBUTES:
	            return discoveredAttributes(state, action.parent, action.attributes);
	        case DeviceDetailsActions.SET_ATTRIBUTE_EXPANDED:
	            return setAttributeExpanded(state, action.attribute, action.value);
	        case DeviceDetailsActions.COMPLETED_READING_ATTRIBUTE:
	            return completedReadingAttribute(state, action.attribute, action.value, action.error);
	        case DeviceDetailsActions.COMPLETED_WRITING_ATTRIBUTE:
	            return completedWritingAttribute(state, action.attribute, action.value, action.error);
	        case ServerSetupActions.APPLIED_SERVER:
	            return appliedServerSetup(state, action.server);
	        case AdapterActions.ATTRIBUTE_VALUE_CHANGED:
	            return attributeValueChanged(state, action.attribute, action.value);
	        case AdapterActions.DEVICE_CONNECTED:
	            return state.setIn(['devices', action.device.instanceId], new DeviceDetail());
	        case AdapterActions.ADAPTER_CLOSED:
	        case AdapterActions.ADAPTER_RESET_PERFORMED:
	            return initialState;
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = app;
	
	var _immutable = __webpack_require__(5);
	
	var _dfuActions = __webpack_require__(26);
	
	var DfuActions = _interopRequireWildcard(_dfuActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 * All rights reserved.
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                 * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                 *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                 *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                 *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                 *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                 *   materials provided with the distribution.
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                 *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                 *   software without specific prior written permission.
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                 *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                 *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 *
	                                                                                                                                                                                                 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                 */
	
	const InitialState = (0, _immutable.Record)({
	    api: { dfu: null },
	    isDfuDialogVisible: false,
	    isConfirmCloseVisible: false,
	    isStarted: false,
	    isCompleted: false,
	    isStopping: false,
	    device: null,
	    filePath: '',
	    packageInfo: null,
	    status: '',
	    fileNameBeingTransferred: '',
	    percentCompleted: 0,
	    throughput: {
	        totalSizeKb: 0,
	        kbpsPoints: (0, _immutable.List)(),
	        averageKbpsPoints: (0, _immutable.List)()
	    }
	});
	
	const initialState = new InitialState();
	
	function showDialog(state, device) {
	    state = state.set('device', device);
	    return state.set('isDfuDialogVisible', true);
	}
	
	function clearAndHideDialog() {
	    return initialState;
	}
	
	function showConfirmCloseDialog(state, show) {
	    return state.set('isConfirmCloseVisible', show);
	}
	
	function setFilePath(state, filePath) {
	    return state.set('filePath', filePath);
	}
	
	function setPackageInfo(state, packageInfo) {
	    return state.set('packageInfo', packageInfo);
	}
	
	function start(state) {
	    state = state.set('status', 'Initializing');
	    return state.set('isStarted', true);
	}
	
	function setStopping(state) {
	    return state.set('isStopping', true);
	}
	
	function setStopped(state) {
	    state = state.set('isStopping', false);
	    state = state.set('fileNameBeingTransferred', initialState.fileNameBeingTransferred);
	    state = state.set('throughput', initialState.throughput);
	    state = state.set('percentCompleted', initialState.percentCompleted);
	    return state.set('isStarted', false);
	}
	
	function setTransferFileStarted(state, fileName) {
	    state = state.set('fileNameBeingTransferred', fileName);
	    state = state.set('percentCompleted', initialState.percentCompleted);
	    state = state.set('throughput', initialState.throughput);
	    state = state.set('status', 'Initializing');
	    return state;
	}
	
	function setTransferFileCompleted(state) {
	    state = state.set('fileNameBeingTransferred', initialState.fileNameBeingTransferred);
	    state = state.set('throughput', initialState.throughput);
	    state = state.set('status', 'File completed, waiting for device');
	    return state;
	}
	
	function setCompleted(state) {
	    state = state.set('isCompleted', true);
	    return state.set('isStarted', false);
	}
	
	function updateProgress(state, action) {
	    if (!state.isStarted || !state.fileNameBeingTransferred) {
	        return state;
	    }
	    if (action.completedBytes) {
	        state = state.set('throughput', createThroughput(state, action));
	    }
	    if (action.percentCompleted) {
	        state = state.set('percentCompleted', action.percentCompleted);
	    }
	    return state.set('status', 'Transferring');
	}
	
	function createThroughput(state, action) {
	    const kbpsPoint = createKbpsPoint(action.bytesPerSecond, action.completedBytes);
	    const averageKbpsPoint = createKbpsPoint(action.averageBytesPerSecond, action.completedBytes);
	    return {
	        totalSizeKb: action.totalBytes / 1024,
	        kbpsPoints: [].concat(_toConsumableArray(state.throughput.kbpsPoints), [kbpsPoint]),
	        averageKbpsPoints: [].concat(_toConsumableArray(state.throughput.averageKbpsPoints), [averageKbpsPoint])
	    };
	}
	
	function createKbpsPoint(bytesPerSecond, completedBytes) {
	    const kbPerSecond = bytesPerSecond / 1024;
	    const completedKb = completedBytes / 1024;
	    return {
	        x: completedKb,
	        y: kbPerSecond
	    };
	}
	
	function app() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case DfuActions.SHOW_DIALOG:
	            return showDialog(state, action.device);
	        case DfuActions.HIDE_DIALOG:
	            return clearAndHideDialog();
	        case DfuActions.SHOW_CONFIRM_CLOSE_DIALOG:
	            return showConfirmCloseDialog(state, true);
	        case DfuActions.HIDE_CONFIRM_CLOSE_DIALOG:
	            return showConfirmCloseDialog(state, false);
	        case DfuActions.SET_FILE_PATH:
	            return setFilePath(state, action.filePath);
	        case DfuActions.LOAD_PACKAGE_INFO_SUCCESS:
	            return setPackageInfo(state, action.packageInfo);
	        case DfuActions.UPDATE_PROGRESS:
	            return updateProgress(state, action);
	        case DfuActions.PERFORM:
	            return start(state);
	        case DfuActions.PERFORM_ERROR:
	            return setStopped(state);
	        case DfuActions.PERFORM_SUCCESS:
	            return setCompleted(state);
	        case DfuActions.TRANSFER_FILE_STARTED:
	            return setTransferFileStarted(state, action.fileName);
	        case DfuActions.TRANSFER_FILE_COMPLETED:
	            return setTransferFileCompleted(state);
	        case DfuActions.ABORT:
	            return setStopping(state);
	        case DfuActions.ABORT_SUCCESS:
	            return setStopped(state);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = discovery;
	
	var _immutable = __webpack_require__(5);
	
	var _immutable2 = _interopRequireDefault(_immutable);
	
	var _discoveryActions = __webpack_require__(38);
	
	var DiscoveryAction = _interopRequireWildcard(_discoveryActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterAction = _interopRequireWildcard(_adapterActions);
	
	var _api = __webpack_require__(9);
	
	var apiHelper = _interopRequireWildcard(_api);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const DiscoveryOptions = (0, _immutable.Record)({
	    expanded: false,
	    sortByRssi: false,
	    filterString: '',
	    scanInterval: 100,
	    scanWindow: 20,
	    scanTimeout: 60,
	    activeScan: true
	});
	
	const InitialState = (0, _immutable.Record)({
	    devices: (0, _immutable.OrderedMap)(),
	    errors: (0, _immutable.List)(),
	    options: new DiscoveryOptions()
	});
	
	const initialState = new InitialState();
	
	function scanStarted(state) {
	    _logging.logger.info('Scan started');
	    return state;
	}
	
	function scanStopped(state) {
	    _logging.logger.info('Scan stopped');
	    return state;
	}
	
	function deviceDiscovered(state, device) {
	    let newDevice = apiHelper.getImmutableDevice(device);
	    const existingDevice = state.devices.get(device.address);
	
	    // Keep exising name if new name is empty
	    if (existingDevice && existingDevice.name !== '' && device.name === '') {
	        newDevice = newDevice.setIn(['name'], existingDevice.name);
	    }
	
	    // Keep existing list of services if new list is empty
	    if (existingDevice && existingDevice.services.size > 0 && device.services.length === 0) {
	        newDevice = newDevice.setIn(['services'], existingDevice.services);
	    }
	
	    if (existingDevice) {
	        newDevice = newDevice.setIn(['isExpanded'], existingDevice.isExpanded);
	        newDevice = newDevice.mergeIn(['adData'], existingDevice.adData);
	    }
	
	    state = state.setIn(['devices', device.address], newDevice);
	
	    state = applyFilters(state);
	
	    return state;
	}
	
	function applyFilters(state) {
	    if (state.options.filterString) {
	        const filteredDevices = state.devices.filter(device => {
	            if (device.name.search(new RegExp(state.options.filterString, 'i')) >= 0) return true;else if (device.address.search(new RegExp(state.options.filterString, 'i')) >= 0) return true;else return false;
	        });
	        state = state.set('devices', filteredDevices);
	    }
	
	    if (state.options.sortByRssi) {
	        const orderedDevices = state.devices.sort((dev1, dev2) => {
	            if (dev1.rssi < dev2.rssi) return 1;else if (dev1.rssi > dev2.rssi) return -1;else return 0;
	        });
	        state = state.set('devices', orderedDevices);
	    }
	
	    return state;
	}
	
	function addError(state, error) {
	    return state.set('errors', state.errors.push(error));
	}
	
	function clearList(state) {
	    return state.set('devices', state.devices.clear());
	}
	
	function deviceConnect(state, device) {
	    if (state.devices.get(device.address)) {
	        return state.setIn(['devices', device.address, 'isConnecting'], true);
	    }
	    return state;
	}
	
	function deviceConnected(state, device) {
	    if (state.devices.get(device.address)) {
	        state = state.setIn(['devices', device.address, 'isConnecting'], false);
	        return state.setIn(['devices', device.address, 'connected'], true);
	    }
	    return state;
	}
	
	function deviceDisconnected(state, device) {
	    if (state.devices.get(device.address)) {
	        return state.setIn(['devices', device.address, 'connected'], false);
	    }
	    return state;
	}
	
	function deviceConnectTimeout(state, deviceAddress) {
	    _logging.logger.info(`Connection to device timed out`);
	    return state.setIn(['devices', deviceAddress.address, 'isConnecting'], false);
	}
	
	function deviceCancelConnect(state) {
	    const newDevices = state.devices.map(device => device.set('isConnecting', false));
	    return state.set('devices', newDevices);
	}
	
	function toggleExpanded(state, deviceAddress) {
	    return state.updateIn(['devices', deviceAddress, 'isExpanded'], value => !value);
	}
	
	function toggleOptionsExpanded(state) {
	    return state.updateIn(['options', 'expanded'], value => !value);
	}
	
	function discoverySetOptions(state, options) {
	    state = state.set('options', new DiscoveryOptions(options));
	    return applyFilters(state);
	}
	
	function discovery() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case DiscoveryAction.DISCOVERY_CLEAR_LIST:
	            return clearList(state);
	        case DiscoveryAction.ERROR_OCCURED:
	            return addError(state, action.error);
	        case DiscoveryAction.DISCOVERY_SCAN_STARTED:
	            return scanStarted(state);
	        case DiscoveryAction.DISCOVERY_SCAN_STOPPED:
	            return scanStopped(state);
	        case DiscoveryAction.DISCOVERY_TOGGLE_EXPANDED:
	            return toggleExpanded(state, action.deviceAddress);
	        case DiscoveryAction.DISCOVERY_TOGGLE_OPTIONS_EXPANDED:
	            return toggleOptionsExpanded(state);
	        case DiscoveryAction.DISCOVERY_SET_OPTIONS:
	            return discoverySetOptions(state, action.options);
	        case AdapterAction.DEVICE_DISCOVERED:
	            return deviceDiscovered(state, action.device);
	        case AdapterAction.DEVICE_CONNECT:
	            return deviceConnect(state, action.device);
	        case AdapterAction.DEVICE_CONNECTED:
	            return deviceConnected(state, action.device);
	        case AdapterAction.DEVICE_DISCONNECTED:
	            return deviceDisconnected(state, action.device);
	        case AdapterAction.DEVICE_CONNECT_TIMEOUT:
	            return deviceConnectTimeout(state, action.deviceAddress);
	        case AdapterAction.DEVICE_CANCEL_CONNECT:
	            return deviceCancelConnect(state);
	        case AdapterAction.ADAPTER_RESET_PERFORMED:
	            return initialState;
	        case AdapterAction.ADAPTER_CLOSED:
	            return initialState;
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = errorDialog;
	
	var _errorDialogActions = __webpack_require__(12);
	
	var ErrorDialogActions = _interopRequireWildcard(_errorDialogActions);
	
	var _immutable = __webpack_require__(5);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    visible: false,
	    errors: (0, _immutable.List)(),
	    debug: false
	});
	
	const initialState = new InitialState();
	
	function hideAndClearErrors(state) {
	    // Only clear the list of errors if we are not in debug mode.
	    if (state.debug !== true) {
	        state = state.set('errors', state.errors.clear());
	    }
	
	    return state.set('visible', false);
	}
	
	function showErrors(state, errors) {
	    if (errors !== undefined) {
	        if (errors.constructor !== Array) {
	            state = addErrorMessage(state, errors);
	        } else {
	            errors.forEach(error => {
	                state = addErrorMessage(state, error);
	            });
	        }
	    }
	
	    return state.set('visible', true);
	}
	
	function toggleDebug(state) {
	    if (state.debug === false) {
	        _logging.logger.info('Enabling debug output in error dialog. Also disables clearing of messages in the dialog after OK is clicked.');
	    } else {
	        _logging.logger.info('Disabling debug output in error dialog.');
	    }
	
	    return state.set('debug', !state.debug);
	}
	
	function addErrorMessage(state, error) {
	    // We do not want to log validation errors
	    if (error.name !== 'ValidationError') {
	        _logging.logger.error(error.message);
	        _logging.logger.debug(error.stack);
	    }
	
	    return state.set('errors', state.errors.push(error));
	}
	
	function errorDialog() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case ErrorDialogActions.CLOSE:
	            return hideAndClearErrors(state);
	        case ErrorDialogActions.SHOW_ERROR_MESSAGES:
	            return showErrors(state, action.errors);
	        case ErrorDialogActions.ADD_ERROR_MESSAGE:
	            return addErrorMessage(state, action.error);
	        case ErrorDialogActions.TOGGLE_DEBUG:
	            return toggleDebug(state);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = firmwareUpdate;
	
	var _immutable = __webpack_require__(5);
	
	var _firmwareUpdateActions = __webpack_require__(27);
	
	var FirmwareUpdateActions = _interopRequireWildcard(_firmwareUpdateActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    showingUpdateDialog: false,
	    showProgress: false,
	    adapter: null,
	    foundVersion: null,
	    latestVersion: null
	});
	
	const initialState = new InitialState();
	
	function firmwareUpdateRequest(state, adapter, foundVersion, latestVersion) {
	    return state.merge({ showingUpdateDialog: true, adapter, foundVersion, latestVersion });
	}
	
	function firmwareUpdate() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case FirmwareUpdateActions.SHOW_FIRMWARE_UPDATE_REQUEST:
	            return firmwareUpdateRequest(state, action.adapter, action.foundVersion, action.latestVersion);
	        case FirmwareUpdateActions.HIDE_FIRMWARE_UPDATE_REQUEST:
	            return state.merge({ showingUpdateDialog: false, showProgress: false });
	        case FirmwareUpdateActions.UPDATE_FIRMWARE:
	            return state.set('adapter', action.adapter);
	        case FirmwareUpdateActions.SHOW_FIRMWARE_UPDATE_SPINNER:
	            return state.set('showProgress', true);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _redux = __webpack_require__(8);
	
	var _adapterReducer = __webpack_require__(100);
	
	var _adapterReducer2 = _interopRequireDefault(_adapterReducer);
	
	var _discoveryReducer = __webpack_require__(106);
	
	var _discoveryReducer2 = _interopRequireDefault(_discoveryReducer);
	
	var _logReducer = __webpack_require__(110);
	
	var _logReducer2 = _interopRequireDefault(_logReducer);
	
	var _appReducer = __webpack_require__(102);
	
	var _appReducer2 = _interopRequireDefault(_appReducer);
	
	var _advertisingReducer = __webpack_require__(101);
	
	var _advertisingReducer2 = _interopRequireDefault(_advertisingReducer);
	
	var _bleEventReducer = __webpack_require__(103);
	
	var _bleEventReducer2 = _interopRequireDefault(_bleEventReducer);
	
	var _errorDialogReducer = __webpack_require__(107);
	
	var _errorDialogReducer2 = _interopRequireDefault(_errorDialogReducer);
	
	var _firmwareUpdateReducer = __webpack_require__(108);
	
	var _firmwareUpdateReducer2 = _interopRequireDefault(_firmwareUpdateReducer);
	
	var _dfuReducer = __webpack_require__(105);
	
	var _dfuReducer2 = _interopRequireDefault(_dfuReducer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	const rootReducer = (0, _redux.combineReducers)({
	  adapter: _adapterReducer2.default,
	  discovery: _discoveryReducer2.default,
	  log: _logReducer2.default,
	  app: _appReducer2.default,
	  advertising: _advertisingReducer2.default,
	  bleEvent: _bleEventReducer2.default,
	  errorDialog: _errorDialogReducer2.default,
	  firmwareUpdate: _firmwareUpdateReducer2.default,
	  dfu: _dfuReducer2.default
	});
	
	exports.default = rootReducer;
	module.exports = exports['default'];

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = log;
	
	var _immutable = __webpack_require__(5);
	
	var _logActions = __webpack_require__(39);
	
	var LogAction = _interopRequireWildcard(_logActions);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }
	
	const InitialState = (0, _immutable.Record)({
	    autoScroll: true,
	    entries: (0, _immutable.List)()
	});
	
	const initialState = new InitialState();
	
	function log() {
	    var _state$entries;
	
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case LogAction.ADD_ENTRY:
	            return state.set('entries', state.entries.push(action.entry));
	        case LogAction.ADD_ENTRIES:
	            return state.set('entries', (_state$entries = state.entries).push.apply(_state$entries, _toConsumableArray(action.entries)));
	        case LogAction.CLEAR_ENTRIES:
	            return state.set('entries', state.entries.clear());
	        case LogAction.TOGGLE_AUTOSCROLL:
	            return state.set('autoScroll', !state.autoScroll);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = deviceDetails;
	
	var _immutable = __webpack_require__(5);
	
	var _serverSetupActions = __webpack_require__(18);
	
	var ServerSetupActions = _interopRequireWildcard(_serverSetupActions);
	
	var _adapterActions = __webpack_require__(3);
	
	var AdapterAction = _interopRequireWildcard(_adapterActions);
	
	var _api = __webpack_require__(9);
	
	var _logging = __webpack_require__(4);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    selectedComponent: null,
	    showingDeleteDialog: false,
	    showingClearDialog: false,
	    showingDiscardDialog: false,
	    children: null
	});
	
	const deviceInstanceId = 'local.server';
	
	function getInitialGapServiceCharacteristics(gapInstanceId) {
	    let characteristicInstanceIdCounter = 0;
	
	    const deviceNameCharacteristic = (0, _api.getImmutableCharacteristic)({
	        instanceId: gapInstanceId + '.' + characteristicInstanceIdCounter++,
	        name: 'Device Name',
	        uuid: '2A00',
	        value: [0x6E, 0x52, 0x46, 0x35, 0x75], // nRF5x
	        properties: { read: true, write: true },
	        readPerm: 'open',
	        writePerm: 'open',
	        maxLength: 20,
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    const appearanceCharacteristic = (0, _api.getImmutableCharacteristic)({
	        instanceId: gapInstanceId + '.' + characteristicInstanceIdCounter++,
	        name: 'Appearance',
	        uuid: '2A01',
	        value: [0x00, 0x00],
	        properties: { read: true },
	        readPerm: 'open',
	        writePerm: 'open',
	        maxLength: 20,
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    const ppcpCharacteristic = (0, _api.getImmutableCharacteristic)({
	        instanceId: gapInstanceId + '.' + characteristicInstanceIdCounter++,
	        name: 'Peripheral Preferred Connection Parameters',
	        uuid: '2A04',
	        value: [0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF], // no specific minimum/maximum interval and timeout, 0 slave latency
	        properties: { read: true },
	        readPerm: 'open',
	        writePerm: 'open',
	        maxLength: 20,
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    let characteristics = (0, _immutable.OrderedMap)();
	    characteristics = characteristics.set(deviceNameCharacteristic.instanceId, deviceNameCharacteristic);
	    characteristics = characteristics.set(appearanceCharacteristic.instanceId, appearanceCharacteristic);
	    characteristics = characteristics.set(ppcpCharacteristic.instanceId, ppcpCharacteristic);
	
	    return characteristics;
	}
	
	function getInitialServices() {
	    let serviceInstanceIdCounter = 0;
	    const gapInstanceId = deviceInstanceId + '.' + serviceInstanceIdCounter++;
	
	    const gapService = (0, _api.getImmutableService)({
	        instanceId: gapInstanceId,
	        name: 'Generic Access',
	        uuid: '1800',
	        children: getInitialGapServiceCharacteristics(gapInstanceId)
	    });
	    const gattService = (0, _api.getImmutableService)({
	        instanceId: deviceInstanceId + '.' + serviceInstanceIdCounter++,
	        name: 'Generic Attribute',
	        uuid: '1801',
	        children: (0, _immutable.OrderedMap)()
	    });
	
	    let localServerChildren = (0, _immutable.OrderedMap)();
	    localServerChildren = localServerChildren.set(gapService.instanceId, gapService);
	    localServerChildren = localServerChildren.set(gattService.instanceId, gattService);
	
	    return (0, _immutable.OrderedMap)(localServerChildren);
	}
	
	const initialState = new InitialState({
	    selectedComponent: null,
	    showingDeleteDialog: false,
	    children: getInitialServices()
	});
	
	function getNodeStatePath(nodeInstanceId) {
	    const nodeInstanceIds = (0, _api.getInstanceIds)(nodeInstanceId);
	    const nodeStatePath = [];
	
	    if (nodeInstanceIds.service) {
	        nodeStatePath.push('children', nodeInstanceIds.service);
	    }
	
	    if (nodeInstanceIds.characteristic) {
	        nodeStatePath.push('children', nodeInstanceIds.characteristic);
	    }
	
	    if (nodeInstanceIds.descriptor) {
	        nodeStatePath.push('children', nodeInstanceIds.descriptor);
	    }
	
	    return nodeStatePath;
	}
	
	function setAttributeExpanded(state, attribute, value) {
	    const expandedStatePath = getNodeStatePath(attribute.instanceId).concat('expanded');
	    return state.setIn(expandedStatePath, value);
	}
	
	function addNewAttribute(state, newAttribute) {
	    let oldAttribute = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
	
	    if (oldAttribute) {
	        newAttribute = newAttribute.merge(cloneLoadedObject(oldAttribute));
	    }
	
	    const newStatePath = getNodeStatePath(newAttribute.instanceId);
	    return state.setIn(newStatePath, newAttribute);
	}
	
	function createNewService(serviceInstanceId) {
	    return (0, _api.getImmutableService)({
	        instanceId: deviceInstanceId + '.' + serviceInstanceId,
	        name: 'New Service',
	        children: (0, _immutable.OrderedMap)()
	    });
	}
	
	function addNewService(state) {
	    let oldService = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
	
	    const serviceInstanceId = getNextAvailableInstanceId(state);
	    return addNewAttribute(state, createNewService(serviceInstanceId), oldService);
	}
	
	function createNewCharacteristic(parent, characteristicInstanceId) {
	    return (0, _api.getImmutableCharacteristic)({
	        instanceId: parent.instanceId + '.' + characteristicInstanceId,
	        name: 'New Characteristic',
	        readPerm: 'open',
	        writePerm: 'open',
	        fixedLength: false,
	        maxLength: 20,
	        children: (0, _immutable.OrderedMap)()
	    });
	}
	
	function addNewCharacteristic(state, parent) {
	    let oldCharacteristic = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
	
	    const characteristicInstanceId = getNextAvailableInstanceId(state);
	    return addNewAttribute(state, createNewCharacteristic(parent, characteristicInstanceId), oldCharacteristic);
	}
	
	function createNewDescriptor(parent, descriptorInstanceId) {
	    return (0, _api.getImmutableDescriptor)({
	        instanceId: parent.instanceId + '.' + descriptorInstanceId,
	        name: 'New Descriptor',
	        readPerm: 'open',
	        writePerm: 'open',
	        fixedLength: false,
	        maxLength: 20,
	        children: (0, _immutable.OrderedMap)()
	    });
	}
	
	function addNewDescriptor(state, parent) {
	    let oldDescriptor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
	
	    const descriptorInstanceId = getNextAvailableInstanceId(state);
	    return addNewAttribute(state, createNewDescriptor(parent, descriptorInstanceId), oldDescriptor);
	}
	
	function changedAttribute(state, attribute) {
	    const attributeStatePath = getNodeStatePath(attribute.instanceId);
	
	    if (attribute.properties) {
	        attribute.properties = (0, _api.getImmutableProperties)(attribute.properties);
	    }
	
	    return state.mergeIn(attributeStatePath, attribute);
	}
	
	function removeAttribute(state) {
	    const attributeStatePath = getNodeStatePath(state.selectedComponent);
	    const changedState = state.merge({ selectedComponent: null, showingDeleteDialog: false });
	    return changedState.deleteIn(attributeStatePath);
	}
	
	function cloneLoadedObject(attribute) {
	    let retval = {};
	
	    for (let entry in attribute) {
	        if (attribute.hasOwnProperty(entry) && entry !== 'children') {
	            retval[entry] = attribute[entry];
	        }
	    }
	
	    if (retval.properties) {
	        retval.properties = (0, _api.getImmutableProperties)(retval.properties);
	    }
	
	    return retval;
	}
	
	function getNextAvailableInstanceId(state) {
	    let maxId = 0;
	    state.get('children').map(service => {
	        maxId = Math.max(maxId, parseServiceInstanceId(service));
	        service.get('children').map(characteristic => {
	            maxId = Math.max(maxId, parseCharacteristicInstanceId(characteristic));
	            characteristic.get('children').map(descriptor => {
	                maxId = Math.max(maxId, parseDescriptorInstanceId(descriptor));
	            });
	        });
	    });
	    return maxId + 1;
	}
	
	function parseServiceInstanceId(service) {
	    return parseInt(service.get('instanceId').split('.')[2]);
	}
	
	function parseCharacteristicInstanceId(characteristic) {
	    return parseInt(characteristic.get('instanceId').split('.')[3]);
	}
	
	function parseDescriptorInstanceId(descriptor) {
	    return parseInt(descriptor.get('instanceId').split('.')[4]);
	}
	
	function loadSetup(state, setup) {
	    if (setup && setup.children) {
	        let newState = new InitialState();
	        newState = newState.setIn(['children'], (0, _immutable.OrderedMap)());
	
	        getObjectValues(setup.children).map(service => {
	            newState = addNewService(newState, service);
	            getObjectValues(service.children).map(characteristic => {
	                newState = addNewCharacteristic(newState, service, characteristic);
	                getObjectValues(characteristic.children).map(descriptor => {
	                    newState = addNewDescriptor(newState, characteristic, descriptor);
	                });
	            });
	        });
	
	        // Only update the children data, everything else that is stored we ignore
	        state = state.setIn(['selectedComponent'], null);
	        return state.setIn(['children'], newState.children);
	    }
	}
	
	function getObjectValues(obj) {
	    return Object.keys(obj).map(key => {
	        return obj[key];
	    });
	}
	
	function deviceDetails() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case ServerSetupActions.SELECT_COMPONENT:
	            return state.set('selectedComponent', action.component);
	        case ServerSetupActions.SET_ATTRIBUTE_EXPANDED:
	            return setAttributeExpanded(state, action.attribute, action.value);
	        case ServerSetupActions.ADD_NEW_SERVICE:
	            return addNewService(state);
	        case ServerSetupActions.ADD_NEW_CHARACTERISTIC:
	            return addNewCharacteristic(state, action.parent);
	        case ServerSetupActions.ADD_NEW_DESCRIPTOR:
	            return addNewDescriptor(state, action.parent);
	        case ServerSetupActions.CHANGED_ATTRIBUTE:
	            return changedAttribute(state, action.attribute);
	        case ServerSetupActions.REMOVE_ATTRIBUTE:
	            return removeAttribute(state, action.attribute);
	        case ServerSetupActions.CLEAR_SERVER:
	            _logging.logger.info('Server setup was cleared');
	            return initialState;
	        case ServerSetupActions.APPLIED_SERVER:
	            // Adapter reducer keeps track of which adapter has applied servers.
	            _logging.logger.info('Server setup was applied');
	            return state;
	        case ServerSetupActions.SHOW_DELETE_DIALOG:
	            return state.set('showingDeleteDialog', true);
	        case ServerSetupActions.HIDE_DELETE_DIALOG:
	            return state.set('showingDeleteDialog', false);
	        case ServerSetupActions.SHOW_CLEAR_DIALOG:
	            return state.set('showingClearDialog', true);
	        case ServerSetupActions.HIDE_CLEAR_DIALOG:
	            return state.set('showingClearDialog', false);
	        case ServerSetupActions.SHOW_DISCARD_DIALOG:
	            return state.set('showingDiscardDialog', true);
	        case ServerSetupActions.HIDE_DISCARD_DIALOG:
	            return state.set('showingDiscardDialog', false);
	        case ServerSetupActions.LOAD:
	            return loadSetup(state, action.setup);
	        case AdapterAction.ADAPTER_CLOSED:
	            return initialState;
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	var _tween = __webpack_require__(158);
	
	var _tween2 = _interopRequireDefault(_tween);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// Usage:
	// if (this.animation) {
	//     this.animation.stop();
	// }
	// var blue  = {r: 179, g: 225, b: 245};
	// var white = {r: 255, g: 255, b: 255};
	// this.animation = Effects.blink(this, 'backgroundColor', blue, white);
	
	var Effects = {
	    blink(reactElement, property, fromColor, toColor, options) {
	        this.ensureAnimationLoopStarted();
	        options = options || {};
	        var duration = options.duration || 2000;
	        var easing = options.easing || _tween2.default.Easing.Linear.None;
	        return new _tween2.default.Tween(fromColor).to(toColor, duration).easing(easing).onUpdate(() => {
	            reactElement[property] = fromColor;
	            reactElement.forceUpdate();
	        }).start();
	    },
	
	    ensureAnimationLoopStarted: function () {
	        //closure trickery to make it impossible to start animationLoop twice
	        var animationLoopStarted = false;
	        return function () {
	            if (!animationLoopStarted) {
	                animationLoopStarted = true;
	
	                const animationLoop = function (time) {
	                    requestAnimationFrame(animationLoop);
	                    _tween2.default.update(time);
	                };
	
	                animationLoop();
	            }
	        };
	    }()
	};
	
	module.exports = { Effects };

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getColor = getColor;
	
	var _electron = __webpack_require__(13);
	
	var _logging = __webpack_require__(4);
	
	__webpack_require__(140);
	
	const CSS_CLASS_PREFIX = 'colordefinition';
	const FALLBACK_COLOR = { r: 255, g: 0, b: 0 };
	
	const colors = initColors(findColorDefinitionRules());
	
	function initColors(rules) {
	    let colors = {};
	    rules.forEach(rule => {
	        const regex = new RegExp(`.${CSS_CLASS_PREFIX}-(.*)`);
	        let key = regex.exec(rule.selectorText)[1];
	        colors[key] = rule.style['color'];
	    });
	    return colors;
	}
	
	function findColorDefinitionRules() {
	    let rules = [];
	    for (let i = 0; i < document.styleSheets.length; i++) {
	        let cssRules = document.styleSheets[i].cssRules;
	        for (let j = 0; j < cssRules.length; j++) {
	            let rule = cssRules[j];
	            if (rule.selectorText && rule.selectorText.indexOf(CSS_CLASS_PREFIX) !== -1) {
	                rules.push(rule);
	            }
	        }
	    }
	    return rules;
	}
	
	function getColor(color) {
	    const rgbString = colors[color];
	    if (!rgbString) {
	        _logging.logger.debug('Color ' + color + ' is not defined');
	        return FALLBACK_COLOR;
	    }
	    const rgbArray = rgbString.replace(/[^\d,]/g, '').split(',');
	    return {
	        r: rgbArray[0],
	        g: rgbArray[1],
	        b: rgbArray[2]
	    };
	}

/***/ },
/* 114 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	/* These exports exist to indicate formating of the content in a characteristic.
	* Example:
	*    '2A00': { name: 'Device Name', format: TEXT, },
	*    will format the data in the characteristic with UUID 2A00 as text.
	*
	* The default is NO_FORMAT which will present the data raw.
	*/
	const TEXT = exports.TEXT = 'TEXT';
	const NO_FORMAT = exports.NO_FORMAT = 'NO_FORMAT';
	
	const uuid16bitGattDefinitions = exports.uuid16bitGattDefinitions = {
	    '2800': { name: 'Primary Service' },
	    '2801': { name: 'Secondary Service' },
	    '2802': { name: 'Include' },
	    '2803': { name: 'Characteristic' }
	};
	
	const uuid16bitServiceDefinitions = exports.uuid16bitServiceDefinitions = {
	    '1800': { name: 'Generic Access' },
	    '1801': { name: 'Generic Attribute' },
	    '1802': { name: 'Immediate Alert' },
	    '1803': { name: 'Link Loss' },
	    '1804': { name: 'Tx Power' },
	    '1805': { name: 'Current Time Service' },
	    '1806': { name: 'Reference Time Update Service' },
	    '1807': { name: 'Next DST Change Service' },
	    '1808': { name: 'Glucose' },
	    '1809': { name: 'Health Thermometer' },
	    '180A': { name: 'Device Information' },
	    '180D': { name: 'Heart Rate' },
	    '180E': { name: 'Phone Alert Status Service' },
	    '180F': { name: 'Battery Service' },
	    '1810': { name: 'Blood Pressure' },
	    '1811': { name: 'Alert Notification Service' },
	    '1812': { name: 'Human Interface Device' },
	    '1813': { name: 'Scan Parameters' },
	    '1814': { name: 'Running Speed and Cadence' },
	    '1815': { name: 'Automation IO' },
	    '1816': { name: 'Cycling Speed and Cadence' },
	    '1818': { name: 'Cycling Power' },
	    '1819': { name: 'Location and Navigation' },
	    '181A': { name: 'Environmental Sensing' },
	    '181B': { name: 'Body Composition' },
	    '181C': { name: 'User Data' },
	    '181D': { name: 'Weight Scale' },
	    '181E': { name: 'Bond Management' },
	    '181F': { name: 'Continuous Glucose Monitoring' },
	    '1820': { name: 'Internet Protocol Support' },
	    '1821': { name: 'Indoor Positioning' },
	    '1822': { name: 'Pulse Oximeter' },
	    'FE59': { name: 'Secure DFU' }
	};
	
	const uuid16bitCharacteristicDefinitions = exports.uuid16bitCharacteristicDefinitions = {
	    '2A00': { name: 'Device Name', format: TEXT },
	    '2A01': { name: 'Appearance' },
	    '2A02': { name: 'Peripheral Privacy Flag' },
	    '2A03': { name: 'Reconnection Address' },
	    '2A04': { name: 'Peripheral Preferred Connection Parameters' },
	    '2A05': { name: 'Service Changed' },
	    '2A06': { name: 'Alert Level' },
	    '2A07': { name: 'Tx Power Level' },
	    '2A08': { name: 'Date Time' },
	    '2A09': { name: 'Day of Week' },
	    '2A0A': { name: 'Day Date Time' },
	    '2A0C': { name: 'Exact Time 256' },
	    '2A0D': { name: 'DST Offset' },
	    '2A0E': { name: 'Time Zone' },
	    '2A0F': { name: 'Local Time Information' },
	    '2A11': { name: 'Time with DST' },
	    '2A12': { name: 'Time Accuracy' },
	    '2A13': { name: 'Time Source' },
	    '2A14': { name: 'Reference Time Information' },
	    '2A16': { name: 'Time Update Control Point' },
	    '2A17': { name: 'Time Update State' },
	    '2A18': { name: 'Glucose Measurement' },
	    '2A19': { name: 'Battery Level' },
	    '2A1C': { name: 'Temperature Measurement' },
	    '2A1D': { name: 'Temperature Type' },
	    '2A1E': { name: 'Intermediate Temperature' },
	    '2A21': { name: 'Measurement Interval' },
	    '2A22': { name: 'Boot Keyboard Input Report' },
	    '2A23': { name: 'System ID' },
	    '2A24': { name: 'Model Number String', format: TEXT },
	    '2A25': { name: 'Serial Number String', fornat: TEXT },
	    '2A26': { name: 'Firmware Revision String', format: TEXT },
	    '2A27': { name: 'Hardware Revision String', format: TEXT },
	    '2A28': { name: 'Software Revision String', format: TEXT },
	    '2A29': { name: 'Manufacturer Name String', format: TEXT },
	    '2A2A': { name: 'IEEE 11073-20601 Regulatory Certification Data List' },
	    '2A2B': { name: 'Current Time' },
	    '2A2C': { name: 'Magnetic Declination' },
	    '2A31': { name: 'Scan Refresh' },
	    '2A32': { name: 'Boot Keyboard Output Report' },
	    '2A33': { name: 'Boot Mouse Input Report' },
	    '2A34': { name: 'Glucose Measurement Context' },
	    '2A35': { name: 'Blood Pressure Measurement' },
	    '2A36': { name: 'Intermediate Cuff Pressure' },
	    '2A37': { name: 'Heart Rate Measurement' },
	    '2A38': { name: 'Body Sensor Location' },
	    '2A39': { name: 'Heart Rate Control Point' },
	    '2A3F': { name: 'Alert Status' },
	    '2A40': { name: 'Ringer Control Point' },
	    '2A41': { name: 'Ringer Setting' },
	    '2A42': { name: 'Alert Category ID Bit Mask' },
	    '2A43': { name: 'Alert Category ID' },
	    '2A44': { name: 'Alert Notification Control Point' },
	    '2A45': { name: 'Unread Alert Status' },
	    '2A46': { name: 'New Alert' },
	    '2A47': { name: 'Supported New Alert Category' },
	    '2A48': { name: 'Supported Unread Alert Category' },
	    '2A49': { name: 'Blood Pressure Feature' },
	    '2A4A': { name: 'HID Information' },
	    '2A4B': { name: 'Report Map' },
	    '2A4C': { name: 'HID Control Point' },
	    '2A4D': { name: 'Report' },
	    '2A4E': { name: 'Protocol Mode' },
	    '2A4F': { name: 'Scan Interval Window' },
	    '2A50': { name: 'PnP ID' },
	    '2A51': { name: 'Glucose Feature' },
	    '2A52': { name: 'Record Access Control Point' },
	    '2A53': { name: 'RSC Measurement' },
	    '2A54': { name: 'RSC Feature' },
	    '2A55': { name: 'SC Control Point' },
	    '2A56': { name: 'Digital' },
	    '2A58': { name: 'Analog' },
	    '2A5A': { name: 'Aggregate' },
	    '2A5B': { name: 'CSC Measurement' },
	    '2A5C': { name: 'CSC Feature' },
	    '2A5D': { name: 'Sensor Location' },
	    '2A5E': { name: 'PLX Spot-Check Measurement' },
	    '2A5F': { name: 'PLX Continuous Measurement' },
	    '2A60': { name: 'PLX Features' },
	    '2A63': { name: 'Cycling Power Measurement' },
	    '2A64': { name: 'Cycling Power Vector' },
	    '2A65': { name: 'Cycling Power Feature' },
	    '2A66': { name: 'Cycling Power Control Point' },
	    '2A67': { name: 'Location and Speed' },
	    '2A68': { name: 'Navigation' },
	    '2A69': { name: 'Position Quality' },
	    '2A6A': { name: 'LN Feature' },
	    '2A6B': { name: 'LN Control Point' },
	    '2A6C': { name: 'Elevation' },
	    '2A6D': { name: 'Pressure' },
	    '2A6E': { name: 'Temperature' },
	    '2A6F': { name: 'Humidity' },
	    '2A70': { name: 'True Wind Speed' },
	    '2A71': { name: 'True Wind Direction' },
	    '2A72': { name: 'Apparent Wind Speed' },
	    '2A73': { name: 'Apparent Wind Direction ' },
	    '2A74': { name: 'Gust Factor' },
	    '2A75': { name: 'Pollen Concentration' },
	    '2A76': { name: 'UV Index' },
	    '2A77': { name: 'Irradiance' },
	    '2A78': { name: 'Rainfall' },
	    '2A79': { name: 'Wind Chill' },
	    '2A7A': { name: 'Heat Index' },
	    '2A7B': { name: 'Dew Point' },
	    '2A7D': { name: 'Descriptor Value Changed' },
	    '2A7E': { name: 'Aerobic Heart Rate Lower Limit' },
	    '2A7F': { name: 'Aerobic Threshold' },
	    '2A80': { name: 'Age' },
	    '2A81': { name: 'Anaerobic Heart Rate Lower Limit' },
	    '2A82': { name: 'Anaerobic Heart Rate Upper Limit' },
	    '2A83': { name: 'Anaerobic Threshold' },
	    '2A84': { name: 'Aerobic Heart Rate Upper Limit' },
	    '2A85': { name: 'Date of Birth' },
	    '2A86': { name: 'Date of Threshold Assessment' },
	    '2A87': { name: 'Email Address', format: TEXT },
	    '2A88': { name: 'Fat Burn Heart Rate Lower Limit' },
	    '2A89': { name: 'Fat Burn Heart Rate Upper Limit' },
	    '2A8A': { name: 'First Name', format: TEXT },
	    '2A8B': { name: 'Five Zone Heart Rate Limits' },
	    '2A8C': { name: 'Gender' },
	    '2A8D': { name: 'Heart Rate Max' },
	    '2A8E': { name: 'Height' },
	    '2A8F': { name: 'Hip Circumference' },
	    '2A90': { name: 'Last Name', format: TEXT },
	    '2A91': { name: 'Maximum Recommended Heart Rate' },
	    '2A92': { name: 'Resting Heart Rate' },
	    '2A93': { name: 'Sport Type for Aerobic and Anaerobic Thresholds' },
	    '2A94': { name: 'Three Zone Heart Rate Limits' },
	    '2A95': { name: 'Two Zone Heart Rate Limit' },
	    '2A96': { name: 'VO2 Max' },
	    '2A97': { name: 'Waist Circumference' },
	    '2A98': { name: 'Weight' },
	    '2A99': { name: 'Database Change Increment' },
	    '2A9A': { name: 'User Index' },
	    '2A9B': { name: 'Body Composition Feature' },
	    '2A9C': { name: 'Body Composition Measurement' },
	    '2A9D': { name: 'Weight Measurement' },
	    '2A9E': { name: 'Weight Scale Feature' },
	    '2A9F': { name: 'User Control Point' },
	    '2AA0': { name: 'Magnetic Flux Density - 2D' },
	    '2AA1': { name: 'Magnetic Flux Density - 3D' },
	    '2AA2': { name: 'Language' },
	    '2AA3': { name: 'Barometric Pressure Trend' },
	    '2AA4': { name: 'Bond Management Control Point' },
	    '2AA5': { name: 'Bond Management Feature' },
	    '2AA6': { name: 'Central Address Resolution' },
	    '2AA7': { name: 'CGM Measurement' },
	    '2AA8': { name: 'CGM Feature' },
	    '2AA9': { name: 'CGM Status' },
	    '2AAA': { name: 'CGM Session Start Time' },
	    '2AAB': { name: 'CGM Session Run Time' },
	    '2AAC': { name: 'CGM Specific Ops Control Point' },
	    '2AAD': { name: 'Indoor Positioning Configuration' },
	    '2AAE': { name: 'Latitude' },
	    '2AAF': { name: 'Longitude' },
	    '2AB0': { name: 'Local North Coordinate' },
	    '2AB1': { name: 'Local East Coordinate' },
	    '2AB2': { name: 'Floor Number' },
	    '2AB3': { name: 'Altitude' },
	    '2AB4': { name: 'Uncertainty' },
	    '2AB5': { name: 'Location Name', format: TEXT }
	};
	
	const uuid16bitDescriptorDefinitions = exports.uuid16bitDescriptorDefinitions = {
	    '2900': { name: 'Characteristic Extended Properties' },
	    '2901': { name: 'Characteristic User Description' },
	    '2902': { name: 'Client Characteristic Configuration' },
	    '2903': { name: 'Server Characteristic Configuration' },
	    '2904': { name: 'Characteristic Presentation Format' },
	    '2905': { name: 'Characteristic Aggregate Format' },
	    '2906': { name: 'Valid Range' },
	    '2907': { name: 'External Report Reference' },
	    '2908': { name: 'Report Reference' },
	    '290A': { name: 'Value Trigger Setting' },
	    '290B': { name: 'Environmental Sensing Configuration' },
	    '290C': { name: 'Environmental Sensing Measurement' },
	    '290D': { name: 'Environmental Sensing Trigger Setting' }
	};
	
	const uuid128bitServiceDefinitions = exports.uuid128bitServiceDefinitions = {
	    '000015301212EFDE1523785FEABCD123': { name: 'Legacy DFU' },
	    '6E400001B5A3F393E0A9E50E24DCCA9E': { name: 'UART over BLE' },
	    '7905F431B5CE4E99A40F4B1E122D00D0': { name: 'ANCS' },
	    'A3C875008ED34BDF8A39A01BEBEDE295': { name: 'Eddystone Configuration Service' }
	};
	
	const uuid128bitCharacteristicDefinitions = exports.uuid128bitCharacteristicDefinitions = {
	    '8EC90001F3154F609FB8838830DAEA50': { name: 'Secure DFU Control Point' },
	    '8EC90002F3154F609FB8838830DAEA50': { name: 'Secure DFU Packet' },
	    '000015311212EFDE1523785FEABCD123': { name: 'Legacy DFU Control Point' },
	    '000015321212EFDE1523785FEABCD123': { name: 'Legacy DFU Packet' },
	    '6E400002B5A3F393E0A9E50E24DCCA9E': { name: 'UART RX' },
	    '6E400003B5A3F393E0A9E50E24DCCA9E': { name: 'UART TX' },
	    '9FBF120D630142D98C5825E699A21DBD': { name: 'ANCS Notification Source' },
	    '69D1D8F345E149A898219BBDFDAAD9D9': { name: 'ANCS Control Point' },
	    '22EAC6E924D64BB5BE44B36ACE7C7BFB': { name: 'ANCS Data Source' },
	    //Eddystone UUIDs, https://github.com/google/eddystone/tree/master/configuration-service
	    'A3C875018ED34BDF8A39A01BEBEDE295': { name: 'Capabilities' },
	    'A3C875028ED34BDF8A39A01BEBEDE295': { name: 'Active Slot' },
	    'A3C875038ED34BDF8A39A01BEBEDE295': { name: 'Advertising Interval' },
	    'A3C875048ED34BDF8A39A01BEBEDE295': { name: 'Radio TX Power' },
	    'A3C875058ED34BDF8A39A01BEBEDE295': { name: 'Advertised TX Power' },
	    'A3C875068ED34BDF8A39A01BEBEDE295': { name: 'Lock State' },
	    'A3C875078ED34BDF8A39A01BEBEDE295': { name: 'Unlock' },
	    'A3C875088ED34BDF8A39A01BEBEDE295': { name: 'Public ECDH Key' },
	    'A3C875098ED34BDF8A39A01BEBEDE295': { name: 'EID Identity Key' },
	    'A3C8750A8ED34BDF8A39A01BEBEDE295': { name: 'ADV Slot Data' },
	    'A3C8750B8ED34BDF8A39A01BEBEDE295': { name: 'Factory Reset' },
	    'A3C8750C8ED34BDF8A39A01BEBEDE295': { name: 'Remain Connectable' }
	};

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(31)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Copyright (c) 2016 Nordic Semiconductor. All Rights Reserved.\n *\n * The information contained herein is property of Nordic Semiconductor ASA.\n * Terms and conditions of usage are described in detail in NORDIC\n * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.\n *\n * Licensees are granted free, non-transferable use of the information. NO\n * WARRANTY of ANY KIND is provided. This heading must NOT be removed from\n * the file.\n *\n */\n/* Copyright (c) 2016 Nordic Semiconductor. All Rights Reserved.\n *\n * The information contained herein is property of Nordic Semiconductor ASA.\n * Terms and conditions of usage are described in detail in NORDIC\n * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.\n *\n * Licensees are granted free, non-transferable use of the information. NO\n * WARRANTY of ANY KIND is provided. This heading must NOT be removed from\n * the file.\n *\n */\n.nomargin {\n  margin: 0px;\n}\n.glyphicon .form-control-feedback {\n  right: 45px;\n}\n.icon-slim:before {\n  margin: 0;\n  width: auto;\n}\n.icon-2x {\n  font-size: 200%;\n}\n.icon-lock {\n  padding-left: 1px;\n}\n.icon-encircled {\n  border-radius: 50%;\n  background-color: #333333;\n  color: white;\n  width: 24px;\n  height: 24px;\n  display: block;\n  padding-left: 2px;\n  padding-top: 2px;\n}\n.icon-foreground {\n  overflow: hidden;\n  position: absolute;\n}\n.icon-background {\n  color: #dddddd;\n}\n.icon-rotate-90:before {\n  transform: rotate(90deg);\n}\n.icon-rotate-270:before {\n  transform: rotate(270deg);\n}\n.border-box {\n  box-sizing: border-box;\n  -moz-box-sizing: border-box;\n}\n.slidein {\n  display: block;\n}\n#diagramContainer {\n  padding: 20px;\n  width: 100%;\n  position: relative;\n  overflow: auto;\n}\n@font-face {\n  font-family: \"Roboto Condensed\";\n  font-style: normal;\n  font-weight: 300;\n  src: url(" + __webpack_require__(124) + ") format('truetype');\n}\n@font-face {\n  font-family: \"Roboto\";\n  font-style: italic;\n  font-weight: 300;\n  src: url(" + __webpack_require__(122) + ") format('truetype');\n}\n/* Normal */\n@font-face {\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 400;\n  src: url(" + __webpack_require__(123) + ") format('truetype');\n}\n@font-face {\n  font-family: \"Roboto\";\n  font-style: italic;\n  font-weight: 400;\n  src: url(" + __webpack_require__(121) + ") format('truetype');\n}\n/* Bold */\n@font-face {\n  font-family: \"Roboto\";\n  font-style: normal;\n  font-weight: 700;\n  src: url(" + __webpack_require__(119) + ") format('truetype');\n}\n@font-face {\n  font-family: \"Roboto\";\n  font-style: italic;\n  font-weight: 700;\n  src: url(" + __webpack_require__(120) + ") format('truetype');\n}\n.tree-view {\n  overflow-y: hidden;\n}\n.tree-view_item {\n  /* immediate child of .tree-view, for styling convenience */\n}\n/* style for the children nodes container */\n.tree-view_children {\n  margin-left: 16px;\n}\n.tree-view_children-collapsed {\n  height: 0px;\n}\n.tree-view_arrow {\n  cursor: pointer;\n  margin-right: 6px;\n  display: inline-block;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n/* rotate the triangle to close it */\n.tree-view_arrow-collapsed {\n  -webkit-transform: rotate(-90deg);\n  -moz-transform: rotate(-90deg);\n  -ms-transform: rotate(-90deg);\n  transform: rotate(-90deg);\n}\n/* Component that renders log entries */\n#log-entry {\n  display: flex;\n  flex-flow: column;\n  margin: 0;\n  padding: 0;\n  font-family: 'Roboto', sans-serif;\n  /*width: 300px;*/\n}\n#log-entry > device-info,\n#log-entry > status,\n#log-entry > device-status,\n#log-entry > service-info {\n  margin: 0px;\n}\n#log-entry > device-info {\n  display: flex;\n  flex-flow: column;\n  font-weight: bold;\n}\n#log-entry > device-status {\n  display: flex;\n  flex-flow: row;\n  justify-content: space-between;\n}\n#log-entry > service-info {\n  display: flex;\n  flex-flow: column;\n}\n#log-entry > service-info - > service-flags {\n  display: flex;\n  flex-flow: row;\n}\n#log-entry > service-info > service-flags > service-flag {\n  height: 20px;\n  background: #aaaaaa;\n  border-radius: 5px;\n  text-align: center;\n  overflow-y: auto;\n  font-size: 14px;\n  padding: 5px 10px 10px 5px;\n}\n#main-area-wrapper {\n  background-color: #F2F2F2;\n  width: 100%;\n  min-width: 930px;\n}\n.nav-bar {\n  background-color: #0080B7;\n}\n.nav-bar .nrfconnect-logo {\n  float: right;\n  height: 55px;\n}\n.nav-bar .settings-menu {\n  float: right;\n  height: 55px;\n  width: 40px;\n  padding-top: 10px;\n  font-size: large;\n  color: white;\n}\n.nav-bar .nav-section {\n  display: inline-block;\n  padding: 10px 10px 0 10px;\n  height: 55px;\n}\n.nav-bar .nav-section.bl {\n  border-left: 1px solid #006e9e;\n}\n.main-layout > div:nth-child(1) {\n  flex: 1;\n  display: flex;\n  flex-flow: row;\n}\n.main-layout {\n  display: flex;\n  flex-flow: row;\n}\n.main-layout > div:nth-child(1) {\n  flex: 1;\n  display: flex;\n  flex-flow: column;\n}\n.main-layout > div:nth-child(1) > div:nth-child(1) {\n  flex: 1;\n  border-top: 1px solid gray;\n  box-shadow: inset 0px 0px 6px 0px gray;\n}\n.main-layout > div:nth-child(1) > div:nth-child(2) {\n  border-top: 1px solid gray;\n  overflow: hidden;\n}\n.main-layout > div:nth-child(2) {\n  box-shadow: inset 0px 5px 6px -5px gray;\n  background-color: white;\n  width: 260px;\n  border-top: 1px solid gray;\n  border-left: 1px solid gray;\n  overflow-y: auto;\n}\n.indicator {\n  display: inline-block;\n  height: 11px;\n  width: 11px;\n  border-radius: 50%;\n  border: 1px solid #645e5e;\n}\n.indicator.on {\n  background-color: #5cb85c;\n}\n.indicator.off {\n  background-color: #cfcfcf;\n}\n.indicator.error {\n  background-color: #d9534f;\n}\n#discoveredDevicesContainer {\n  padding: 10px 15px;\n}\n#discoveredDevicesContainer .spinner {\n  margin-left: 10px;\n}\n#discoveredDevicesContainer .discovery-options-expand {\n  margin-top: 3px;\n}\n#discoveredDevicesContainer .discovery-options-expand span {\n  font-size: 12px;\n}\n#discoveredDevicesContainer > .padded-row {\n  border-bottom: 1px solid #cfcfcf;\n  padding-bottom: 5px;\n}\n#discoveredDevicesContainer > .padded-row i {\n  font-size: 14px;\n}\n#discoveredDevicesContainer .discovery-options label {\n  font-size: 12px;\n  font-weight: normal;\n  margin-right: 10px;\n}\n#discoveredDevicesContainer .discovery-options .checkbox {\n  margin-top: 5px;\n  margin-bottom: 3px;\n}\n#discoveredDevicesContainer .discovery-options .form-control {\n  width: 160px;\n  height: 22px;\n  font-size: 12px;\n  padding-left: 10px;\n}\n#discoveredDevicesContainer .discovery-options .form-group {\n  margin-bottom: 0px;\n}\n#discoveredDevicesContainer .discovery-options input {\n  margin-top: 2px;\n}\n.btn-nordic {\n  border-radius: 0px;\n}\n#diagramContainer .device.standalone {\n  box-shadow: 0px 0px 4px 0px #777A89;\n}\n.device-details-view .device.standalone,\n.server-setup-view,\n.bleevent-dialog-view {\n  border-bottom: 1px solid #cfcfcf;\n}\n.device-details-view .device.standalone .flag-line,\n.server-setup-view .flag-line,\n.bleevent-dialog-view .flag-line {\n  display: none;\n}\n.device {\n  border-bottom: 1px solid lightgrey;\n  padding: 4px 0;\n  background-color: white;\n  position: relative;\n}\n.device .btn-nordic {\n  float: right;\n}\n.device .device-body > div {\n  margin-top: 5px;\n}\n.device .device-body .discovered-device-address-line {\n  height: 22px;\n}\n.device .flag-line {\n  overflow: hidden;\n}\n.device.standalone {\n  border-bottom: none;\n  padding: 0;\n  width: 280px;\n}\n.device.standalone .top-bar {\n  background-color: #E6E6E6;\n  min-height: 20px;\n}\n.device.standalone > div {\n  padding: 4px 10px;\n}\n.device.standalone strong {\n  font-size: 14px;\n}\n.device.standalone .device-body {\n  padding: 4px 10px 10px 10px;\n}\n.device.standalone .device-body .btn-nordic {\n  float: left;\n  margin-left: 10px;\n}\n.device.standalone .device-body .icon-dfu-button {\n  width: 20px;\n  height: 20px;\n}\n.device.standalone .device-body .icon-wifi {\n  margin-right: 4px;\n  float: right;\n}\n.device.standalone .device-body .dropdown {\n  min-width: 0px;\n}\n.device.standalone .device-body .dropdown .dropdown-menu {\n  background-color: #FFFFFF;\n}\n.device.standalone .device-body .dropdown .dropdown-menu li > a:focus {\n  outline: 1px solid black;\n}\n.device.standalone .device-body .dropdown .dropdown-menu li > a {\n  background-color: #FFFFFF;\n  color: #333333;\n}\n.device.standalone .device-body .dropdown .dropdown-menu li > a:hover {\n  background-color: #E6E6E6;\n}\n.device.standalone .device-body .dropdown-toggle {\n  margin-left: 5px;\n  min-width: 0px;\n  padding: 0px;\n  border: none;\n}\n.device.standalone .device-body .dropdown-toggle .icon-cog {\n  font-size: 18px;\n}\n.device.standalone .connector {\n  padding: 0px;\n}\n.device.main-device img {\n  float: left;\n  margin-right: 20px;\n  margin-top: 25px;\n  margin-left: 20px;\n}\n.device.main-device .device-body {\n  padding-top: 20px;\n}\n.dropdown {\n  padding: 0px;\n  border: 0px;\n  min-width: 143px;\n}\n.dropdown > .dropdown-toggle {\n  min-width: 143px;\n  padding-right: 20px;\n}\n.dropdown > .dropdown-toggle > .caret {\n  position: absolute;\n  left: 90%;\n  top: 45%;\n}\n.dropdown > .dropdown-menu {\n  background-color: #0080B7;\n}\n.dropdown > .dropdown-menu li a {\n  color: white;\n  background-color: #0080B7;\n}\n.dropdown > .dropdown-menu li a:hover {\n  color: white;\n  background-color: #005c84;\n}\n.dropdown > .dropdown-menu li a:focus {\n  background-color: #005c84;\n}\n.dropdown-toggle:focus {\n  outline: 5px auto;\n}\n.text-small {\n  font-size: 13px;\n}\n.text-smaller {\n  font-size: 11px;\n}\n.padded-row > :not(:last-child) {\n  margin-right: 5px;\n}\n.padded-row > :last-child {\n  margin-right: 0px;\n}\n.padded-column > :not(:last-child) {\n  margin-bottom: 5px;\n}\n.padded-column > :last-child {\n  margin-bottom: 0px;\n}\n:focus {\n  outline-color: #b3b3b3 !important;\n}\n.device-details-container {\n  padding: 20px;\n  overflow-y: hidden;\n}\n.device-details-container .device-details-view {\n  box-shadow: 0px 0px 4px 0px #777A89;\n}\n.device-details-container > div {\n  display: flex;\n  align-items: flex-start;\n  flex-direction: row;\n}\n.subtle-text {\n  color: grey;\n}\n.subtler-text {\n  color: #b3b3b3;\n}\n.truncate-text {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n.item {\n  box-shadow: 0px 0px 4px 0px #777A89;\n  background-color: white;\n}\n.flag-line > :not(:last-child) {\n  margin-right: 2px;\n}\n.flag-line > :last-child {\n  margin-right: 0px;\n}\n.device-flag,\n.role-flag {\n  border-radius: 3px;\n  font-size: 10px;\n  padding: 0px 3px;\n  margin-top: 1px;\n  margin-bottom: 1px;\n  display: inline-block;\n  color: white;\n}\n.inline-block {\n  display: inline-block;\n}\n.device-flag {\n  background: #eeeeee;\n  color: black;\n}\n.role-flag {\n  background-color: #6dcff6;\n  padding: 3px 15px;\n}\n.address-text {\n  color: grey;\n  font-size: 11px;\n}\n.adv-label {\n  display: inline-block;\n  font-size: 11px;\n  font-weight: bold;\n}\n.adv-value {\n  display: inline-block;\n  font-size: 11px;\n}\n.adv-line {\n  background-color: #F8F8F8;\n  margin: 3px 0px 0px 3px;\n  padding: 0px 3px 0px 3px;\n}\n.adv-line > :not(:last-child) {\n  margin-right: 2px;\n}\n.adv-line > :last-child {\n  margin-right: 0px;\n}\n.adv-details {\n  display: inline-block;\n  font-size: 11px;\n  color: #555555;\n}\n.adv-details i[class^='icon-']:before {\n  margin-left: 0px;\n  padding-left: 0px;\n  width: 8px;\n}\n.device-name {\n  font-size: 13px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: bold;\n}\n.discovered-device-body .discovered-device-address-line {\n  height: 22px;\n  margin-top: 5px;\n}\n.log-wrap {\n  background-color: #F2F2F2;\n}\n.log-wrap .infinite-log {\n  position: relative;\n  overflow-x: auto !important;\n  background-color: white;\n}\n.log-wrap .infinite-log > div {\n  position: absolute;\n  display: table;\n  min-width: 100%;\n}\n.log-wrap .log-entry {\n  height: 20px;\n  white-space: nowrap;\n  background-color: white;\n  display: table-row;\n  min-width: 100%;\n}\n.log-wrap .log-entry .time,\n.log-wrap .log-entry .message {\n  display: table-cell;\n  padding: 0 20px;\n  border-right: 1px dotted gray;\n  border-bottom: 1px dotted gray;\n  height: 20px;\n  line-height: 20px;\n}\n.log-wrap .log-entry .time {\n  width: 132px;\n}\n.log-wrap .log-trace,\n.log-wrap .log-debug,\n.log-wrap .log-info,\n.log-wrap .log-warning {\n  background-color: white;\n}\n.log-wrap .log-error,\n.log-wrap .log-fatal {\n  color: #a94442;\n  background-color: #f2dede;\n}\n.log-wrap .log-unknown {\n  color: #31708f;\n  background-color: #d9edf7;\n}\n.log-wrap .log-header {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n.log-wrap .log-header-text {\n  height: 30px;\n  line-height: 30px;\n  font-weight: bold;\n  padding-left: 20px;\n  font-size: 14px;\n  margin: 0;\n  flex: 1;\n}\n.log-wrap .log-header-buttons {\n  align-content: flex-end;\n  padding: 6px 6px 6px 0px;\n}\n.service-name {\n  font-size: 12px;\n  line-height: 32px;\n  float: left;\n}\n.server-setup {\n  padding: 20px;\n}\n.device-details-container .local-server {\n  margin: 0px;\n}\n.server-setup .server-setup-view,\n.server-setup .bleevent-dialog-view {\n  display: flex;\n  margin: 0px;\n  max-width: 800px;\n  box-shadow: 0px 0px 4px 0px #777A89;\n}\n.server-setup .server-setup-view .server-setup-tree,\n.server-setup .bleevent-dialog-view .server-setup-tree {\n  position: relative;\n  max-height: calc(100vh - 285px);\n}\n.server-setup .server-setup-view .server-setup-tree .service-items-wrap,\n.server-setup .bleevent-dialog-view .server-setup-tree .service-items-wrap {\n  max-height: calc(100vh - 441px);\n}\n.server-setup .server-setup-view .server-setup-tree .service-items-wrap .flag-line,\n.server-setup .bleevent-dialog-view .server-setup-tree .service-items-wrap .flag-line {\n  display: none;\n}\n.server-setup .server-setup-view .server-setup-tree .service-items-wrap .editable-field,\n.server-setup .bleevent-dialog-view .server-setup-tree .service-items-wrap .editable-field {\n  display: none;\n}\n.server-setup .server-setup-view .server-setup-tree .service-items-wrap .btn-notify,\n.server-setup .bleevent-dialog-view .server-setup-tree .service-items-wrap .btn-notify {\n  display: none;\n}\n.server-setup .server-setup-view .server-setup-tree .server-setup-buttons,\n.server-setup .bleevent-dialog-view .server-setup-tree .server-setup-buttons {\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  padding: 10px;\n  border-top: 1px solid #cfcfcf;\n}\n.server-setup .server-setup-view .server-setup-tree .server-setup-buttons .btn,\n.server-setup .bleevent-dialog-view .server-setup-tree .server-setup-buttons .btn {\n  float: right;\n  margin-left: 5px;\n}\n.server-setup .server-setup-view .server-setup-tree .device,\n.server-setup .bleevent-dialog-view .server-setup-tree .device {\n  border-bottom: 1px solid #cfcfcf;\n}\n.server-setup .server-setup-view .selected-component-editor-border,\n.server-setup .bleevent-dialog-view .selected-component-editor-border {\n  border-left: 8px solid #b3e1f5;\n}\n.server-setup .server-setup-view .item-editor,\n.server-setup .bleevent-dialog-view .item-editor {\n  flex: 1;\n  min-width: 350px;\n  overflow: auto;\n  height: calc(100vh - 285px);\n}\n.server-setup .server-setup-view .item-editor > form,\n.server-setup .bleevent-dialog-view .item-editor > form,\n.server-setup .server-setup-view .item-editor .nothing-selected,\n.server-setup .bleevent-dialog-view .item-editor .nothing-selected {\n  height: calc(100vh - 285px);\n  padding: 20px;\n}\n.server-setup .server-setup-view .item-editor .nothing-selected,\n.server-setup .bleevent-dialog-view .item-editor .nothing-selected {\n  border-left: 1px solid #cfcfcf;\n}\n.server-setup .server-setup-view .item-editor .uuid-lookup,\n.server-setup .bleevent-dialog-view .item-editor .uuid-lookup {\n  margin-bottom: 0px;\n  padding: 0px;\n}\n.server-setup .server-setup-view .item-editor .form-horizontal .has-feedback .form-control-feedback,\n.server-setup .bleevent-dialog-view .item-editor .form-horizontal .has-feedback .form-control-feedback {\n  right: 45px;\n}\n.server-setup .server-setup-view .item-editor .form-horizontal .has-feedback .form-control,\n.server-setup .bleevent-dialog-view .item-editor .form-horizontal .has-feedback .form-control {\n  padding-right: 20px;\n}\n.bleevent-dialog .server-setup-view,\n.bleevent-dialog .bleevent-dialog-view {\n  display: flex;\n  margin: 0px;\n  max-width: 800px;\n  box-shadow: 0px 0px 4px 0px #777A89;\n}\n.bleevent-dialog .server-setup-view .server-setup-tree,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree {\n  position: relative;\n  max-height: calc(100vh - 285px);\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .service-items-wrap,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .service-items-wrap {\n  max-height: calc(100vh - 441px);\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .service-items-wrap .flag-line,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .service-items-wrap .flag-line {\n  display: none;\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .service-items-wrap .editable-field,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .service-items-wrap .editable-field {\n  display: none;\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .service-items-wrap .btn-notify,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .service-items-wrap .btn-notify {\n  display: none;\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .server-setup-buttons,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .server-setup-buttons {\n  position: absolute;\n  bottom: 0px;\n  width: 100%;\n  padding: 10px;\n  border-top: 1px solid #cfcfcf;\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .server-setup-buttons .btn,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .server-setup-buttons .btn {\n  float: right;\n  margin-left: 5px;\n}\n.bleevent-dialog .server-setup-view .server-setup-tree .device,\n.bleevent-dialog .bleevent-dialog-view .server-setup-tree .device {\n  border-bottom: 1px solid #cfcfcf;\n}\n.bleevent-dialog .server-setup-view .selected-component-editor-border,\n.bleevent-dialog .bleevent-dialog-view .selected-component-editor-border {\n  border-left: 8px solid #b3e1f5;\n}\n.bleevent-dialog .server-setup-view .item-editor,\n.bleevent-dialog .bleevent-dialog-view .item-editor {\n  flex: 1;\n  min-width: 350px;\n  overflow: auto;\n}\n.bleevent-dialog .server-setup-view .item-editor .nothing-selected,\n.bleevent-dialog .bleevent-dialog-view .item-editor .nothing-selected {\n  border-left: 1px solid #cfcfcf;\n}\n.local-server .service-items-wrap {\n  max-height: calc(100vh - 386px);\n}\n.remote-server .service-items-wrap {\n  max-height: calc(100vh - 444px);\n}\n.device-details-view,\n.server-setup-view,\n.bleevent-dialog-view {\n  background-color: white;\n  margin: 80px 0px 0px 20px;\n}\n.device-details-view .service-items-wrap,\n.server-setup-view .service-items-wrap,\n.bleevent-dialog-view .service-items-wrap {\n  overflow-y: auto;\n  overflow-x: hidden;\n  width: 280px;\n}\n.device-details-view .enumerating-items-wrap,\n.server-setup-view .enumerating-items-wrap,\n.bleevent-dialog-view .enumerating-items-wrap {\n  display: flex;\n}\n.device-details-view .enumerating-items-wrap .enumerating-content,\n.server-setup-view .enumerating-items-wrap .enumerating-content,\n.bleevent-dialog-view .enumerating-items-wrap .enumerating-content {\n  width: 100%;\n  padding: 4px 0px;\n  border-bottom: 1px solid #cfcfcf;\n}\n.device-details-view .bar1,\n.server-setup-view .bar1,\n.bleevent-dialog-view .bar1,\n.device-details-view .bar2,\n.server-setup-view .bar2,\n.bleevent-dialog-view .bar2,\n.device-details-view .bar3,\n.server-setup-view .bar3,\n.bleevent-dialog-view .bar3 {\n  width: 8px;\n  border-bottom: 1px solid white;\n  margin-right: 1px;\n}\n.device-details-view .bar1,\n.server-setup-view .bar1,\n.bleevent-dialog-view .bar1 {\n  background-color: #b3e1f5;\n}\n.device-details-view .bar2,\n.server-setup-view .bar2,\n.bleevent-dialog-view .bar2 {\n  background-color: #66c4eb;\n}\n.device-details-view .bar3,\n.server-setup-view .bar3,\n.bleevent-dialog-view .bar3 {\n  background-color: #009cde;\n}\n.device-details-view .service-item,\n.server-setup-view .service-item,\n.bleevent-dialog-view .service-item,\n.device-details-view .characteristic-item,\n.server-setup-view .characteristic-item,\n.bleevent-dialog-view .characteristic-item,\n.device-details-view .descriptor-item,\n.server-setup-view .descriptor-item,\n.bleevent-dialog-view .descriptor-item {\n  padding: 0;\n  display: flex;\n  align-items: stretch;\n  min-height: 40px;\n}\n.device-details-view .service-item .expand-area,\n.server-setup-view .service-item .expand-area,\n.bleevent-dialog-view .service-item .expand-area,\n.device-details-view .characteristic-item .expand-area,\n.server-setup-view .characteristic-item .expand-area,\n.bleevent-dialog-view .characteristic-item .expand-area,\n.device-details-view .descriptor-item .expand-area,\n.server-setup-view .descriptor-item .expand-area,\n.bleevent-dialog-view .descriptor-item .expand-area {\n  cursor: pointer;\n  display: flex;\n}\n.device-details-view .service-item .expand-area .icon-wrap,\n.server-setup-view .service-item .expand-area .icon-wrap,\n.bleevent-dialog-view .service-item .expand-area .icon-wrap,\n.device-details-view .characteristic-item .expand-area .icon-wrap,\n.server-setup-view .characteristic-item .expand-area .icon-wrap,\n.bleevent-dialog-view .characteristic-item .expand-area .icon-wrap,\n.device-details-view .descriptor-item .expand-area .icon-wrap,\n.server-setup-view .descriptor-item .expand-area .icon-wrap,\n.bleevent-dialog-view .descriptor-item .expand-area .icon-wrap {\n  border-bottom: 1px solid #cfcfcf;\n}\n.device-details-view .service-item .expand-area .icon-wrap .icon-right-dir,\n.server-setup-view .service-item .expand-area .icon-wrap .icon-right-dir,\n.bleevent-dialog-view .service-item .expand-area .icon-wrap .icon-right-dir,\n.device-details-view .characteristic-item .expand-area .icon-wrap .icon-right-dir,\n.server-setup-view .characteristic-item .expand-area .icon-wrap .icon-right-dir,\n.bleevent-dialog-view .characteristic-item .expand-area .icon-wrap .icon-right-dir,\n.device-details-view .descriptor-item .expand-area .icon-wrap .icon-right-dir,\n.server-setup-view .descriptor-item .expand-area .icon-wrap .icon-right-dir,\n.bleevent-dialog-view .descriptor-item .expand-area .icon-wrap .icon-right-dir {\n  margin-left: 2px;\n}\n.device-details-view .service-item .expand-area .icon-wrap .icon-down-dir,\n.server-setup-view .service-item .expand-area .icon-wrap .icon-down-dir,\n.bleevent-dialog-view .service-item .expand-area .icon-wrap .icon-down-dir,\n.device-details-view .characteristic-item .expand-area .icon-wrap .icon-down-dir,\n.server-setup-view .characteristic-item .expand-area .icon-wrap .icon-down-dir,\n.bleevent-dialog-view .characteristic-item .expand-area .icon-wrap .icon-down-dir,\n.device-details-view .descriptor-item .expand-area .icon-wrap .icon-down-dir,\n.server-setup-view .descriptor-item .expand-area .icon-wrap .icon-down-dir,\n.bleevent-dialog-view .descriptor-item .expand-area .icon-wrap .icon-down-dir {\n  margin-left: 0px;\n}\n.device-details-view .icon-wrap,\n.server-setup-view .icon-wrap,\n.bleevent-dialog-view .icon-wrap {\n  width: 8px;\n  flex: 1;\n  line-height: 40px;\n  color: #0080B7;\n}\n.device-details-view .content-wrap,\n.server-setup-view .content-wrap,\n.bleevent-dialog-view .content-wrap {\n  cursor: pointer;\n  display: flex;\n  border-bottom: 1px solid #cfcfcf;\n  flex: 1;\n}\n.device-details-view .content-wrap .content,\n.server-setup-view .content-wrap .content,\n.bleevent-dialog-view .content-wrap .content {\n  align-self: center;\n  padding: 5px 0;\n  margin-left: 8px;\n  width: 100%;\n}\n.device-details-view .content-wrap .content .editable,\n.server-setup-view .content-wrap .content .editable,\n.bleevent-dialog-view .content-wrap .content .editable {\n  cursor: text;\n  padding-top: 5px;\n}\n.device-details-view .content-wrap .content .editable:hover span,\n.server-setup-view .content-wrap .content .editable:hover span,\n.bleevent-dialog-view .content-wrap .content .editable:hover span {\n  background: #eeeeee;\n}\n.device-details-view .content-wrap .content .editable > span,\n.server-setup-view .content-wrap .content .editable > span,\n.bleevent-dialog-view .content-wrap .content .editable > span {\n  min-width: 86%;\n  max-width: 86%;\n  display: inline-block;\n}\n.device-details-view .content-wrap .content .btn,\n.server-setup-view .content-wrap .content .btn,\n.bleevent-dialog-view .content-wrap .content .btn {\n  padding: 0 1px 0 1px;\n  margin-right: 5px;\n  float: right;\n  font-size: 12px;\n}\n.device-details-view .content-wrap .content .btn > img,\n.server-setup-view .content-wrap .content .btn > img,\n.bleevent-dialog-view .content-wrap .content .btn > img {\n  width: 32px;\n  height: 32px;\n}\n.device-details-view .content-wrap .content textarea,\n.server-setup-view .content-wrap .content textarea,\n.bleevent-dialog-view .content-wrap .content textarea {\n  min-width: 86%;\n  max-width: 86%;\n  font-size: 10px;\n  background-color: #eeeeee;\n}\n.device-details-view .characteristic-item .content-wrap,\n.server-setup-view .characteristic-item .content-wrap,\n.bleevent-dialog-view .characteristic-item .content-wrap,\n.device-details-view .descriptor-item .content-wrap,\n.server-setup-view .descriptor-item .content-wrap,\n.bleevent-dialog-view .descriptor-item .content-wrap {\n  font-size: 11px;\n}\n.device-details-view .characteristic-item .error-label,\n.server-setup-view .characteristic-item .error-label,\n.bleevent-dialog-view .characteristic-item .error-label,\n.device-details-view .descriptor-item .error-label,\n.server-setup-view .descriptor-item .error-label,\n.bleevent-dialog-view .descriptor-item .error-label {\n  margin: 1px 3px 1px -3px;\n  padding: 2px 2px 2px 3px;\n  border: 1px solid #cfcfcf;\n  background-color: #b3e1f5;\n}\n.device-details-view .characteristic-item .hide,\n.server-setup-view .characteristic-item .hide,\n.bleevent-dialog-view .characteristic-item .hide,\n.device-details-view .descriptor-item .hide,\n.server-setup-view .descriptor-item .hide,\n.bleevent-dialog-view .descriptor-item .hide {\n  display: none;\n}\n.device-details-view .add-new,\n.server-setup-view .add-new,\n.bleevent-dialog-view .add-new {\n  display: flex;\n  font-size: 11px;\n  color: #0080B7;\n}\n.device-details-view .add-new:hover,\n.server-setup-view .add-new:hover,\n.bleevent-dialog-view .add-new:hover,\n.device-details-view .add-new:hover .icon-wrap,\n.server-setup-view .add-new:hover .icon-wrap,\n.bleevent-dialog-view .add-new:hover .icon-wrap {\n  color: #66c4eb;\n}\n.device-details-view .add-new .icon-wrap,\n.server-setup-view .add-new .icon-wrap,\n.bleevent-dialog-view .add-new .icon-wrap {\n  margin-right: 5px;\n  line-height: 10px;\n}\n.connection-info-button {\n  z-index: 1;\n  font-size: 14px;\n}\n.connection-info-button.btn-xs {\n  padding: 0px;\n  border-radius: 15px;\n}\n.connection-info-button:hover {\n  /*box-shadow: 0px 0px 6px rgba(200,200,200,1);*/\n}\n.connection-info-button .icon-encircled:hover {\n  color: #e0e0e0;\n}\n.connection-info-button .icon-encircled:active {\n  color: #b3b3b3;\n}\n.editable-field .tooltip {\n  box-shadow: 0px 3px 6px #e2e2e2;\n  padding: 5px 10px;\n  opacity: 1;\n  margin: 0;\n  bottom: 6px;\n}\n.editable-field .tooltip .tooltip-arrow {\n  border-top-color: #ebccd1;\n  bottom: -6px;\n}\n.editable-field .alert-wrap {\n  position: relative;\n}\n.editable-field .editable-field-editor-wrap {\n  font-size: 0;\n}\n.editable-field .editable-field-editor-wrap > * {\n  font-size: 11px;\n}\n.editable-field .subtle-text {\n  padding-top: 5px;\n}\n.nordic-form-control {\n  margin-top: 4px;\n  padding-bottom: 0px;\n  padding-top: 0px;\n  padding-right: 0px;\n  height: 25px;\n}\n.nordic-form-group {\n  margin-bottom: 10px;\n}\nhr {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n.popover-content {\n  padding: 0px;\n}\n.popover-content form {\n  margin: 5px 10px;\n}\n.popover-content .form-group {\n  margin-bottom: 5px;\n}\n.popover-content button {\n  margin-left: 10px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n}\n.popover-content label {\n  text-align: left!important;\n  font-weight: normal;\n}\n.connection-request-modal {\n  width: 60%;\n}\n.connection-request-modal .form-group {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n.connection-request-modal .form-group input[type=\"number\"] {\n  width: 60px;\n  display: inline;\n}\n.connection-request-modal .form-group > div > label {\n  margin-right: 8px;\n}\n.popover {\n  border-radius: 3px 3px 0px 0px;\n  padding: 0px;\n}\n.popover .spinner {\n  margin-left: 25px;\n}\n.popover .popover-title {\n  background-color: #E6E6E6;\n  border-radius: 3px 3px 0px 0px;\n}\n.popover .connection-parameters {\n  margin: 4px 4px 4px 4px;\n  display: inline-block;\n}\n.popover .connection-parameter-label {\n  margin-bottom: 4px;\n}\n.popover .connection-parameter-value {\n  text-align: right;\n  margin-bottom: 4px;\n}\n.popover .connection-security {\n  float: left;\n  margin: 10px 15px 0px 15px;\n}\n.events-modal .modal-dialog {\n  min-width: 60%;\n}\n.events-modal .modal-title {\n  border-bottom: none;\n}\n.events-modal .modal-footer {\n  border-top: none;\n}\n.events-modal .device-details-view,\n.events-modal .server-setup-view,\n.events-modal .bleevent-dialog-view {\n  margin-left: 4px;\n  margin-right: 4px;\n  margin-bottom: 0px;\n  margin-top: 0px;\n  max-width: none;\n}\n.events-modal .device-details-view .service-items-wrap,\n.events-modal .server-setup-view .service-items-wrap,\n.events-modal .bleevent-dialog-view .service-items-wrap {\n  width: 230px;\n}\n.events-modal .device-details-view .service-items-wrap .content,\n.events-modal .server-setup-view .service-items-wrap .content,\n.events-modal .bleevent-dialog-view .service-items-wrap .content {\n  display: flex;\n  align-items: center;\n  margin-left: 0px;\n}\n.events-modal .device-details-view .service-items-wrap .content [class^=\"icon-\"]:before,\n.events-modal .server-setup-view .service-items-wrap .content [class^=\"icon-\"]:before,\n.events-modal .bleevent-dialog-view .service-items-wrap .content [class^=\"icon-\"]:before {\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.events-modal .device-details-view .item-editor,\n.events-modal .server-setup-view .item-editor,\n.events-modal .bleevent-dialog-view .item-editor {\n  border-left: 1px solid #cfcfcf;\n}\n.events-modal .device-details-view .item-editor .event-header,\n.events-modal .server-setup-view .item-editor .event-header,\n.events-modal .bleevent-dialog-view .item-editor .event-header {\n  padding-top: 9px;\n  border-bottom: 1px solid #cfcfcf;\n  text-align: center;\n  font-weight: bold;\n}\n.events-modal .device-details-view .item-editor .form-horizontal,\n.events-modal .server-setup-view .item-editor .form-horizontal,\n.events-modal .bleevent-dialog-view .item-editor .form-horizontal {\n  margin-top: 20px;\n  padding-bottom: 2px;\n  border-bottom: 1px solid #cfcfcf;\n}\n.events-modal .device-details-view .item-editor .form-horizontal .btn-nordic,\n.events-modal .server-setup-view .item-editor .form-horizontal .btn-nordic,\n.events-modal .bleevent-dialog-view .item-editor .form-horizontal .btn-nordic {\n  float: right;\n  margin-top: 15px;\n  margin-left: 15px;\n}\n.events-modal .device-details-view .item-editor .form-horizontal .form-group,\n.events-modal .server-setup-view .item-editor .form-horizontal .form-group,\n.events-modal .bleevent-dialog-view .item-editor .form-horizontal .form-group {\n  margin-left: 15px;\n  margin-right: 15px;\n}\n.events-modal .device-details-view .item-editor .nothing-selected,\n.events-modal .server-setup-view .item-editor .nothing-selected,\n.events-modal .bleevent-dialog-view .item-editor .nothing-selected {\n  border-left: none;\n}\n.success-item {\n  background-color: #eeeeee;\n  color: #5cb85c;\n  pointer-events: none;\n}\n.failed-item {\n  background-color: #eeeeee;\n  color: #d9534f;\n  pointer-events: none;\n}\n.left-space {\n  margin-left: 5px;\n}\n.countdown-timer {\n  font-size: 1.6em;\n  margin-left: 30px;\n}\n.nordic-dropdown {\n  min-width: 220px;\n  text-align: left;\n}\n.nordic-dropdown .dropdown-menu {\n  background-color: #FFFFFF;\n}\n.nordic-dropdown .dropdown-menu li > a:focus {\n  outline: 1px solid black;\n}\n.nordic-dropdown .dropdown-menu li > a {\n  background-color: #FFFFFF;\n  color: #333333;\n}\n.nordic-dropdown .dropdown-menu li > a:hover {\n  background-color: #E6E6E6;\n}\n.adv-setup .adv-col {\n  display: flex;\n  flex-flow: column;\n  align-items: stretch;\n}\n.adv-setup .adv-row {\n  display: flex;\n  flex-flow: row;\n  justify-content: center;\n}\n.adv-setup .adv-pkt,\n.adv-setup .scan-rsp-pkt {\n  flex: 1;\n  margin: 10px;\n}\n.adv-setup .type-label {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n.adv-setup .adv-drop-container,\n.adv-setup .adv-value-container {\n  display: inline-block;\n  vertical-align: top;\n  margin: 10px;\n}\n.adv-setup .adv-value-container {\n  width: 340px;\n}\n.adv-setup .form-group {\n  width: 100%;\n}\n.adv-setup table {\n  width: 100%;\n}\n.adv-setup .btn-add {\n  margin-bottom: 20px;\n  align-self: center;\n}\n.adv-setup .adv-header {\n  margin-bottom: 10px;\n  font-weight: bold;\n}\n.adv-setup .adv-table-container {\n  padding: 10px;\n  border: 1px solid lightgray;\n}\n.adv-setup .form-group {\n  display: inline-block;\n}\n.adv-setup .adv-dropdown {\n  min-width: 220px;\n  text-align: left;\n}\n.adv-setup .adv-dropdown .dropdown-menu {\n  background-color: #FFFFFF;\n}\n.adv-setup .adv-dropdown .dropdown-menu li > a:focus {\n  outline: 1px solid black;\n}\n.adv-setup .adv-dropdown .dropdown-menu li > a {\n  background-color: #FFFFFF;\n  color: #333333;\n}\n.adv-setup .adv-dropdown .dropdown-menu li > a:hover {\n  background-color: #E6E6E6;\n}\n.adv-setup .adv-uuid-lookup {\n  margin-left: 4px;\n}\n.adv-setup .error-label {\n  margin: 5px;\n  padding: 5px;\n}\n.scroll-menu {\n  overflow-x: auto;\n  max-height: 300px;\n  top: 34px;\n  width: 300px;\n}\n.uuid-lookup {\n  display: inline-block;\n  vertical-align: bottom;\n  margin-bottom: 22px;\n  padding: 3px;\n}\n.uuid-lookup .dropdown-toggle {\n  margin-left: 0px;\n  min-width: 0px;\n  padding: 0px;\n}\n.uuid-lookup .dropdown-toggle span[class^='icon-'] {\n  font-size: 18px;\n  padding: 3px;\n}\n.uuid-dropdown {\n  min-width: 220px;\n  text-align: left;\n  min-width: 0px;\n}\n.uuid-dropdown .dropdown-menu {\n  background-color: #FFFFFF;\n}\n.uuid-dropdown .dropdown-menu li > a:focus {\n  outline: 1px solid black;\n}\n.uuid-dropdown .dropdown-menu li > a {\n  background-color: #FFFFFF;\n  color: #333333;\n}\n.uuid-dropdown .dropdown-menu li > a:hover {\n  background-color: #E6E6E6;\n}\n.top-spacer {\n  margin-top: 10px;\n}\n.serialSerialnumber {\n  font-size: 12px;\n}\n.brand-background {\n  background-color: #b3e1f5;\n}\n.neutral-background {\n  background-color: #FFFFFF;\n}\n", ""]);
	
	// exports


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(31)();
	// imports
	
	
	// module
	exports.push([module.id, ".colordefinition-brand-main {\n  color: #009CDE;\n}\n.colordefinition-brand-primary {\n  color: #0080B7;\n}\n.colordefinition-brand-info {\n  color: #6dcff6;\n}\n.colordefinition-brand-base {\n  color: #ffffff;\n}\n.colordefinition-brand-success {\n  color: #5cb85c;\n}\n.colordefinition-brand-warning {\n  color: #f0ad4e;\n}\n.colordefinition-brand-danger {\n  color: #d9534f;\n}\n.colordefinition-bar1-color {\n  color: #b3e1f5;\n}\n.colordefinition-bar2-color {\n  color: #66c4eb;\n}\n.colordefinition-bar3-color {\n  color: #009cde;\n}\n.colordefinition-icon-color {\n  color: #0080B7;\n}\n", ""]);
	
	// exports


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(31)();
	// imports
	
	
	// module
	exports.push([module.id, "/* Copyright (c) 2016 Nordic Semiconductor. All Rights Reserved.\n *\n * The information contained herein is property of Nordic Semiconductor ASA.\n * Terms and conditions of usage are described in detail in NORDIC\n * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.\n *\n * Licensees are granted free, non-transferable use of the information. NO\n * WARRANTY of ANY KIND is provided. This heading must NOT be removed from\n * the file.\n *\n */\n/*!\n * Bootstrap v3.3.7 (http://getbootstrap.com)\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\nbody {\n  margin: 0;\n}\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n  vertical-align: baseline;\n}\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n[hidden],\ntemplate {\n  display: none;\n}\na {\n  background-color: transparent;\n}\na:active,\na:hover {\n  outline: 0;\n}\nabbr[title] {\n  border-bottom: 1px dotted;\n}\nb,\nstrong {\n  font-weight: bold;\n}\ndfn {\n  font-style: italic;\n}\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\nmark {\n  background: #ff0;\n  color: #000;\n}\nsmall {\n  font-size: 80%;\n}\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\nsup {\n  top: -0.5em;\n}\nsub {\n  bottom: -0.25em;\n}\nimg {\n  border: 0;\n}\nsvg:not(:root) {\n  overflow: hidden;\n}\nfigure {\n  margin: 1em 40px;\n}\nhr {\n  box-sizing: content-box;\n  height: 0;\n}\npre {\n  overflow: auto;\n}\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n  font-size: 1em;\n}\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  color: inherit;\n  font: inherit;\n  margin: 0;\n}\nbutton {\n  overflow: visible;\n}\nbutton,\nselect {\n  text-transform: none;\n}\nbutton,\nhtml input[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button;\n  cursor: pointer;\n}\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\ninput {\n  line-height: normal;\n}\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  box-sizing: border-box;\n  padding: 0;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;\n  box-sizing: content-box;\n}\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\nlegend {\n  border: 0;\n  padding: 0;\n}\ntextarea {\n  overflow: auto;\n}\noptgroup {\n  font-weight: bold;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\ntd,\nth {\n  padding: 0;\n}\n/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */\n@media print {\n  *,\n  *:before,\n  *:after {\n    background: transparent !important;\n    color: #000 !important;\n    box-shadow: none !important;\n    text-shadow: none !important;\n  }\n  a,\n  a:visited {\n    text-decoration: underline;\n  }\n  a[href]:after {\n    content: \" (\" attr(href) \")\";\n  }\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\";\n  }\n  a[href^=\"#\"]:after,\n  a[href^=\"javascript:\"]:after {\n    content: \"\";\n  }\n  pre,\n  blockquote {\n    border: 1px solid #999;\n    page-break-inside: avoid;\n  }\n  thead {\n    display: table-header-group;\n  }\n  tr,\n  img {\n    page-break-inside: avoid;\n  }\n  img {\n    max-width: 100% !important;\n  }\n  p,\n  h2,\n  h3 {\n    orphans: 3;\n    widows: 3;\n  }\n  h2,\n  h3 {\n    page-break-after: avoid;\n  }\n  .navbar {\n    display: none;\n  }\n  .btn > .caret,\n  .dropup > .btn > .caret {\n    border-top-color: #000 !important;\n  }\n  .label {\n    border: 1px solid #000;\n  }\n  .table {\n    border-collapse: collapse !important;\n  }\n  .table td,\n  .table th {\n    background-color: #fff !important;\n  }\n  .table-bordered th,\n  .table-bordered td {\n    border: 1px solid #ddd !important;\n  }\n}\n@font-face {\n  font-family: 'Glyphicons Halflings';\n  src: url(" + __webpack_require__(54) + ");\n  src: url(" + __webpack_require__(54) + "?#iefix) format('embedded-opentype'), url(" + __webpack_require__(132) + ") format('woff2'), url(" + __webpack_require__(131) + ") format('woff'), url(" + __webpack_require__(130) + ") format('truetype'), url(" + __webpack_require__(129) + "#glyphicons_halflingsregular) format('svg');\n}\n.glyphicon {\n  position: relative;\n  top: 1px;\n  display: inline-block;\n  font-family: 'Glyphicons Halflings';\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n.glyphicon-asterisk:before {\n  content: \"*\";\n}\n.glyphicon-plus:before {\n  content: \"+\";\n}\n.glyphicon-euro:before,\n.glyphicon-eur:before {\n  content: \"\\20AC\";\n}\n.glyphicon-minus:before {\n  content: \"\\2212\";\n}\n.glyphicon-cloud:before {\n  content: \"\\2601\";\n}\n.glyphicon-envelope:before {\n  content: \"\\2709\";\n}\n.glyphicon-pencil:before {\n  content: \"\\270F\";\n}\n.glyphicon-glass:before {\n  content: \"\\E001\";\n}\n.glyphicon-music:before {\n  content: \"\\E002\";\n}\n.glyphicon-search:before {\n  content: \"\\E003\";\n}\n.glyphicon-heart:before {\n  content: \"\\E005\";\n}\n.glyphicon-star:before {\n  content: \"\\E006\";\n}\n.glyphicon-star-empty:before {\n  content: \"\\E007\";\n}\n.glyphicon-user:before {\n  content: \"\\E008\";\n}\n.glyphicon-film:before {\n  content: \"\\E009\";\n}\n.glyphicon-th-large:before {\n  content: \"\\E010\";\n}\n.glyphicon-th:before {\n  content: \"\\E011\";\n}\n.glyphicon-th-list:before {\n  content: \"\\E012\";\n}\n.glyphicon-ok:before {\n  content: \"\\E013\";\n}\n.glyphicon-remove:before {\n  content: \"\\E014\";\n}\n.glyphicon-zoom-in:before {\n  content: \"\\E015\";\n}\n.glyphicon-zoom-out:before {\n  content: \"\\E016\";\n}\n.glyphicon-off:before {\n  content: \"\\E017\";\n}\n.glyphicon-signal:before {\n  content: \"\\E018\";\n}\n.glyphicon-cog:before {\n  content: \"\\E019\";\n}\n.glyphicon-trash:before {\n  content: \"\\E020\";\n}\n.glyphicon-home:before {\n  content: \"\\E021\";\n}\n.glyphicon-file:before {\n  content: \"\\E022\";\n}\n.glyphicon-time:before {\n  content: \"\\E023\";\n}\n.glyphicon-road:before {\n  content: \"\\E024\";\n}\n.glyphicon-download-alt:before {\n  content: \"\\E025\";\n}\n.glyphicon-download:before {\n  content: \"\\E026\";\n}\n.glyphicon-upload:before {\n  content: \"\\E027\";\n}\n.glyphicon-inbox:before {\n  content: \"\\E028\";\n}\n.glyphicon-play-circle:before {\n  content: \"\\E029\";\n}\n.glyphicon-repeat:before {\n  content: \"\\E030\";\n}\n.glyphicon-refresh:before {\n  content: \"\\E031\";\n}\n.glyphicon-list-alt:before {\n  content: \"\\E032\";\n}\n.glyphicon-lock:before {\n  content: \"\\E033\";\n}\n.glyphicon-flag:before {\n  content: \"\\E034\";\n}\n.glyphicon-headphones:before {\n  content: \"\\E035\";\n}\n.glyphicon-volume-off:before {\n  content: \"\\E036\";\n}\n.glyphicon-volume-down:before {\n  content: \"\\E037\";\n}\n.glyphicon-volume-up:before {\n  content: \"\\E038\";\n}\n.glyphicon-qrcode:before {\n  content: \"\\E039\";\n}\n.glyphicon-barcode:before {\n  content: \"\\E040\";\n}\n.glyphicon-tag:before {\n  content: \"\\E041\";\n}\n.glyphicon-tags:before {\n  content: \"\\E042\";\n}\n.glyphicon-book:before {\n  content: \"\\E043\";\n}\n.glyphicon-bookmark:before {\n  content: \"\\E044\";\n}\n.glyphicon-print:before {\n  content: \"\\E045\";\n}\n.glyphicon-camera:before {\n  content: \"\\E046\";\n}\n.glyphicon-font:before {\n  content: \"\\E047\";\n}\n.glyphicon-bold:before {\n  content: \"\\E048\";\n}\n.glyphicon-italic:before {\n  content: \"\\E049\";\n}\n.glyphicon-text-height:before {\n  content: \"\\E050\";\n}\n.glyphicon-text-width:before {\n  content: \"\\E051\";\n}\n.glyphicon-align-left:before {\n  content: \"\\E052\";\n}\n.glyphicon-align-center:before {\n  content: \"\\E053\";\n}\n.glyphicon-align-right:before {\n  content: \"\\E054\";\n}\n.glyphicon-align-justify:before {\n  content: \"\\E055\";\n}\n.glyphicon-list:before {\n  content: \"\\E056\";\n}\n.glyphicon-indent-left:before {\n  content: \"\\E057\";\n}\n.glyphicon-indent-right:before {\n  content: \"\\E058\";\n}\n.glyphicon-facetime-video:before {\n  content: \"\\E059\";\n}\n.glyphicon-picture:before {\n  content: \"\\E060\";\n}\n.glyphicon-map-marker:before {\n  content: \"\\E062\";\n}\n.glyphicon-adjust:before {\n  content: \"\\E063\";\n}\n.glyphicon-tint:before {\n  content: \"\\E064\";\n}\n.glyphicon-edit:before {\n  content: \"\\E065\";\n}\n.glyphicon-share:before {\n  content: \"\\E066\";\n}\n.glyphicon-check:before {\n  content: \"\\E067\";\n}\n.glyphicon-move:before {\n  content: \"\\E068\";\n}\n.glyphicon-step-backward:before {\n  content: \"\\E069\";\n}\n.glyphicon-fast-backward:before {\n  content: \"\\E070\";\n}\n.glyphicon-backward:before {\n  content: \"\\E071\";\n}\n.glyphicon-play:before {\n  content: \"\\E072\";\n}\n.glyphicon-pause:before {\n  content: \"\\E073\";\n}\n.glyphicon-stop:before {\n  content: \"\\E074\";\n}\n.glyphicon-forward:before {\n  content: \"\\E075\";\n}\n.glyphicon-fast-forward:before {\n  content: \"\\E076\";\n}\n.glyphicon-step-forward:before {\n  content: \"\\E077\";\n}\n.glyphicon-eject:before {\n  content: \"\\E078\";\n}\n.glyphicon-chevron-left:before {\n  content: \"\\E079\";\n}\n.glyphicon-chevron-right:before {\n  content: \"\\E080\";\n}\n.glyphicon-plus-sign:before {\n  content: \"\\E081\";\n}\n.glyphicon-minus-sign:before {\n  content: \"\\E082\";\n}\n.glyphicon-remove-sign:before {\n  content: \"\\E083\";\n}\n.glyphicon-ok-sign:before {\n  content: \"\\E084\";\n}\n.glyphicon-question-sign:before {\n  content: \"\\E085\";\n}\n.glyphicon-info-sign:before {\n  content: \"\\E086\";\n}\n.glyphicon-screenshot:before {\n  content: \"\\E087\";\n}\n.glyphicon-remove-circle:before {\n  content: \"\\E088\";\n}\n.glyphicon-ok-circle:before {\n  content: \"\\E089\";\n}\n.glyphicon-ban-circle:before {\n  content: \"\\E090\";\n}\n.glyphicon-arrow-left:before {\n  content: \"\\E091\";\n}\n.glyphicon-arrow-right:before {\n  content: \"\\E092\";\n}\n.glyphicon-arrow-up:before {\n  content: \"\\E093\";\n}\n.glyphicon-arrow-down:before {\n  content: \"\\E094\";\n}\n.glyphicon-share-alt:before {\n  content: \"\\E095\";\n}\n.glyphicon-resize-full:before {\n  content: \"\\E096\";\n}\n.glyphicon-resize-small:before {\n  content: \"\\E097\";\n}\n.glyphicon-exclamation-sign:before {\n  content: \"\\E101\";\n}\n.glyphicon-gift:before {\n  content: \"\\E102\";\n}\n.glyphicon-leaf:before {\n  content: \"\\E103\";\n}\n.glyphicon-fire:before {\n  content: \"\\E104\";\n}\n.glyphicon-eye-open:before {\n  content: \"\\E105\";\n}\n.glyphicon-eye-close:before {\n  content: \"\\E106\";\n}\n.glyphicon-warning-sign:before {\n  content: \"\\E107\";\n}\n.glyphicon-plane:before {\n  content: \"\\E108\";\n}\n.glyphicon-calendar:before {\n  content: \"\\E109\";\n}\n.glyphicon-random:before {\n  content: \"\\E110\";\n}\n.glyphicon-comment:before {\n  content: \"\\E111\";\n}\n.glyphicon-magnet:before {\n  content: \"\\E112\";\n}\n.glyphicon-chevron-up:before {\n  content: \"\\E113\";\n}\n.glyphicon-chevron-down:before {\n  content: \"\\E114\";\n}\n.glyphicon-retweet:before {\n  content: \"\\E115\";\n}\n.glyphicon-shopping-cart:before {\n  content: \"\\E116\";\n}\n.glyphicon-folder-close:before {\n  content: \"\\E117\";\n}\n.glyphicon-folder-open:before {\n  content: \"\\E118\";\n}\n.glyphicon-resize-vertical:before {\n  content: \"\\E119\";\n}\n.glyphicon-resize-horizontal:before {\n  content: \"\\E120\";\n}\n.glyphicon-hdd:before {\n  content: \"\\E121\";\n}\n.glyphicon-bullhorn:before {\n  content: \"\\E122\";\n}\n.glyphicon-bell:before {\n  content: \"\\E123\";\n}\n.glyphicon-certificate:before {\n  content: \"\\E124\";\n}\n.glyphicon-thumbs-up:before {\n  content: \"\\E125\";\n}\n.glyphicon-thumbs-down:before {\n  content: \"\\E126\";\n}\n.glyphicon-hand-right:before {\n  content: \"\\E127\";\n}\n.glyphicon-hand-left:before {\n  content: \"\\E128\";\n}\n.glyphicon-hand-up:before {\n  content: \"\\E129\";\n}\n.glyphicon-hand-down:before {\n  content: \"\\E130\";\n}\n.glyphicon-circle-arrow-right:before {\n  content: \"\\E131\";\n}\n.glyphicon-circle-arrow-left:before {\n  content: \"\\E132\";\n}\n.glyphicon-circle-arrow-up:before {\n  content: \"\\E133\";\n}\n.glyphicon-circle-arrow-down:before {\n  content: \"\\E134\";\n}\n.glyphicon-globe:before {\n  content: \"\\E135\";\n}\n.glyphicon-wrench:before {\n  content: \"\\E136\";\n}\n.glyphicon-tasks:before {\n  content: \"\\E137\";\n}\n.glyphicon-filter:before {\n  content: \"\\E138\";\n}\n.glyphicon-briefcase:before {\n  content: \"\\E139\";\n}\n.glyphicon-fullscreen:before {\n  content: \"\\E140\";\n}\n.glyphicon-dashboard:before {\n  content: \"\\E141\";\n}\n.glyphicon-paperclip:before {\n  content: \"\\E142\";\n}\n.glyphicon-heart-empty:before {\n  content: \"\\E143\";\n}\n.glyphicon-link:before {\n  content: \"\\E144\";\n}\n.glyphicon-phone:before {\n  content: \"\\E145\";\n}\n.glyphicon-pushpin:before {\n  content: \"\\E146\";\n}\n.glyphicon-usd:before {\n  content: \"\\E148\";\n}\n.glyphicon-gbp:before {\n  content: \"\\E149\";\n}\n.glyphicon-sort:before {\n  content: \"\\E150\";\n}\n.glyphicon-sort-by-alphabet:before {\n  content: \"\\E151\";\n}\n.glyphicon-sort-by-alphabet-alt:before {\n  content: \"\\E152\";\n}\n.glyphicon-sort-by-order:before {\n  content: \"\\E153\";\n}\n.glyphicon-sort-by-order-alt:before {\n  content: \"\\E154\";\n}\n.glyphicon-sort-by-attributes:before {\n  content: \"\\E155\";\n}\n.glyphicon-sort-by-attributes-alt:before {\n  content: \"\\E156\";\n}\n.glyphicon-unchecked:before {\n  content: \"\\E157\";\n}\n.glyphicon-expand:before {\n  content: \"\\E158\";\n}\n.glyphicon-collapse-down:before {\n  content: \"\\E159\";\n}\n.glyphicon-collapse-up:before {\n  content: \"\\E160\";\n}\n.glyphicon-log-in:before {\n  content: \"\\E161\";\n}\n.glyphicon-flash:before {\n  content: \"\\E162\";\n}\n.glyphicon-log-out:before {\n  content: \"\\E163\";\n}\n.glyphicon-new-window:before {\n  content: \"\\E164\";\n}\n.glyphicon-record:before {\n  content: \"\\E165\";\n}\n.glyphicon-save:before {\n  content: \"\\E166\";\n}\n.glyphicon-open:before {\n  content: \"\\E167\";\n}\n.glyphicon-saved:before {\n  content: \"\\E168\";\n}\n.glyphicon-import:before {\n  content: \"\\E169\";\n}\n.glyphicon-export:before {\n  content: \"\\E170\";\n}\n.glyphicon-send:before {\n  content: \"\\E171\";\n}\n.glyphicon-floppy-disk:before {\n  content: \"\\E172\";\n}\n.glyphicon-floppy-saved:before {\n  content: \"\\E173\";\n}\n.glyphicon-floppy-remove:before {\n  content: \"\\E174\";\n}\n.glyphicon-floppy-save:before {\n  content: \"\\E175\";\n}\n.glyphicon-floppy-open:before {\n  content: \"\\E176\";\n}\n.glyphicon-credit-card:before {\n  content: \"\\E177\";\n}\n.glyphicon-transfer:before {\n  content: \"\\E178\";\n}\n.glyphicon-cutlery:before {\n  content: \"\\E179\";\n}\n.glyphicon-header:before {\n  content: \"\\E180\";\n}\n.glyphicon-compressed:before {\n  content: \"\\E181\";\n}\n.glyphicon-earphone:before {\n  content: \"\\E182\";\n}\n.glyphicon-phone-alt:before {\n  content: \"\\E183\";\n}\n.glyphicon-tower:before {\n  content: \"\\E184\";\n}\n.glyphicon-stats:before {\n  content: \"\\E185\";\n}\n.glyphicon-sd-video:before {\n  content: \"\\E186\";\n}\n.glyphicon-hd-video:before {\n  content: \"\\E187\";\n}\n.glyphicon-subtitles:before {\n  content: \"\\E188\";\n}\n.glyphicon-sound-stereo:before {\n  content: \"\\E189\";\n}\n.glyphicon-sound-dolby:before {\n  content: \"\\E190\";\n}\n.glyphicon-sound-5-1:before {\n  content: \"\\E191\";\n}\n.glyphicon-sound-6-1:before {\n  content: \"\\E192\";\n}\n.glyphicon-sound-7-1:before {\n  content: \"\\E193\";\n}\n.glyphicon-copyright-mark:before {\n  content: \"\\E194\";\n}\n.glyphicon-registration-mark:before {\n  content: \"\\E195\";\n}\n.glyphicon-cloud-download:before {\n  content: \"\\E197\";\n}\n.glyphicon-cloud-upload:before {\n  content: \"\\E198\";\n}\n.glyphicon-tree-conifer:before {\n  content: \"\\E199\";\n}\n.glyphicon-tree-deciduous:before {\n  content: \"\\E200\";\n}\n.glyphicon-cd:before {\n  content: \"\\E201\";\n}\n.glyphicon-save-file:before {\n  content: \"\\E202\";\n}\n.glyphicon-open-file:before {\n  content: \"\\E203\";\n}\n.glyphicon-level-up:before {\n  content: \"\\E204\";\n}\n.glyphicon-copy:before {\n  content: \"\\E205\";\n}\n.glyphicon-paste:before {\n  content: \"\\E206\";\n}\n.glyphicon-alert:before {\n  content: \"\\E209\";\n}\n.glyphicon-equalizer:before {\n  content: \"\\E210\";\n}\n.glyphicon-king:before {\n  content: \"\\E211\";\n}\n.glyphicon-queen:before {\n  content: \"\\E212\";\n}\n.glyphicon-pawn:before {\n  content: \"\\E213\";\n}\n.glyphicon-bishop:before {\n  content: \"\\E214\";\n}\n.glyphicon-knight:before {\n  content: \"\\E215\";\n}\n.glyphicon-baby-formula:before {\n  content: \"\\E216\";\n}\n.glyphicon-tent:before {\n  content: \"\\26FA\";\n}\n.glyphicon-blackboard:before {\n  content: \"\\E218\";\n}\n.glyphicon-bed:before {\n  content: \"\\E219\";\n}\n.glyphicon-apple:before {\n  content: \"\\F8FF\";\n}\n.glyphicon-erase:before {\n  content: \"\\E221\";\n}\n.glyphicon-hourglass:before {\n  content: \"\\231B\";\n}\n.glyphicon-lamp:before {\n  content: \"\\E223\";\n}\n.glyphicon-duplicate:before {\n  content: \"\\E224\";\n}\n.glyphicon-piggy-bank:before {\n  content: \"\\E225\";\n}\n.glyphicon-scissors:before {\n  content: \"\\E226\";\n}\n.glyphicon-bitcoin:before {\n  content: \"\\E227\";\n}\n.glyphicon-btc:before {\n  content: \"\\E227\";\n}\n.glyphicon-xbt:before {\n  content: \"\\E227\";\n}\n.glyphicon-yen:before {\n  content: \"\\A5\";\n}\n.glyphicon-jpy:before {\n  content: \"\\A5\";\n}\n.glyphicon-ruble:before {\n  content: \"\\20BD\";\n}\n.glyphicon-rub:before {\n  content: \"\\20BD\";\n}\n.glyphicon-scale:before {\n  content: \"\\E230\";\n}\n.glyphicon-ice-lolly:before {\n  content: \"\\E231\";\n}\n.glyphicon-ice-lolly-tasted:before {\n  content: \"\\E232\";\n}\n.glyphicon-education:before {\n  content: \"\\E233\";\n}\n.glyphicon-option-horizontal:before {\n  content: \"\\E234\";\n}\n.glyphicon-option-vertical:before {\n  content: \"\\E235\";\n}\n.glyphicon-menu-hamburger:before {\n  content: \"\\E236\";\n}\n.glyphicon-modal-window:before {\n  content: \"\\E237\";\n}\n.glyphicon-oil:before {\n  content: \"\\E238\";\n}\n.glyphicon-grain:before {\n  content: \"\\E239\";\n}\n.glyphicon-sunglasses:before {\n  content: \"\\E240\";\n}\n.glyphicon-text-size:before {\n  content: \"\\E241\";\n}\n.glyphicon-text-color:before {\n  content: \"\\E242\";\n}\n.glyphicon-text-background:before {\n  content: \"\\E243\";\n}\n.glyphicon-object-align-top:before {\n  content: \"\\E244\";\n}\n.glyphicon-object-align-bottom:before {\n  content: \"\\E245\";\n}\n.glyphicon-object-align-horizontal:before {\n  content: \"\\E246\";\n}\n.glyphicon-object-align-left:before {\n  content: \"\\E247\";\n}\n.glyphicon-object-align-vertical:before {\n  content: \"\\E248\";\n}\n.glyphicon-object-align-right:before {\n  content: \"\\E249\";\n}\n.glyphicon-triangle-right:before {\n  content: \"\\E250\";\n}\n.glyphicon-triangle-left:before {\n  content: \"\\E251\";\n}\n.glyphicon-triangle-bottom:before {\n  content: \"\\E252\";\n}\n.glyphicon-triangle-top:before {\n  content: \"\\E253\";\n}\n.glyphicon-console:before {\n  content: \"\\E254\";\n}\n.glyphicon-superscript:before {\n  content: \"\\E255\";\n}\n.glyphicon-subscript:before {\n  content: \"\\E256\";\n}\n.glyphicon-menu-left:before {\n  content: \"\\E257\";\n}\n.glyphicon-menu-right:before {\n  content: \"\\E258\";\n}\n.glyphicon-menu-down:before {\n  content: \"\\E259\";\n}\n.glyphicon-menu-up:before {\n  content: \"\\E260\";\n}\n* {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n*:before,\n*:after {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\nhtml {\n  font-size: 10px;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\nbody {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 1.42857143;\n  color: #333333;\n  background-color: #fff;\n}\ninput,\nbutton,\nselect,\ntextarea {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\na {\n  color: #0080B7;\n  text-decoration: none;\n}\na:hover,\na:focus {\n  color: #004a6b;\n  text-decoration: underline;\n}\na:focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\nfigure {\n  margin: 0;\n}\nimg {\n  vertical-align: middle;\n}\n.img-responsive,\n.thumbnail > img,\n.thumbnail a > img,\n.carousel-inner > .item > img,\n.carousel-inner > .item > a > img {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n.img-rounded {\n  border-radius: 6px;\n}\n.img-thumbnail {\n  padding: 4px;\n  line-height: 1.42857143;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: all 0.2s ease-in-out;\n  -o-transition: all 0.2s ease-in-out;\n  transition: all 0.2s ease-in-out;\n  display: inline-block;\n  max-width: 100%;\n  height: auto;\n}\n.img-circle {\n  border-radius: 50%;\n}\nhr {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  border: 0;\n  border-top: 1px solid #eeeeee;\n}\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n}\n.sr-only-focusable:active,\n.sr-only-focusable:focus {\n  position: static;\n  width: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  clip: auto;\n}\n[role=\"button\"] {\n  cursor: pointer;\n}\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\n.h1,\n.h2,\n.h3,\n.h4,\n.h5,\n.h6 {\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.1;\n  color: inherit;\n}\nh1 small,\nh2 small,\nh3 small,\nh4 small,\nh5 small,\nh6 small,\n.h1 small,\n.h2 small,\n.h3 small,\n.h4 small,\n.h5 small,\n.h6 small,\nh1 .small,\nh2 .small,\nh3 .small,\nh4 .small,\nh5 .small,\nh6 .small,\n.h1 .small,\n.h2 .small,\n.h3 .small,\n.h4 .small,\n.h5 .small,\n.h6 .small {\n  font-weight: normal;\n  line-height: 1;\n  color: #777777;\n}\nh1,\n.h1,\nh2,\n.h2,\nh3,\n.h3 {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\nh1 small,\n.h1 small,\nh2 small,\n.h2 small,\nh3 small,\n.h3 small,\nh1 .small,\n.h1 .small,\nh2 .small,\n.h2 .small,\nh3 .small,\n.h3 .small {\n  font-size: 65%;\n}\nh4,\n.h4,\nh5,\n.h5,\nh6,\n.h6 {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\nh4 small,\n.h4 small,\nh5 small,\n.h5 small,\nh6 small,\n.h6 small,\nh4 .small,\n.h4 .small,\nh5 .small,\n.h5 .small,\nh6 .small,\n.h6 .small {\n  font-size: 75%;\n}\nh1,\n.h1 {\n  font-size: 36px;\n}\nh2,\n.h2 {\n  font-size: 30px;\n}\nh3,\n.h3 {\n  font-size: 24px;\n}\nh4,\n.h4 {\n  font-size: 18px;\n}\nh5,\n.h5 {\n  font-size: 14px;\n}\nh6,\n.h6 {\n  font-size: 12px;\n}\np {\n  margin: 0 0 10px;\n}\n.lead {\n  margin-bottom: 20px;\n  font-size: 16px;\n  font-weight: 300;\n  line-height: 1.4;\n}\n@media (min-width: 768px) {\n  .lead {\n    font-size: 21px;\n  }\n}\nsmall,\n.small {\n  font-size: 85%;\n}\nmark,\n.mark {\n  background-color: #fcf8e3;\n  padding: .2em;\n}\n.text-left {\n  text-align: left;\n}\n.text-right {\n  text-align: right;\n}\n.text-center {\n  text-align: center;\n}\n.text-justify {\n  text-align: justify;\n}\n.text-nowrap {\n  white-space: nowrap;\n}\n.text-lowercase {\n  text-transform: lowercase;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-muted {\n  color: #777777;\n}\n.text-primary {\n  color: #0080B7;\n}\na.text-primary:hover,\na.text-primary:focus {\n  color: #005c84;\n}\n.text-success {\n  color: #3c763d;\n}\na.text-success:hover,\na.text-success:focus {\n  color: #2b542c;\n}\n.text-info {\n  color: #31708f;\n}\na.text-info:hover,\na.text-info:focus {\n  color: #245269;\n}\n.text-warning {\n  color: #8a6d3b;\n}\na.text-warning:hover,\na.text-warning:focus {\n  color: #66512c;\n}\n.text-danger {\n  color: #a94442;\n}\na.text-danger:hover,\na.text-danger:focus {\n  color: #843534;\n}\n.bg-primary {\n  color: #fff;\n  background-color: #0080B7;\n}\na.bg-primary:hover,\na.bg-primary:focus {\n  background-color: #005c84;\n}\n.bg-success {\n  background-color: #dff0d8;\n}\na.bg-success:hover,\na.bg-success:focus {\n  background-color: #c1e2b3;\n}\n.bg-info {\n  background-color: #d9edf7;\n}\na.bg-info:hover,\na.bg-info:focus {\n  background-color: #afd9ee;\n}\n.bg-warning {\n  background-color: #fcf8e3;\n}\na.bg-warning:hover,\na.bg-warning:focus {\n  background-color: #f7ecb5;\n}\n.bg-danger {\n  background-color: #f2dede;\n}\na.bg-danger:hover,\na.bg-danger:focus {\n  background-color: #e4b9b9;\n}\n.page-header {\n  padding-bottom: 9px;\n  margin: 40px 0 20px;\n  border-bottom: 1px solid #eeeeee;\n}\nul,\nol {\n  margin-top: 0;\n  margin-bottom: 10px;\n}\nul ul,\nol ul,\nul ol,\nol ol {\n  margin-bottom: 0;\n}\n.list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n.list-inline {\n  padding-left: 0;\n  list-style: none;\n  margin-left: -5px;\n}\n.list-inline > li {\n  display: inline-block;\n  padding-left: 5px;\n  padding-right: 5px;\n}\ndl {\n  margin-top: 0;\n  margin-bottom: 20px;\n}\ndt,\ndd {\n  line-height: 1.42857143;\n}\ndt {\n  font-weight: bold;\n}\ndd {\n  margin-left: 0;\n}\n@media (min-width: 768px) {\n  .dl-horizontal dt {\n    float: left;\n    width: 160px;\n    clear: left;\n    text-align: right;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n  .dl-horizontal dd {\n    margin-left: 180px;\n  }\n}\nabbr[title],\nabbr[data-original-title] {\n  cursor: help;\n  border-bottom: 1px dotted #777777;\n}\n.initialism {\n  font-size: 90%;\n  text-transform: uppercase;\n}\nblockquote {\n  padding: 10px 20px;\n  margin: 0 0 20px;\n  font-size: 17.5px;\n  border-left: 5px solid #eeeeee;\n}\nblockquote p:last-child,\nblockquote ul:last-child,\nblockquote ol:last-child {\n  margin-bottom: 0;\n}\nblockquote footer,\nblockquote small,\nblockquote .small {\n  display: block;\n  font-size: 80%;\n  line-height: 1.42857143;\n  color: #777777;\n}\nblockquote footer:before,\nblockquote small:before,\nblockquote .small:before {\n  content: '\\2014   \\A0';\n}\n.blockquote-reverse,\nblockquote.pull-right {\n  padding-right: 15px;\n  padding-left: 0;\n  border-right: 5px solid #eeeeee;\n  border-left: 0;\n  text-align: right;\n}\n.blockquote-reverse footer:before,\nblockquote.pull-right footer:before,\n.blockquote-reverse small:before,\nblockquote.pull-right small:before,\n.blockquote-reverse .small:before,\nblockquote.pull-right .small:before {\n  content: '';\n}\n.blockquote-reverse footer:after,\nblockquote.pull-right footer:after,\n.blockquote-reverse small:after,\nblockquote.pull-right small:after,\n.blockquote-reverse .small:after,\nblockquote.pull-right .small:after {\n  content: '\\A0   \\2014';\n}\naddress {\n  margin-bottom: 20px;\n  font-style: normal;\n  line-height: 1.42857143;\n}\ncode,\nkbd,\npre,\nsamp {\n  font-family: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n}\ncode {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #c7254e;\n  background-color: #f9f2f4;\n  border-radius: 4px;\n}\nkbd {\n  padding: 2px 4px;\n  font-size: 90%;\n  color: #fff;\n  background-color: #333;\n  border-radius: 3px;\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.25);\n}\nkbd kbd {\n  padding: 0;\n  font-size: 100%;\n  font-weight: bold;\n  box-shadow: none;\n}\npre {\n  display: block;\n  padding: 9.5px;\n  margin: 0 0 10px;\n  font-size: 13px;\n  line-height: 1.42857143;\n  word-break: break-all;\n  word-wrap: break-word;\n  color: #333333;\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\npre code {\n  padding: 0;\n  font-size: inherit;\n  color: inherit;\n  white-space: pre-wrap;\n  background-color: transparent;\n  border-radius: 0;\n}\n.pre-scrollable {\n  max-height: 340px;\n  overflow-y: scroll;\n}\n.container {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n@media (min-width: 768px) {\n  .container {\n    width: 750px;\n  }\n}\n@media (min-width: 992px) {\n  .container {\n    width: 970px;\n  }\n}\n@media (min-width: 1200px) {\n  .container {\n    width: 1170px;\n  }\n}\n.container-fluid {\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n.row {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {\n  position: relative;\n  min-height: 1px;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {\n  float: left;\n}\n.col-xs-12 {\n  width: 100%;\n}\n.col-xs-11 {\n  width: 91.66666667%;\n}\n.col-xs-10 {\n  width: 83.33333333%;\n}\n.col-xs-9 {\n  width: 75%;\n}\n.col-xs-8 {\n  width: 66.66666667%;\n}\n.col-xs-7 {\n  width: 58.33333333%;\n}\n.col-xs-6 {\n  width: 50%;\n}\n.col-xs-5 {\n  width: 41.66666667%;\n}\n.col-xs-4 {\n  width: 33.33333333%;\n}\n.col-xs-3 {\n  width: 25%;\n}\n.col-xs-2 {\n  width: 16.66666667%;\n}\n.col-xs-1 {\n  width: 8.33333333%;\n}\n.col-xs-pull-12 {\n  right: 100%;\n}\n.col-xs-pull-11 {\n  right: 91.66666667%;\n}\n.col-xs-pull-10 {\n  right: 83.33333333%;\n}\n.col-xs-pull-9 {\n  right: 75%;\n}\n.col-xs-pull-8 {\n  right: 66.66666667%;\n}\n.col-xs-pull-7 {\n  right: 58.33333333%;\n}\n.col-xs-pull-6 {\n  right: 50%;\n}\n.col-xs-pull-5 {\n  right: 41.66666667%;\n}\n.col-xs-pull-4 {\n  right: 33.33333333%;\n}\n.col-xs-pull-3 {\n  right: 25%;\n}\n.col-xs-pull-2 {\n  right: 16.66666667%;\n}\n.col-xs-pull-1 {\n  right: 8.33333333%;\n}\n.col-xs-pull-0 {\n  right: auto;\n}\n.col-xs-push-12 {\n  left: 100%;\n}\n.col-xs-push-11 {\n  left: 91.66666667%;\n}\n.col-xs-push-10 {\n  left: 83.33333333%;\n}\n.col-xs-push-9 {\n  left: 75%;\n}\n.col-xs-push-8 {\n  left: 66.66666667%;\n}\n.col-xs-push-7 {\n  left: 58.33333333%;\n}\n.col-xs-push-6 {\n  left: 50%;\n}\n.col-xs-push-5 {\n  left: 41.66666667%;\n}\n.col-xs-push-4 {\n  left: 33.33333333%;\n}\n.col-xs-push-3 {\n  left: 25%;\n}\n.col-xs-push-2 {\n  left: 16.66666667%;\n}\n.col-xs-push-1 {\n  left: 8.33333333%;\n}\n.col-xs-push-0 {\n  left: auto;\n}\n.col-xs-offset-12 {\n  margin-left: 100%;\n}\n.col-xs-offset-11 {\n  margin-left: 91.66666667%;\n}\n.col-xs-offset-10 {\n  margin-left: 83.33333333%;\n}\n.col-xs-offset-9 {\n  margin-left: 75%;\n}\n.col-xs-offset-8 {\n  margin-left: 66.66666667%;\n}\n.col-xs-offset-7 {\n  margin-left: 58.33333333%;\n}\n.col-xs-offset-6 {\n  margin-left: 50%;\n}\n.col-xs-offset-5 {\n  margin-left: 41.66666667%;\n}\n.col-xs-offset-4 {\n  margin-left: 33.33333333%;\n}\n.col-xs-offset-3 {\n  margin-left: 25%;\n}\n.col-xs-offset-2 {\n  margin-left: 16.66666667%;\n}\n.col-xs-offset-1 {\n  margin-left: 8.33333333%;\n}\n.col-xs-offset-0 {\n  margin-left: 0%;\n}\n@media (min-width: 768px) {\n  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {\n    float: left;\n  }\n  .col-sm-12 {\n    width: 100%;\n  }\n  .col-sm-11 {\n    width: 91.66666667%;\n  }\n  .col-sm-10 {\n    width: 83.33333333%;\n  }\n  .col-sm-9 {\n    width: 75%;\n  }\n  .col-sm-8 {\n    width: 66.66666667%;\n  }\n  .col-sm-7 {\n    width: 58.33333333%;\n  }\n  .col-sm-6 {\n    width: 50%;\n  }\n  .col-sm-5 {\n    width: 41.66666667%;\n  }\n  .col-sm-4 {\n    width: 33.33333333%;\n  }\n  .col-sm-3 {\n    width: 25%;\n  }\n  .col-sm-2 {\n    width: 16.66666667%;\n  }\n  .col-sm-1 {\n    width: 8.33333333%;\n  }\n  .col-sm-pull-12 {\n    right: 100%;\n  }\n  .col-sm-pull-11 {\n    right: 91.66666667%;\n  }\n  .col-sm-pull-10 {\n    right: 83.33333333%;\n  }\n  .col-sm-pull-9 {\n    right: 75%;\n  }\n  .col-sm-pull-8 {\n    right: 66.66666667%;\n  }\n  .col-sm-pull-7 {\n    right: 58.33333333%;\n  }\n  .col-sm-pull-6 {\n    right: 50%;\n  }\n  .col-sm-pull-5 {\n    right: 41.66666667%;\n  }\n  .col-sm-pull-4 {\n    right: 33.33333333%;\n  }\n  .col-sm-pull-3 {\n    right: 25%;\n  }\n  .col-sm-pull-2 {\n    right: 16.66666667%;\n  }\n  .col-sm-pull-1 {\n    right: 8.33333333%;\n  }\n  .col-sm-pull-0 {\n    right: auto;\n  }\n  .col-sm-push-12 {\n    left: 100%;\n  }\n  .col-sm-push-11 {\n    left: 91.66666667%;\n  }\n  .col-sm-push-10 {\n    left: 83.33333333%;\n  }\n  .col-sm-push-9 {\n    left: 75%;\n  }\n  .col-sm-push-8 {\n    left: 66.66666667%;\n  }\n  .col-sm-push-7 {\n    left: 58.33333333%;\n  }\n  .col-sm-push-6 {\n    left: 50%;\n  }\n  .col-sm-push-5 {\n    left: 41.66666667%;\n  }\n  .col-sm-push-4 {\n    left: 33.33333333%;\n  }\n  .col-sm-push-3 {\n    left: 25%;\n  }\n  .col-sm-push-2 {\n    left: 16.66666667%;\n  }\n  .col-sm-push-1 {\n    left: 8.33333333%;\n  }\n  .col-sm-push-0 {\n    left: auto;\n  }\n  .col-sm-offset-12 {\n    margin-left: 100%;\n  }\n  .col-sm-offset-11 {\n    margin-left: 91.66666667%;\n  }\n  .col-sm-offset-10 {\n    margin-left: 83.33333333%;\n  }\n  .col-sm-offset-9 {\n    margin-left: 75%;\n  }\n  .col-sm-offset-8 {\n    margin-left: 66.66666667%;\n  }\n  .col-sm-offset-7 {\n    margin-left: 58.33333333%;\n  }\n  .col-sm-offset-6 {\n    margin-left: 50%;\n  }\n  .col-sm-offset-5 {\n    margin-left: 41.66666667%;\n  }\n  .col-sm-offset-4 {\n    margin-left: 33.33333333%;\n  }\n  .col-sm-offset-3 {\n    margin-left: 25%;\n  }\n  .col-sm-offset-2 {\n    margin-left: 16.66666667%;\n  }\n  .col-sm-offset-1 {\n    margin-left: 8.33333333%;\n  }\n  .col-sm-offset-0 {\n    margin-left: 0%;\n  }\n}\n@media (min-width: 992px) {\n  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {\n    float: left;\n  }\n  .col-md-12 {\n    width: 100%;\n  }\n  .col-md-11 {\n    width: 91.66666667%;\n  }\n  .col-md-10 {\n    width: 83.33333333%;\n  }\n  .col-md-9 {\n    width: 75%;\n  }\n  .col-md-8 {\n    width: 66.66666667%;\n  }\n  .col-md-7 {\n    width: 58.33333333%;\n  }\n  .col-md-6 {\n    width: 50%;\n  }\n  .col-md-5 {\n    width: 41.66666667%;\n  }\n  .col-md-4 {\n    width: 33.33333333%;\n  }\n  .col-md-3 {\n    width: 25%;\n  }\n  .col-md-2 {\n    width: 16.66666667%;\n  }\n  .col-md-1 {\n    width: 8.33333333%;\n  }\n  .col-md-pull-12 {\n    right: 100%;\n  }\n  .col-md-pull-11 {\n    right: 91.66666667%;\n  }\n  .col-md-pull-10 {\n    right: 83.33333333%;\n  }\n  .col-md-pull-9 {\n    right: 75%;\n  }\n  .col-md-pull-8 {\n    right: 66.66666667%;\n  }\n  .col-md-pull-7 {\n    right: 58.33333333%;\n  }\n  .col-md-pull-6 {\n    right: 50%;\n  }\n  .col-md-pull-5 {\n    right: 41.66666667%;\n  }\n  .col-md-pull-4 {\n    right: 33.33333333%;\n  }\n  .col-md-pull-3 {\n    right: 25%;\n  }\n  .col-md-pull-2 {\n    right: 16.66666667%;\n  }\n  .col-md-pull-1 {\n    right: 8.33333333%;\n  }\n  .col-md-pull-0 {\n    right: auto;\n  }\n  .col-md-push-12 {\n    left: 100%;\n  }\n  .col-md-push-11 {\n    left: 91.66666667%;\n  }\n  .col-md-push-10 {\n    left: 83.33333333%;\n  }\n  .col-md-push-9 {\n    left: 75%;\n  }\n  .col-md-push-8 {\n    left: 66.66666667%;\n  }\n  .col-md-push-7 {\n    left: 58.33333333%;\n  }\n  .col-md-push-6 {\n    left: 50%;\n  }\n  .col-md-push-5 {\n    left: 41.66666667%;\n  }\n  .col-md-push-4 {\n    left: 33.33333333%;\n  }\n  .col-md-push-3 {\n    left: 25%;\n  }\n  .col-md-push-2 {\n    left: 16.66666667%;\n  }\n  .col-md-push-1 {\n    left: 8.33333333%;\n  }\n  .col-md-push-0 {\n    left: auto;\n  }\n  .col-md-offset-12 {\n    margin-left: 100%;\n  }\n  .col-md-offset-11 {\n    margin-left: 91.66666667%;\n  }\n  .col-md-offset-10 {\n    margin-left: 83.33333333%;\n  }\n  .col-md-offset-9 {\n    margin-left: 75%;\n  }\n  .col-md-offset-8 {\n    margin-left: 66.66666667%;\n  }\n  .col-md-offset-7 {\n    margin-left: 58.33333333%;\n  }\n  .col-md-offset-6 {\n    margin-left: 50%;\n  }\n  .col-md-offset-5 {\n    margin-left: 41.66666667%;\n  }\n  .col-md-offset-4 {\n    margin-left: 33.33333333%;\n  }\n  .col-md-offset-3 {\n    margin-left: 25%;\n  }\n  .col-md-offset-2 {\n    margin-left: 16.66666667%;\n  }\n  .col-md-offset-1 {\n    margin-left: 8.33333333%;\n  }\n  .col-md-offset-0 {\n    margin-left: 0%;\n  }\n}\n@media (min-width: 1200px) {\n  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {\n    float: left;\n  }\n  .col-lg-12 {\n    width: 100%;\n  }\n  .col-lg-11 {\n    width: 91.66666667%;\n  }\n  .col-lg-10 {\n    width: 83.33333333%;\n  }\n  .col-lg-9 {\n    width: 75%;\n  }\n  .col-lg-8 {\n    width: 66.66666667%;\n  }\n  .col-lg-7 {\n    width: 58.33333333%;\n  }\n  .col-lg-6 {\n    width: 50%;\n  }\n  .col-lg-5 {\n    width: 41.66666667%;\n  }\n  .col-lg-4 {\n    width: 33.33333333%;\n  }\n  .col-lg-3 {\n    width: 25%;\n  }\n  .col-lg-2 {\n    width: 16.66666667%;\n  }\n  .col-lg-1 {\n    width: 8.33333333%;\n  }\n  .col-lg-pull-12 {\n    right: 100%;\n  }\n  .col-lg-pull-11 {\n    right: 91.66666667%;\n  }\n  .col-lg-pull-10 {\n    right: 83.33333333%;\n  }\n  .col-lg-pull-9 {\n    right: 75%;\n  }\n  .col-lg-pull-8 {\n    right: 66.66666667%;\n  }\n  .col-lg-pull-7 {\n    right: 58.33333333%;\n  }\n  .col-lg-pull-6 {\n    right: 50%;\n  }\n  .col-lg-pull-5 {\n    right: 41.66666667%;\n  }\n  .col-lg-pull-4 {\n    right: 33.33333333%;\n  }\n  .col-lg-pull-3 {\n    right: 25%;\n  }\n  .col-lg-pull-2 {\n    right: 16.66666667%;\n  }\n  .col-lg-pull-1 {\n    right: 8.33333333%;\n  }\n  .col-lg-pull-0 {\n    right: auto;\n  }\n  .col-lg-push-12 {\n    left: 100%;\n  }\n  .col-lg-push-11 {\n    left: 91.66666667%;\n  }\n  .col-lg-push-10 {\n    left: 83.33333333%;\n  }\n  .col-lg-push-9 {\n    left: 75%;\n  }\n  .col-lg-push-8 {\n    left: 66.66666667%;\n  }\n  .col-lg-push-7 {\n    left: 58.33333333%;\n  }\n  .col-lg-push-6 {\n    left: 50%;\n  }\n  .col-lg-push-5 {\n    left: 41.66666667%;\n  }\n  .col-lg-push-4 {\n    left: 33.33333333%;\n  }\n  .col-lg-push-3 {\n    left: 25%;\n  }\n  .col-lg-push-2 {\n    left: 16.66666667%;\n  }\n  .col-lg-push-1 {\n    left: 8.33333333%;\n  }\n  .col-lg-push-0 {\n    left: auto;\n  }\n  .col-lg-offset-12 {\n    margin-left: 100%;\n  }\n  .col-lg-offset-11 {\n    margin-left: 91.66666667%;\n  }\n  .col-lg-offset-10 {\n    margin-left: 83.33333333%;\n  }\n  .col-lg-offset-9 {\n    margin-left: 75%;\n  }\n  .col-lg-offset-8 {\n    margin-left: 66.66666667%;\n  }\n  .col-lg-offset-7 {\n    margin-left: 58.33333333%;\n  }\n  .col-lg-offset-6 {\n    margin-left: 50%;\n  }\n  .col-lg-offset-5 {\n    margin-left: 41.66666667%;\n  }\n  .col-lg-offset-4 {\n    margin-left: 33.33333333%;\n  }\n  .col-lg-offset-3 {\n    margin-left: 25%;\n  }\n  .col-lg-offset-2 {\n    margin-left: 16.66666667%;\n  }\n  .col-lg-offset-1 {\n    margin-left: 8.33333333%;\n  }\n  .col-lg-offset-0 {\n    margin-left: 0%;\n  }\n}\ntable {\n  background-color: transparent;\n}\ncaption {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  color: #777777;\n  text-align: left;\n}\nth {\n  text-align: left;\n}\n.table {\n  width: 100%;\n  max-width: 100%;\n  margin-bottom: 20px;\n}\n.table > thead > tr > th,\n.table > tbody > tr > th,\n.table > tfoot > tr > th,\n.table > thead > tr > td,\n.table > tbody > tr > td,\n.table > tfoot > tr > td {\n  padding: 8px;\n  line-height: 1.42857143;\n  vertical-align: top;\n  border-top: 1px solid #ddd;\n}\n.table > thead > tr > th {\n  vertical-align: bottom;\n  border-bottom: 2px solid #ddd;\n}\n.table > caption + thead > tr:first-child > th,\n.table > colgroup + thead > tr:first-child > th,\n.table > thead:first-child > tr:first-child > th,\n.table > caption + thead > tr:first-child > td,\n.table > colgroup + thead > tr:first-child > td,\n.table > thead:first-child > tr:first-child > td {\n  border-top: 0;\n}\n.table > tbody + tbody {\n  border-top: 2px solid #ddd;\n}\n.table .table {\n  background-color: #fff;\n}\n.table-condensed > thead > tr > th,\n.table-condensed > tbody > tr > th,\n.table-condensed > tfoot > tr > th,\n.table-condensed > thead > tr > td,\n.table-condensed > tbody > tr > td,\n.table-condensed > tfoot > tr > td {\n  padding: 5px;\n}\n.table-bordered {\n  border: 1px solid #ddd;\n}\n.table-bordered > thead > tr > th,\n.table-bordered > tbody > tr > th,\n.table-bordered > tfoot > tr > th,\n.table-bordered > thead > tr > td,\n.table-bordered > tbody > tr > td,\n.table-bordered > tfoot > tr > td {\n  border: 1px solid #ddd;\n}\n.table-bordered > thead > tr > th,\n.table-bordered > thead > tr > td {\n  border-bottom-width: 2px;\n}\n.table-striped > tbody > tr:nth-of-type(odd) {\n  background-color: #f9f9f9;\n}\n.table-hover > tbody > tr:hover {\n  background-color: #f5f5f5;\n}\ntable col[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-column;\n}\ntable td[class*=\"col-\"],\ntable th[class*=\"col-\"] {\n  position: static;\n  float: none;\n  display: table-cell;\n}\n.table > thead > tr > td.active,\n.table > tbody > tr > td.active,\n.table > tfoot > tr > td.active,\n.table > thead > tr > th.active,\n.table > tbody > tr > th.active,\n.table > tfoot > tr > th.active,\n.table > thead > tr.active > td,\n.table > tbody > tr.active > td,\n.table > tfoot > tr.active > td,\n.table > thead > tr.active > th,\n.table > tbody > tr.active > th,\n.table > tfoot > tr.active > th {\n  background-color: #f5f5f5;\n}\n.table-hover > tbody > tr > td.active:hover,\n.table-hover > tbody > tr > th.active:hover,\n.table-hover > tbody > tr.active:hover > td,\n.table-hover > tbody > tr:hover > .active,\n.table-hover > tbody > tr.active:hover > th {\n  background-color: #e8e8e8;\n}\n.table > thead > tr > td.success,\n.table > tbody > tr > td.success,\n.table > tfoot > tr > td.success,\n.table > thead > tr > th.success,\n.table > tbody > tr > th.success,\n.table > tfoot > tr > th.success,\n.table > thead > tr.success > td,\n.table > tbody > tr.success > td,\n.table > tfoot > tr.success > td,\n.table > thead > tr.success > th,\n.table > tbody > tr.success > th,\n.table > tfoot > tr.success > th {\n  background-color: #dff0d8;\n}\n.table-hover > tbody > tr > td.success:hover,\n.table-hover > tbody > tr > th.success:hover,\n.table-hover > tbody > tr.success:hover > td,\n.table-hover > tbody > tr:hover > .success,\n.table-hover > tbody > tr.success:hover > th {\n  background-color: #d0e9c6;\n}\n.table > thead > tr > td.info,\n.table > tbody > tr > td.info,\n.table > tfoot > tr > td.info,\n.table > thead > tr > th.info,\n.table > tbody > tr > th.info,\n.table > tfoot > tr > th.info,\n.table > thead > tr.info > td,\n.table > tbody > tr.info > td,\n.table > tfoot > tr.info > td,\n.table > thead > tr.info > th,\n.table > tbody > tr.info > th,\n.table > tfoot > tr.info > th {\n  background-color: #d9edf7;\n}\n.table-hover > tbody > tr > td.info:hover,\n.table-hover > tbody > tr > th.info:hover,\n.table-hover > tbody > tr.info:hover > td,\n.table-hover > tbody > tr:hover > .info,\n.table-hover > tbody > tr.info:hover > th {\n  background-color: #c4e3f3;\n}\n.table > thead > tr > td.warning,\n.table > tbody > tr > td.warning,\n.table > tfoot > tr > td.warning,\n.table > thead > tr > th.warning,\n.table > tbody > tr > th.warning,\n.table > tfoot > tr > th.warning,\n.table > thead > tr.warning > td,\n.table > tbody > tr.warning > td,\n.table > tfoot > tr.warning > td,\n.table > thead > tr.warning > th,\n.table > tbody > tr.warning > th,\n.table > tfoot > tr.warning > th {\n  background-color: #fcf8e3;\n}\n.table-hover > tbody > tr > td.warning:hover,\n.table-hover > tbody > tr > th.warning:hover,\n.table-hover > tbody > tr.warning:hover > td,\n.table-hover > tbody > tr:hover > .warning,\n.table-hover > tbody > tr.warning:hover > th {\n  background-color: #faf2cc;\n}\n.table > thead > tr > td.danger,\n.table > tbody > tr > td.danger,\n.table > tfoot > tr > td.danger,\n.table > thead > tr > th.danger,\n.table > tbody > tr > th.danger,\n.table > tfoot > tr > th.danger,\n.table > thead > tr.danger > td,\n.table > tbody > tr.danger > td,\n.table > tfoot > tr.danger > td,\n.table > thead > tr.danger > th,\n.table > tbody > tr.danger > th,\n.table > tfoot > tr.danger > th {\n  background-color: #f2dede;\n}\n.table-hover > tbody > tr > td.danger:hover,\n.table-hover > tbody > tr > th.danger:hover,\n.table-hover > tbody > tr.danger:hover > td,\n.table-hover > tbody > tr:hover > .danger,\n.table-hover > tbody > tr.danger:hover > th {\n  background-color: #ebcccc;\n}\n.table-responsive {\n  overflow-x: auto;\n  min-height: 0.01%;\n}\n@media screen and (max-width: 767px) {\n  .table-responsive {\n    width: 100%;\n    margin-bottom: 15px;\n    overflow-y: hidden;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n    border: 1px solid #ddd;\n  }\n  .table-responsive > .table {\n    margin-bottom: 0;\n  }\n  .table-responsive > .table > thead > tr > th,\n  .table-responsive > .table > tbody > tr > th,\n  .table-responsive > .table > tfoot > tr > th,\n  .table-responsive > .table > thead > tr > td,\n  .table-responsive > .table > tbody > tr > td,\n  .table-responsive > .table > tfoot > tr > td {\n    white-space: nowrap;\n  }\n  .table-responsive > .table-bordered {\n    border: 0;\n  }\n  .table-responsive > .table-bordered > thead > tr > th:first-child,\n  .table-responsive > .table-bordered > tbody > tr > th:first-child,\n  .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n  .table-responsive > .table-bordered > thead > tr > td:first-child,\n  .table-responsive > .table-bordered > tbody > tr > td:first-child,\n  .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n    border-left: 0;\n  }\n  .table-responsive > .table-bordered > thead > tr > th:last-child,\n  .table-responsive > .table-bordered > tbody > tr > th:last-child,\n  .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n  .table-responsive > .table-bordered > thead > tr > td:last-child,\n  .table-responsive > .table-bordered > tbody > tr > td:last-child,\n  .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n    border-right: 0;\n  }\n  .table-responsive > .table-bordered > tbody > tr:last-child > th,\n  .table-responsive > .table-bordered > tfoot > tr:last-child > th,\n  .table-responsive > .table-bordered > tbody > tr:last-child > td,\n  .table-responsive > .table-bordered > tfoot > tr:last-child > td {\n    border-bottom: 0;\n  }\n}\nfieldset {\n  padding: 0;\n  margin: 0;\n  border: 0;\n  min-width: 0;\n}\nlegend {\n  display: block;\n  width: 100%;\n  padding: 0;\n  margin-bottom: 20px;\n  font-size: 21px;\n  line-height: inherit;\n  color: #333333;\n  border: 0;\n  border-bottom: 1px solid #e5e5e5;\n}\nlabel {\n  display: inline-block;\n  max-width: 100%;\n  margin-bottom: 5px;\n  font-weight: bold;\n}\ninput[type=\"search\"] {\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  margin: 4px 0 0;\n  margin-top: 1px \\9;\n  line-height: normal;\n}\ninput[type=\"file\"] {\n  display: block;\n}\ninput[type=\"range\"] {\n  display: block;\n  width: 100%;\n}\nselect[multiple],\nselect[size] {\n  height: auto;\n}\ninput[type=\"file\"]:focus,\ninput[type=\"radio\"]:focus,\ninput[type=\"checkbox\"]:focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\noutput {\n  display: block;\n  padding-top: 7px;\n  font-size: 14px;\n  line-height: 1.42857143;\n  color: #555555;\n}\n.form-control {\n  display: block;\n  width: 100%;\n  height: 34px;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857143;\n  color: #555555;\n  background-color: #fff;\n  background-image: none;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  -webkit-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;\n  -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;\n  transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;\n}\n.form-control:focus {\n  border-color: #66afe9;\n  outline: 0;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, 0.6);\n  box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, 0.6);\n}\n.form-control::-moz-placeholder {\n  color: #999;\n  opacity: 1;\n}\n.form-control:-ms-input-placeholder {\n  color: #999;\n}\n.form-control::-webkit-input-placeholder {\n  color: #999;\n}\n.form-control::-ms-expand {\n  border: 0;\n  background-color: transparent;\n}\n.form-control[disabled],\n.form-control[readonly],\nfieldset[disabled] .form-control {\n  background-color: #eeeeee;\n  opacity: 1;\n}\n.form-control[disabled],\nfieldset[disabled] .form-control {\n  cursor: not-allowed;\n}\ntextarea.form-control {\n  height: auto;\n}\ninput[type=\"search\"] {\n  -webkit-appearance: none;\n}\n@media screen and (-webkit-min-device-pixel-ratio: 0) {\n  input[type=\"date\"].form-control,\n  input[type=\"time\"].form-control,\n  input[type=\"datetime-local\"].form-control,\n  input[type=\"month\"].form-control {\n    line-height: 34px;\n  }\n  input[type=\"date\"].input-sm,\n  input[type=\"time\"].input-sm,\n  input[type=\"datetime-local\"].input-sm,\n  input[type=\"month\"].input-sm,\n  .input-group-sm input[type=\"date\"],\n  .input-group-sm input[type=\"time\"],\n  .input-group-sm input[type=\"datetime-local\"],\n  .input-group-sm input[type=\"month\"] {\n    line-height: 30px;\n  }\n  input[type=\"date\"].input-lg,\n  input[type=\"time\"].input-lg,\n  input[type=\"datetime-local\"].input-lg,\n  input[type=\"month\"].input-lg,\n  .input-group-lg input[type=\"date\"],\n  .input-group-lg input[type=\"time\"],\n  .input-group-lg input[type=\"datetime-local\"],\n  .input-group-lg input[type=\"month\"] {\n    line-height: 46px;\n  }\n}\n.form-group {\n  margin-bottom: 15px;\n}\n.radio,\n.checkbox {\n  position: relative;\n  display: block;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n.radio label,\n.checkbox label {\n  min-height: 20px;\n  padding-left: 20px;\n  margin-bottom: 0;\n  font-weight: normal;\n  cursor: pointer;\n}\n.radio input[type=\"radio\"],\n.radio-inline input[type=\"radio\"],\n.checkbox input[type=\"checkbox\"],\n.checkbox-inline input[type=\"checkbox\"] {\n  position: absolute;\n  margin-left: -20px;\n  margin-top: 4px \\9;\n}\n.radio + .radio,\n.checkbox + .checkbox {\n  margin-top: -5px;\n}\n.radio-inline,\n.checkbox-inline {\n  position: relative;\n  display: inline-block;\n  padding-left: 20px;\n  margin-bottom: 0;\n  vertical-align: middle;\n  font-weight: normal;\n  cursor: pointer;\n}\n.radio-inline + .radio-inline,\n.checkbox-inline + .checkbox-inline {\n  margin-top: 0;\n  margin-left: 10px;\n}\ninput[type=\"radio\"][disabled],\ninput[type=\"checkbox\"][disabled],\ninput[type=\"radio\"].disabled,\ninput[type=\"checkbox\"].disabled,\nfieldset[disabled] input[type=\"radio\"],\nfieldset[disabled] input[type=\"checkbox\"] {\n  cursor: not-allowed;\n}\n.radio-inline.disabled,\n.checkbox-inline.disabled,\nfieldset[disabled] .radio-inline,\nfieldset[disabled] .checkbox-inline {\n  cursor: not-allowed;\n}\n.radio.disabled label,\n.checkbox.disabled label,\nfieldset[disabled] .radio label,\nfieldset[disabled] .checkbox label {\n  cursor: not-allowed;\n}\n.form-control-static {\n  padding-top: 7px;\n  padding-bottom: 7px;\n  margin-bottom: 0;\n  min-height: 34px;\n}\n.form-control-static.input-lg,\n.form-control-static.input-sm {\n  padding-left: 0;\n  padding-right: 0;\n}\n.input-sm {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\nselect.input-sm {\n  height: 30px;\n  line-height: 30px;\n}\ntextarea.input-sm,\nselect[multiple].input-sm {\n  height: auto;\n}\n.form-group-sm .form-control {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n.form-group-sm select.form-control {\n  height: 30px;\n  line-height: 30px;\n}\n.form-group-sm textarea.form-control,\n.form-group-sm select[multiple].form-control {\n  height: auto;\n}\n.form-group-sm .form-control-static {\n  height: 30px;\n  min-height: 32px;\n  padding: 6px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n}\n.input-lg {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\nselect.input-lg {\n  height: 46px;\n  line-height: 46px;\n}\ntextarea.input-lg,\nselect[multiple].input-lg {\n  height: auto;\n}\n.form-group-lg .form-control {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\n.form-group-lg select.form-control {\n  height: 46px;\n  line-height: 46px;\n}\n.form-group-lg textarea.form-control,\n.form-group-lg select[multiple].form-control {\n  height: auto;\n}\n.form-group-lg .form-control-static {\n  height: 46px;\n  min-height: 38px;\n  padding: 11px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n}\n.has-feedback {\n  position: relative;\n}\n.has-feedback .form-control {\n  padding-right: 42.5px;\n}\n.form-control-feedback {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 2;\n  display: block;\n  width: 34px;\n  height: 34px;\n  line-height: 34px;\n  text-align: center;\n  pointer-events: none;\n}\n.input-lg + .form-control-feedback,\n.input-group-lg + .form-control-feedback,\n.form-group-lg .form-control + .form-control-feedback {\n  width: 46px;\n  height: 46px;\n  line-height: 46px;\n}\n.input-sm + .form-control-feedback,\n.input-group-sm + .form-control-feedback,\n.form-group-sm .form-control + .form-control-feedback {\n  width: 30px;\n  height: 30px;\n  line-height: 30px;\n}\n.has-success .help-block,\n.has-success .control-label,\n.has-success .radio,\n.has-success .checkbox,\n.has-success .radio-inline,\n.has-success .checkbox-inline,\n.has-success.radio label,\n.has-success.checkbox label,\n.has-success.radio-inline label,\n.has-success.checkbox-inline label {\n  color: #3c763d;\n}\n.has-success .form-control {\n  border-color: #3c763d;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n.has-success .form-control:focus {\n  border-color: #2b542c;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #67b168;\n}\n.has-success .input-group-addon {\n  color: #3c763d;\n  border-color: #3c763d;\n  background-color: #dff0d8;\n}\n.has-success .form-control-feedback {\n  color: #3c763d;\n}\n.has-warning .help-block,\n.has-warning .control-label,\n.has-warning .radio,\n.has-warning .checkbox,\n.has-warning .radio-inline,\n.has-warning .checkbox-inline,\n.has-warning.radio label,\n.has-warning.checkbox label,\n.has-warning.radio-inline label,\n.has-warning.checkbox-inline label {\n  color: #8a6d3b;\n}\n.has-warning .form-control {\n  border-color: #8a6d3b;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n.has-warning .form-control:focus {\n  border-color: #66512c;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #c0a16b;\n}\n.has-warning .input-group-addon {\n  color: #8a6d3b;\n  border-color: #8a6d3b;\n  background-color: #fcf8e3;\n}\n.has-warning .form-control-feedback {\n  color: #8a6d3b;\n}\n.has-error .help-block,\n.has-error .control-label,\n.has-error .radio,\n.has-error .checkbox,\n.has-error .radio-inline,\n.has-error .checkbox-inline,\n.has-error.radio label,\n.has-error.checkbox label,\n.has-error.radio-inline label,\n.has-error.checkbox-inline label {\n  color: #a94442;\n}\n.has-error .form-control {\n  border-color: #a94442;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n}\n.has-error .form-control:focus {\n  border-color: #843534;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 6px #ce8483;\n}\n.has-error .input-group-addon {\n  color: #a94442;\n  border-color: #a94442;\n  background-color: #f2dede;\n}\n.has-error .form-control-feedback {\n  color: #a94442;\n}\n.has-feedback label ~ .form-control-feedback {\n  top: 25px;\n}\n.has-feedback label.sr-only ~ .form-control-feedback {\n  top: 0;\n}\n.help-block {\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  color: #737373;\n}\n@media (min-width: 768px) {\n  .form-inline .form-group {\n    display: inline-block;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .form-inline .form-control {\n    display: inline-block;\n    width: auto;\n    vertical-align: middle;\n  }\n  .form-inline .form-control-static {\n    display: inline-block;\n  }\n  .form-inline .input-group {\n    display: inline-table;\n    vertical-align: middle;\n  }\n  .form-inline .input-group .input-group-addon,\n  .form-inline .input-group .input-group-btn,\n  .form-inline .input-group .form-control {\n    width: auto;\n  }\n  .form-inline .input-group > .form-control {\n    width: 100%;\n  }\n  .form-inline .control-label {\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .form-inline .radio,\n  .form-inline .checkbox {\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .form-inline .radio label,\n  .form-inline .checkbox label {\n    padding-left: 0;\n  }\n  .form-inline .radio input[type=\"radio\"],\n  .form-inline .checkbox input[type=\"checkbox\"] {\n    position: relative;\n    margin-left: 0;\n  }\n  .form-inline .has-feedback .form-control-feedback {\n    top: 0;\n  }\n}\n.form-horizontal .radio,\n.form-horizontal .checkbox,\n.form-horizontal .radio-inline,\n.form-horizontal .checkbox-inline {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 7px;\n}\n.form-horizontal .radio,\n.form-horizontal .checkbox {\n  min-height: 27px;\n}\n.form-horizontal .form-group {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n@media (min-width: 768px) {\n  .form-horizontal .control-label {\n    text-align: right;\n    margin-bottom: 0;\n    padding-top: 7px;\n  }\n}\n.form-horizontal .has-feedback .form-control-feedback {\n  right: 15px;\n}\n@media (min-width: 768px) {\n  .form-horizontal .form-group-lg .control-label {\n    padding-top: 11px;\n    font-size: 18px;\n  }\n}\n@media (min-width: 768px) {\n  .form-horizontal .form-group-sm .control-label {\n    padding-top: 6px;\n    font-size: 12px;\n  }\n}\n.btn {\n  display: inline-block;\n  margin-bottom: 0;\n  font-weight: normal;\n  text-align: center;\n  vertical-align: middle;\n  touch-action: manipulation;\n  cursor: pointer;\n  background-image: none;\n  border: 1px solid transparent;\n  white-space: nowrap;\n  padding: 6px 12px;\n  font-size: 14px;\n  line-height: 1.42857143;\n  border-radius: 4px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.btn:focus,\n.btn:active:focus,\n.btn.active:focus,\n.btn.focus,\n.btn:active.focus,\n.btn.active.focus {\n  outline: 5px auto -webkit-focus-ring-color;\n  outline-offset: -2px;\n}\n.btn:hover,\n.btn:focus,\n.btn.focus {\n  color: #333;\n  text-decoration: none;\n}\n.btn:active,\n.btn.active {\n  outline: 0;\n  background-image: none;\n  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n}\n.btn.disabled,\n.btn[disabled],\nfieldset[disabled] .btn {\n  cursor: not-allowed;\n  opacity: 0.65;\n  filter: alpha(opacity=65);\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\na.btn.disabled,\nfieldset[disabled] a.btn {\n  pointer-events: none;\n}\n.btn-default {\n  color: #333;\n  background-color: #fff;\n  border-color: #ccc;\n}\n.btn-default:focus,\n.btn-default.focus {\n  color: #333;\n  background-color: #e6e6e6;\n  border-color: #8c8c8c;\n}\n.btn-default:hover {\n  color: #333;\n  background-color: #e6e6e6;\n  border-color: #adadad;\n}\n.btn-default:active,\n.btn-default.active,\n.open > .dropdown-toggle.btn-default {\n  color: #333;\n  background-color: #e6e6e6;\n  border-color: #adadad;\n}\n.btn-default:active:hover,\n.btn-default.active:hover,\n.open > .dropdown-toggle.btn-default:hover,\n.btn-default:active:focus,\n.btn-default.active:focus,\n.open > .dropdown-toggle.btn-default:focus,\n.btn-default:active.focus,\n.btn-default.active.focus,\n.open > .dropdown-toggle.btn-default.focus {\n  color: #333;\n  background-color: #d4d4d4;\n  border-color: #8c8c8c;\n}\n.btn-default:active,\n.btn-default.active,\n.open > .dropdown-toggle.btn-default {\n  background-image: none;\n}\n.btn-default.disabled:hover,\n.btn-default[disabled]:hover,\nfieldset[disabled] .btn-default:hover,\n.btn-default.disabled:focus,\n.btn-default[disabled]:focus,\nfieldset[disabled] .btn-default:focus,\n.btn-default.disabled.focus,\n.btn-default[disabled].focus,\nfieldset[disabled] .btn-default.focus {\n  background-color: #fff;\n  border-color: #ccc;\n}\n.btn-default .badge {\n  color: #fff;\n  background-color: #333;\n}\n.btn-primary {\n  color: #fff;\n  background-color: #0080B7;\n  border-color: #006e9e;\n}\n.btn-primary:focus,\n.btn-primary.focus {\n  color: #fff;\n  background-color: #005c84;\n  border-color: #00151e;\n}\n.btn-primary:hover {\n  color: #fff;\n  background-color: #005c84;\n  border-color: #004360;\n}\n.btn-primary:active,\n.btn-primary.active,\n.open > .dropdown-toggle.btn-primary {\n  color: #fff;\n  background-color: #005c84;\n  border-color: #004360;\n}\n.btn-primary:active:hover,\n.btn-primary.active:hover,\n.open > .dropdown-toggle.btn-primary:hover,\n.btn-primary:active:focus,\n.btn-primary.active:focus,\n.open > .dropdown-toggle.btn-primary:focus,\n.btn-primary:active.focus,\n.btn-primary.active.focus,\n.open > .dropdown-toggle.btn-primary.focus {\n  color: #fff;\n  background-color: #004360;\n  border-color: #00151e;\n}\n.btn-primary:active,\n.btn-primary.active,\n.open > .dropdown-toggle.btn-primary {\n  background-image: none;\n}\n.btn-primary.disabled:hover,\n.btn-primary[disabled]:hover,\nfieldset[disabled] .btn-primary:hover,\n.btn-primary.disabled:focus,\n.btn-primary[disabled]:focus,\nfieldset[disabled] .btn-primary:focus,\n.btn-primary.disabled.focus,\n.btn-primary[disabled].focus,\nfieldset[disabled] .btn-primary.focus {\n  background-color: #0080B7;\n  border-color: #006e9e;\n}\n.btn-primary .badge {\n  color: #0080B7;\n  background-color: #fff;\n}\n.btn-success {\n  color: #fff;\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n}\n.btn-success:focus,\n.btn-success.focus {\n  color: #fff;\n  background-color: #449d44;\n  border-color: #255625;\n}\n.btn-success:hover {\n  color: #fff;\n  background-color: #449d44;\n  border-color: #398439;\n}\n.btn-success:active,\n.btn-success.active,\n.open > .dropdown-toggle.btn-success {\n  color: #fff;\n  background-color: #449d44;\n  border-color: #398439;\n}\n.btn-success:active:hover,\n.btn-success.active:hover,\n.open > .dropdown-toggle.btn-success:hover,\n.btn-success:active:focus,\n.btn-success.active:focus,\n.open > .dropdown-toggle.btn-success:focus,\n.btn-success:active.focus,\n.btn-success.active.focus,\n.open > .dropdown-toggle.btn-success.focus {\n  color: #fff;\n  background-color: #398439;\n  border-color: #255625;\n}\n.btn-success:active,\n.btn-success.active,\n.open > .dropdown-toggle.btn-success {\n  background-image: none;\n}\n.btn-success.disabled:hover,\n.btn-success[disabled]:hover,\nfieldset[disabled] .btn-success:hover,\n.btn-success.disabled:focus,\n.btn-success[disabled]:focus,\nfieldset[disabled] .btn-success:focus,\n.btn-success.disabled.focus,\n.btn-success[disabled].focus,\nfieldset[disabled] .btn-success.focus {\n  background-color: #5cb85c;\n  border-color: #4cae4c;\n}\n.btn-success .badge {\n  color: #5cb85c;\n  background-color: #fff;\n}\n.btn-info {\n  color: #fff;\n  background-color: #6dcff6;\n  border-color: #55c7f5;\n}\n.btn-info:focus,\n.btn-info.focus {\n  color: #fff;\n  background-color: #3dbff3;\n  border-color: #0c8bbe;\n}\n.btn-info:hover {\n  color: #fff;\n  background-color: #3dbff3;\n  border-color: #1bb4f1;\n}\n.btn-info:active,\n.btn-info.active,\n.open > .dropdown-toggle.btn-info {\n  color: #fff;\n  background-color: #3dbff3;\n  border-color: #1bb4f1;\n}\n.btn-info:active:hover,\n.btn-info.active:hover,\n.open > .dropdown-toggle.btn-info:hover,\n.btn-info:active:focus,\n.btn-info.active:focus,\n.open > .dropdown-toggle.btn-info:focus,\n.btn-info:active.focus,\n.btn-info.active.focus,\n.open > .dropdown-toggle.btn-info.focus {\n  color: #fff;\n  background-color: #1bb4f1;\n  border-color: #0c8bbe;\n}\n.btn-info:active,\n.btn-info.active,\n.open > .dropdown-toggle.btn-info {\n  background-image: none;\n}\n.btn-info.disabled:hover,\n.btn-info[disabled]:hover,\nfieldset[disabled] .btn-info:hover,\n.btn-info.disabled:focus,\n.btn-info[disabled]:focus,\nfieldset[disabled] .btn-info:focus,\n.btn-info.disabled.focus,\n.btn-info[disabled].focus,\nfieldset[disabled] .btn-info.focus {\n  background-color: #6dcff6;\n  border-color: #55c7f5;\n}\n.btn-info .badge {\n  color: #6dcff6;\n  background-color: #fff;\n}\n.btn-warning {\n  color: #fff;\n  background-color: #f0ad4e;\n  border-color: #eea236;\n}\n.btn-warning:focus,\n.btn-warning.focus {\n  color: #fff;\n  background-color: #ec971f;\n  border-color: #985f0d;\n}\n.btn-warning:hover {\n  color: #fff;\n  background-color: #ec971f;\n  border-color: #d58512;\n}\n.btn-warning:active,\n.btn-warning.active,\n.open > .dropdown-toggle.btn-warning {\n  color: #fff;\n  background-color: #ec971f;\n  border-color: #d58512;\n}\n.btn-warning:active:hover,\n.btn-warning.active:hover,\n.open > .dropdown-toggle.btn-warning:hover,\n.btn-warning:active:focus,\n.btn-warning.active:focus,\n.open > .dropdown-toggle.btn-warning:focus,\n.btn-warning:active.focus,\n.btn-warning.active.focus,\n.open > .dropdown-toggle.btn-warning.focus {\n  color: #fff;\n  background-color: #d58512;\n  border-color: #985f0d;\n}\n.btn-warning:active,\n.btn-warning.active,\n.open > .dropdown-toggle.btn-warning {\n  background-image: none;\n}\n.btn-warning.disabled:hover,\n.btn-warning[disabled]:hover,\nfieldset[disabled] .btn-warning:hover,\n.btn-warning.disabled:focus,\n.btn-warning[disabled]:focus,\nfieldset[disabled] .btn-warning:focus,\n.btn-warning.disabled.focus,\n.btn-warning[disabled].focus,\nfieldset[disabled] .btn-warning.focus {\n  background-color: #f0ad4e;\n  border-color: #eea236;\n}\n.btn-warning .badge {\n  color: #f0ad4e;\n  background-color: #fff;\n}\n.btn-danger {\n  color: #fff;\n  background-color: #d9534f;\n  border-color: #d43f3a;\n}\n.btn-danger:focus,\n.btn-danger.focus {\n  color: #fff;\n  background-color: #c9302c;\n  border-color: #761c19;\n}\n.btn-danger:hover {\n  color: #fff;\n  background-color: #c9302c;\n  border-color: #ac2925;\n}\n.btn-danger:active,\n.btn-danger.active,\n.open > .dropdown-toggle.btn-danger {\n  color: #fff;\n  background-color: #c9302c;\n  border-color: #ac2925;\n}\n.btn-danger:active:hover,\n.btn-danger.active:hover,\n.open > .dropdown-toggle.btn-danger:hover,\n.btn-danger:active:focus,\n.btn-danger.active:focus,\n.open > .dropdown-toggle.btn-danger:focus,\n.btn-danger:active.focus,\n.btn-danger.active.focus,\n.open > .dropdown-toggle.btn-danger.focus {\n  color: #fff;\n  background-color: #ac2925;\n  border-color: #761c19;\n}\n.btn-danger:active,\n.btn-danger.active,\n.open > .dropdown-toggle.btn-danger {\n  background-image: none;\n}\n.btn-danger.disabled:hover,\n.btn-danger[disabled]:hover,\nfieldset[disabled] .btn-danger:hover,\n.btn-danger.disabled:focus,\n.btn-danger[disabled]:focus,\nfieldset[disabled] .btn-danger:focus,\n.btn-danger.disabled.focus,\n.btn-danger[disabled].focus,\nfieldset[disabled] .btn-danger.focus {\n  background-color: #d9534f;\n  border-color: #d43f3a;\n}\n.btn-danger .badge {\n  color: #d9534f;\n  background-color: #fff;\n}\n.btn-link {\n  color: #0080B7;\n  font-weight: normal;\n  border-radius: 0;\n}\n.btn-link,\n.btn-link:active,\n.btn-link.active,\n.btn-link[disabled],\nfieldset[disabled] .btn-link {\n  background-color: transparent;\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n.btn-link,\n.btn-link:hover,\n.btn-link:focus,\n.btn-link:active {\n  border-color: transparent;\n}\n.btn-link:hover,\n.btn-link:focus {\n  color: #004a6b;\n  text-decoration: underline;\n  background-color: transparent;\n}\n.btn-link[disabled]:hover,\nfieldset[disabled] .btn-link:hover,\n.btn-link[disabled]:focus,\nfieldset[disabled] .btn-link:focus {\n  color: #777777;\n  text-decoration: none;\n}\n.btn-lg,\n.btn-group-lg > .btn {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\n.btn-sm,\n.btn-group-sm > .btn {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n.btn-xs,\n.btn-group-xs > .btn {\n  padding: 1px 5px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n.btn-block + .btn-block {\n  margin-top: 5px;\n}\ninput[type=\"submit\"].btn-block,\ninput[type=\"reset\"].btn-block,\ninput[type=\"button\"].btn-block {\n  width: 100%;\n}\n.fade {\n  opacity: 0;\n  -webkit-transition: opacity 0.15s linear;\n  -o-transition: opacity 0.15s linear;\n  transition: opacity 0.15s linear;\n}\n.fade.in {\n  opacity: 1;\n}\n.collapse {\n  display: none;\n}\n.collapse.in {\n  display: block;\n}\ntr.collapse.in {\n  display: table-row;\n}\ntbody.collapse.in {\n  display: table-row-group;\n}\n.collapsing {\n  position: relative;\n  height: 0;\n  overflow: hidden;\n  -webkit-transition-property: height, visibility;\n  transition-property: height, visibility;\n  -webkit-transition-duration: 0.35s;\n  transition-duration: 0.35s;\n  -webkit-transition-timing-function: ease;\n  transition-timing-function: ease;\n}\n.caret {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  margin-left: 2px;\n  vertical-align: middle;\n  border-top: 4px dashed;\n  border-top: 4px solid \\9;\n  border-right: 4px solid transparent;\n  border-left: 4px solid transparent;\n}\n.dropup,\n.dropdown {\n  position: relative;\n}\n.dropdown-toggle:focus {\n  outline: 0;\n}\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  z-index: 1000;\n  display: none;\n  float: left;\n  min-width: 160px;\n  padding: 5px 0;\n  margin: 2px 0 0;\n  list-style: none;\n  font-size: 14px;\n  text-align: left;\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  border-radius: 4px;\n  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  background-clip: padding-box;\n}\n.dropdown-menu.pull-right {\n  right: 0;\n  left: auto;\n}\n.dropdown-menu .divider {\n  height: 1px;\n  margin: 9px 0;\n  overflow: hidden;\n  background-color: #e5e5e5;\n}\n.dropdown-menu > li > a {\n  display: block;\n  padding: 3px 20px;\n  clear: both;\n  font-weight: normal;\n  line-height: 1.42857143;\n  color: #333333;\n  white-space: nowrap;\n}\n.dropdown-menu > li > a:hover,\n.dropdown-menu > li > a:focus {\n  text-decoration: none;\n  color: #262626;\n  background-color: #f5f5f5;\n}\n.dropdown-menu > .active > a,\n.dropdown-menu > .active > a:hover,\n.dropdown-menu > .active > a:focus {\n  color: #fff;\n  text-decoration: none;\n  outline: 0;\n  background-color: #0080B7;\n}\n.dropdown-menu > .disabled > a,\n.dropdown-menu > .disabled > a:hover,\n.dropdown-menu > .disabled > a:focus {\n  color: #777777;\n}\n.dropdown-menu > .disabled > a:hover,\n.dropdown-menu > .disabled > a:focus {\n  text-decoration: none;\n  background-color: transparent;\n  background-image: none;\n  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n  cursor: not-allowed;\n}\n.open > .dropdown-menu {\n  display: block;\n}\n.open > a {\n  outline: 0;\n}\n.dropdown-menu-right {\n  left: auto;\n  right: 0;\n}\n.dropdown-menu-left {\n  left: 0;\n  right: auto;\n}\n.dropdown-header {\n  display: block;\n  padding: 3px 20px;\n  font-size: 12px;\n  line-height: 1.42857143;\n  color: #777777;\n  white-space: nowrap;\n}\n.dropdown-backdrop {\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  z-index: 990;\n}\n.pull-right > .dropdown-menu {\n  right: 0;\n  left: auto;\n}\n.dropup .caret,\n.navbar-fixed-bottom .dropdown .caret {\n  border-top: 0;\n  border-bottom: 4px dashed;\n  border-bottom: 4px solid \\9;\n  content: \"\";\n}\n.dropup .dropdown-menu,\n.navbar-fixed-bottom .dropdown .dropdown-menu {\n  top: auto;\n  bottom: 100%;\n  margin-bottom: 2px;\n}\n@media (min-width: 768px) {\n  .navbar-right .dropdown-menu {\n    left: auto;\n    right: 0;\n  }\n  .navbar-right .dropdown-menu-left {\n    left: 0;\n    right: auto;\n  }\n}\n.btn-group,\n.btn-group-vertical {\n  position: relative;\n  display: inline-block;\n  vertical-align: middle;\n}\n.btn-group > .btn,\n.btn-group-vertical > .btn {\n  position: relative;\n  float: left;\n}\n.btn-group > .btn:hover,\n.btn-group-vertical > .btn:hover,\n.btn-group > .btn:focus,\n.btn-group-vertical > .btn:focus,\n.btn-group > .btn:active,\n.btn-group-vertical > .btn:active,\n.btn-group > .btn.active,\n.btn-group-vertical > .btn.active {\n  z-index: 2;\n}\n.btn-group .btn + .btn,\n.btn-group .btn + .btn-group,\n.btn-group .btn-group + .btn,\n.btn-group .btn-group + .btn-group {\n  margin-left: -1px;\n}\n.btn-toolbar {\n  margin-left: -5px;\n}\n.btn-toolbar .btn,\n.btn-toolbar .btn-group,\n.btn-toolbar .input-group {\n  float: left;\n}\n.btn-toolbar > .btn,\n.btn-toolbar > .btn-group,\n.btn-toolbar > .input-group {\n  margin-left: 5px;\n}\n.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {\n  border-radius: 0;\n}\n.btn-group > .btn:first-child {\n  margin-left: 0;\n}\n.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n.btn-group > .btn:last-child:not(:first-child),\n.btn-group > .dropdown-toggle:not(:first-child) {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n.btn-group > .btn-group {\n  float: left;\n}\n.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0;\n}\n.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n.btn-group .dropdown-toggle:active,\n.btn-group.open .dropdown-toggle {\n  outline: 0;\n}\n.btn-group > .btn + .dropdown-toggle {\n  padding-left: 8px;\n  padding-right: 8px;\n}\n.btn-group > .btn-lg + .dropdown-toggle {\n  padding-left: 12px;\n  padding-right: 12px;\n}\n.btn-group.open .dropdown-toggle {\n  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n}\n.btn-group.open .dropdown-toggle.btn-link {\n  -webkit-box-shadow: none;\n  box-shadow: none;\n}\n.btn .caret {\n  margin-left: 0;\n}\n.btn-lg .caret {\n  border-width: 5px 5px 0;\n  border-bottom-width: 0;\n}\n.dropup .btn-lg .caret {\n  border-width: 0 5px 5px;\n}\n.btn-group-vertical > .btn,\n.btn-group-vertical > .btn-group,\n.btn-group-vertical > .btn-group > .btn {\n  display: block;\n  float: none;\n  width: 100%;\n  max-width: 100%;\n}\n.btn-group-vertical > .btn-group > .btn {\n  float: none;\n}\n.btn-group-vertical > .btn + .btn,\n.btn-group-vertical > .btn + .btn-group,\n.btn-group-vertical > .btn-group + .btn,\n.btn-group-vertical > .btn-group + .btn-group {\n  margin-top: -1px;\n  margin-left: 0;\n}\n.btn-group-vertical > .btn:not(:first-child):not(:last-child) {\n  border-radius: 0;\n}\n.btn-group-vertical > .btn:first-child:not(:last-child) {\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.btn-group-vertical > .btn:last-child:not(:first-child) {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\n.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {\n  border-radius: 0;\n}\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-child,\n.btn-group-vertical > .btn-group:first-child:not(:last-child) > .dropdown-toggle {\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n.btn-group-justified {\n  display: table;\n  width: 100%;\n  table-layout: fixed;\n  border-collapse: separate;\n}\n.btn-group-justified > .btn,\n.btn-group-justified > .btn-group {\n  float: none;\n  display: table-cell;\n  width: 1%;\n}\n.btn-group-justified > .btn-group .btn {\n  width: 100%;\n}\n.btn-group-justified > .btn-group .dropdown-menu {\n  left: auto;\n}\n[data-toggle=\"buttons\"] > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"radio\"],\n[data-toggle=\"buttons\"] > .btn input[type=\"checkbox\"],\n[data-toggle=\"buttons\"] > .btn-group > .btn input[type=\"checkbox\"] {\n  position: absolute;\n  clip: rect(0, 0, 0, 0);\n  pointer-events: none;\n}\n.input-group {\n  position: relative;\n  display: table;\n  border-collapse: separate;\n}\n.input-group[class*=\"col-\"] {\n  float: none;\n  padding-left: 0;\n  padding-right: 0;\n}\n.input-group .form-control {\n  position: relative;\n  z-index: 2;\n  float: left;\n  width: 100%;\n  margin-bottom: 0;\n}\n.input-group .form-control:focus {\n  z-index: 3;\n}\n.input-group-lg > .form-control,\n.input-group-lg > .input-group-addon,\n.input-group-lg > .input-group-btn > .btn {\n  height: 46px;\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n  border-radius: 6px;\n}\nselect.input-group-lg > .form-control,\nselect.input-group-lg > .input-group-addon,\nselect.input-group-lg > .input-group-btn > .btn {\n  height: 46px;\n  line-height: 46px;\n}\ntextarea.input-group-lg > .form-control,\ntextarea.input-group-lg > .input-group-addon,\ntextarea.input-group-lg > .input-group-btn > .btn,\nselect[multiple].input-group-lg > .form-control,\nselect[multiple].input-group-lg > .input-group-addon,\nselect[multiple].input-group-lg > .input-group-btn > .btn {\n  height: auto;\n}\n.input-group-sm > .form-control,\n.input-group-sm > .input-group-addon,\n.input-group-sm > .input-group-btn > .btn {\n  height: 30px;\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n  border-radius: 3px;\n}\nselect.input-group-sm > .form-control,\nselect.input-group-sm > .input-group-addon,\nselect.input-group-sm > .input-group-btn > .btn {\n  height: 30px;\n  line-height: 30px;\n}\ntextarea.input-group-sm > .form-control,\ntextarea.input-group-sm > .input-group-addon,\ntextarea.input-group-sm > .input-group-btn > .btn,\nselect[multiple].input-group-sm > .form-control,\nselect[multiple].input-group-sm > .input-group-addon,\nselect[multiple].input-group-sm > .input-group-btn > .btn {\n  height: auto;\n}\n.input-group-addon,\n.input-group-btn,\n.input-group .form-control {\n  display: table-cell;\n}\n.input-group-addon:not(:first-child):not(:last-child),\n.input-group-btn:not(:first-child):not(:last-child),\n.input-group .form-control:not(:first-child):not(:last-child) {\n  border-radius: 0;\n}\n.input-group-addon,\n.input-group-btn {\n  width: 1%;\n  white-space: nowrap;\n  vertical-align: middle;\n}\n.input-group-addon {\n  padding: 6px 12px;\n  font-size: 14px;\n  font-weight: normal;\n  line-height: 1;\n  color: #555555;\n  text-align: center;\n  background-color: #eeeeee;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n.input-group-addon.input-sm {\n  padding: 5px 10px;\n  font-size: 12px;\n  border-radius: 3px;\n}\n.input-group-addon.input-lg {\n  padding: 10px 16px;\n  font-size: 18px;\n  border-radius: 6px;\n}\n.input-group-addon input[type=\"radio\"],\n.input-group-addon input[type=\"checkbox\"] {\n  margin-top: 0;\n}\n.input-group .form-control:first-child,\n.input-group-addon:first-child,\n.input-group-btn:first-child > .btn,\n.input-group-btn:first-child > .btn-group > .btn,\n.input-group-btn:first-child > .dropdown-toggle,\n.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),\n.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n}\n.input-group-addon:first-child {\n  border-right: 0;\n}\n.input-group .form-control:last-child,\n.input-group-addon:last-child,\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group > .btn,\n.input-group-btn:last-child > .dropdown-toggle,\n.input-group-btn:first-child > .btn:not(:first-child),\n.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n}\n.input-group-addon:last-child {\n  border-left: 0;\n}\n.input-group-btn {\n  position: relative;\n  font-size: 0;\n  white-space: nowrap;\n}\n.input-group-btn > .btn {\n  position: relative;\n}\n.input-group-btn > .btn + .btn {\n  margin-left: -1px;\n}\n.input-group-btn > .btn:hover,\n.input-group-btn > .btn:focus,\n.input-group-btn > .btn:active {\n  z-index: 2;\n}\n.input-group-btn:first-child > .btn,\n.input-group-btn:first-child > .btn-group {\n  margin-right: -1px;\n}\n.input-group-btn:last-child > .btn,\n.input-group-btn:last-child > .btn-group {\n  z-index: 2;\n  margin-left: -1px;\n}\n.nav {\n  margin-bottom: 0;\n  padding-left: 0;\n  list-style: none;\n}\n.nav > li {\n  position: relative;\n  display: block;\n}\n.nav > li > a {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n}\n.nav > li > a:hover,\n.nav > li > a:focus {\n  text-decoration: none;\n  background-color: #eeeeee;\n}\n.nav > li.disabled > a {\n  color: #777777;\n}\n.nav > li.disabled > a:hover,\n.nav > li.disabled > a:focus {\n  color: #777777;\n  text-decoration: none;\n  background-color: transparent;\n  cursor: not-allowed;\n}\n.nav .open > a,\n.nav .open > a:hover,\n.nav .open > a:focus {\n  background-color: #eeeeee;\n  border-color: #0080B7;\n}\n.nav .nav-divider {\n  height: 1px;\n  margin: 9px 0;\n  overflow: hidden;\n  background-color: #e5e5e5;\n}\n.nav > li > a > img {\n  max-width: none;\n}\n.nav-tabs {\n  border-bottom: 1px solid #ddd;\n}\n.nav-tabs > li {\n  float: left;\n  margin-bottom: -1px;\n}\n.nav-tabs > li > a {\n  margin-right: 2px;\n  line-height: 1.42857143;\n  border: 1px solid transparent;\n  border-radius: 4px 4px 0 0;\n}\n.nav-tabs > li > a:hover {\n  border-color: #eeeeee #eeeeee #ddd;\n}\n.nav-tabs > li.active > a,\n.nav-tabs > li.active > a:hover,\n.nav-tabs > li.active > a:focus {\n  color: #555555;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-bottom-color: transparent;\n  cursor: default;\n}\n.nav-tabs.nav-justified {\n  width: 100%;\n  border-bottom: 0;\n}\n.nav-tabs.nav-justified > li {\n  float: none;\n}\n.nav-tabs.nav-justified > li > a {\n  text-align: center;\n  margin-bottom: 5px;\n}\n.nav-tabs.nav-justified > .dropdown .dropdown-menu {\n  top: auto;\n  left: auto;\n}\n@media (min-width: 768px) {\n  .nav-tabs.nav-justified > li {\n    display: table-cell;\n    width: 1%;\n  }\n  .nav-tabs.nav-justified > li > a {\n    margin-bottom: 0;\n  }\n}\n.nav-tabs.nav-justified > li > a {\n  margin-right: 0;\n  border-radius: 4px;\n}\n.nav-tabs.nav-justified > .active > a,\n.nav-tabs.nav-justified > .active > a:hover,\n.nav-tabs.nav-justified > .active > a:focus {\n  border: 1px solid #ddd;\n}\n@media (min-width: 768px) {\n  .nav-tabs.nav-justified > li > a {\n    border-bottom: 1px solid #ddd;\n    border-radius: 4px 4px 0 0;\n  }\n  .nav-tabs.nav-justified > .active > a,\n  .nav-tabs.nav-justified > .active > a:hover,\n  .nav-tabs.nav-justified > .active > a:focus {\n    border-bottom-color: #fff;\n  }\n}\n.nav-pills > li {\n  float: left;\n}\n.nav-pills > li > a {\n  border-radius: 4px;\n}\n.nav-pills > li + li {\n  margin-left: 2px;\n}\n.nav-pills > li.active > a,\n.nav-pills > li.active > a:hover,\n.nav-pills > li.active > a:focus {\n  color: #fff;\n  background-color: #0080B7;\n}\n.nav-stacked > li {\n  float: none;\n}\n.nav-stacked > li + li {\n  margin-top: 2px;\n  margin-left: 0;\n}\n.nav-justified {\n  width: 100%;\n}\n.nav-justified > li {\n  float: none;\n}\n.nav-justified > li > a {\n  text-align: center;\n  margin-bottom: 5px;\n}\n.nav-justified > .dropdown .dropdown-menu {\n  top: auto;\n  left: auto;\n}\n@media (min-width: 768px) {\n  .nav-justified > li {\n    display: table-cell;\n    width: 1%;\n  }\n  .nav-justified > li > a {\n    margin-bottom: 0;\n  }\n}\n.nav-tabs-justified {\n  border-bottom: 0;\n}\n.nav-tabs-justified > li > a {\n  margin-right: 0;\n  border-radius: 4px;\n}\n.nav-tabs-justified > .active > a,\n.nav-tabs-justified > .active > a:hover,\n.nav-tabs-justified > .active > a:focus {\n  border: 1px solid #ddd;\n}\n@media (min-width: 768px) {\n  .nav-tabs-justified > li > a {\n    border-bottom: 1px solid #ddd;\n    border-radius: 4px 4px 0 0;\n  }\n  .nav-tabs-justified > .active > a,\n  .nav-tabs-justified > .active > a:hover,\n  .nav-tabs-justified > .active > a:focus {\n    border-bottom-color: #fff;\n  }\n}\n.tab-content > .tab-pane {\n  display: none;\n}\n.tab-content > .active {\n  display: block;\n}\n.nav-tabs .dropdown-menu {\n  margin-top: -1px;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n.navbar {\n  position: relative;\n  min-height: 50px;\n  margin-bottom: 20px;\n  border: 1px solid transparent;\n}\n@media (min-width: 768px) {\n  .navbar {\n    border-radius: 4px;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-header {\n    float: left;\n  }\n}\n.navbar-collapse {\n  overflow-x: visible;\n  padding-right: 15px;\n  padding-left: 15px;\n  border-top: 1px solid transparent;\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);\n  -webkit-overflow-scrolling: touch;\n}\n.navbar-collapse.in {\n  overflow-y: auto;\n}\n@media (min-width: 768px) {\n  .navbar-collapse {\n    width: auto;\n    border-top: 0;\n    box-shadow: none;\n  }\n  .navbar-collapse.collapse {\n    display: block !important;\n    height: auto !important;\n    padding-bottom: 0;\n    overflow: visible !important;\n  }\n  .navbar-collapse.in {\n    overflow-y: visible;\n  }\n  .navbar-fixed-top .navbar-collapse,\n  .navbar-static-top .navbar-collapse,\n  .navbar-fixed-bottom .navbar-collapse {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n.navbar-fixed-top .navbar-collapse,\n.navbar-fixed-bottom .navbar-collapse {\n  max-height: 340px;\n}\n@media (max-device-width: 480px) and (orientation: landscape) {\n  .navbar-fixed-top .navbar-collapse,\n  .navbar-fixed-bottom .navbar-collapse {\n    max-height: 200px;\n  }\n}\n.container > .navbar-header,\n.container-fluid > .navbar-header,\n.container > .navbar-collapse,\n.container-fluid > .navbar-collapse {\n  margin-right: -15px;\n  margin-left: -15px;\n}\n@media (min-width: 768px) {\n  .container > .navbar-header,\n  .container-fluid > .navbar-header,\n  .container > .navbar-collapse,\n  .container-fluid > .navbar-collapse {\n    margin-right: 0;\n    margin-left: 0;\n  }\n}\n.navbar-static-top {\n  z-index: 1000;\n  border-width: 0 0 1px;\n}\n@media (min-width: 768px) {\n  .navbar-static-top {\n    border-radius: 0;\n  }\n}\n.navbar-fixed-top,\n.navbar-fixed-bottom {\n  position: fixed;\n  right: 0;\n  left: 0;\n  z-index: 1030;\n}\n@media (min-width: 768px) {\n  .navbar-fixed-top,\n  .navbar-fixed-bottom {\n    border-radius: 0;\n  }\n}\n.navbar-fixed-top {\n  top: 0;\n  border-width: 0 0 1px;\n}\n.navbar-fixed-bottom {\n  bottom: 0;\n  margin-bottom: 0;\n  border-width: 1px 0 0;\n}\n.navbar-brand {\n  float: left;\n  padding: 15px 15px;\n  font-size: 18px;\n  line-height: 20px;\n  height: 50px;\n}\n.navbar-brand:hover,\n.navbar-brand:focus {\n  text-decoration: none;\n}\n.navbar-brand > img {\n  display: block;\n}\n@media (min-width: 768px) {\n  .navbar > .container .navbar-brand,\n  .navbar > .container-fluid .navbar-brand {\n    margin-left: -15px;\n  }\n}\n.navbar-toggle {\n  position: relative;\n  float: right;\n  margin-right: 15px;\n  padding: 9px 10px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  background-color: transparent;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n}\n.navbar-toggle:focus {\n  outline: 0;\n}\n.navbar-toggle .icon-bar {\n  display: block;\n  width: 22px;\n  height: 2px;\n  border-radius: 1px;\n}\n.navbar-toggle .icon-bar + .icon-bar {\n  margin-top: 4px;\n}\n@media (min-width: 768px) {\n  .navbar-toggle {\n    display: none;\n  }\n}\n.navbar-nav {\n  margin: 7.5px -15px;\n}\n.navbar-nav > li > a {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  line-height: 20px;\n}\n@media (max-width: 767px) {\n  .navbar-nav .open .dropdown-menu {\n    position: static;\n    float: none;\n    width: auto;\n    margin-top: 0;\n    background-color: transparent;\n    border: 0;\n    box-shadow: none;\n  }\n  .navbar-nav .open .dropdown-menu > li > a,\n  .navbar-nav .open .dropdown-menu .dropdown-header {\n    padding: 5px 15px 5px 25px;\n  }\n  .navbar-nav .open .dropdown-menu > li > a {\n    line-height: 20px;\n  }\n  .navbar-nav .open .dropdown-menu > li > a:hover,\n  .navbar-nav .open .dropdown-menu > li > a:focus {\n    background-image: none;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-nav {\n    float: left;\n    margin: 0;\n  }\n  .navbar-nav > li {\n    float: left;\n  }\n  .navbar-nav > li > a {\n    padding-top: 15px;\n    padding-bottom: 15px;\n  }\n}\n.navbar-form {\n  margin-left: -15px;\n  margin-right: -15px;\n  padding: 10px 15px;\n  border-top: 1px solid transparent;\n  border-bottom: 1px solid transparent;\n  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1), 0 1px 0 rgba(255, 255, 255, 0.1);\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n@media (min-width: 768px) {\n  .navbar-form .form-group {\n    display: inline-block;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .navbar-form .form-control {\n    display: inline-block;\n    width: auto;\n    vertical-align: middle;\n  }\n  .navbar-form .form-control-static {\n    display: inline-block;\n  }\n  .navbar-form .input-group {\n    display: inline-table;\n    vertical-align: middle;\n  }\n  .navbar-form .input-group .input-group-addon,\n  .navbar-form .input-group .input-group-btn,\n  .navbar-form .input-group .form-control {\n    width: auto;\n  }\n  .navbar-form .input-group > .form-control {\n    width: 100%;\n  }\n  .navbar-form .control-label {\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .navbar-form .radio,\n  .navbar-form .checkbox {\n    display: inline-block;\n    margin-top: 0;\n    margin-bottom: 0;\n    vertical-align: middle;\n  }\n  .navbar-form .radio label,\n  .navbar-form .checkbox label {\n    padding-left: 0;\n  }\n  .navbar-form .radio input[type=\"radio\"],\n  .navbar-form .checkbox input[type=\"checkbox\"] {\n    position: relative;\n    margin-left: 0;\n  }\n  .navbar-form .has-feedback .form-control-feedback {\n    top: 0;\n  }\n}\n@media (max-width: 767px) {\n  .navbar-form .form-group {\n    margin-bottom: 5px;\n  }\n  .navbar-form .form-group:last-child {\n    margin-bottom: 0;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-form {\n    width: auto;\n    border: 0;\n    margin-left: 0;\n    margin-right: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    -webkit-box-shadow: none;\n    box-shadow: none;\n  }\n}\n.navbar-nav > li > .dropdown-menu {\n  margin-top: 0;\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {\n  margin-bottom: 0;\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n.navbar-btn {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n.navbar-btn.btn-sm {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n.navbar-btn.btn-xs {\n  margin-top: 14px;\n  margin-bottom: 14px;\n}\n.navbar-text {\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n@media (min-width: 768px) {\n  .navbar-text {\n    float: left;\n    margin-left: 15px;\n    margin-right: 15px;\n  }\n}\n@media (min-width: 768px) {\n  .navbar-left {\n    float: left !important;\n  }\n  .navbar-right {\n    float: right !important;\n    margin-right: -15px;\n  }\n  .navbar-right ~ .navbar-right {\n    margin-right: 0;\n  }\n}\n.navbar-default {\n  background-color: #f8f8f8;\n  border-color: #e7e7e7;\n}\n.navbar-default .navbar-brand {\n  color: #777;\n}\n.navbar-default .navbar-brand:hover,\n.navbar-default .navbar-brand:focus {\n  color: #5e5e5e;\n  background-color: transparent;\n}\n.navbar-default .navbar-text {\n  color: #777;\n}\n.navbar-default .navbar-nav > li > a {\n  color: #777;\n}\n.navbar-default .navbar-nav > li > a:hover,\n.navbar-default .navbar-nav > li > a:focus {\n  color: #333;\n  background-color: transparent;\n}\n.navbar-default .navbar-nav > .active > a,\n.navbar-default .navbar-nav > .active > a:hover,\n.navbar-default .navbar-nav > .active > a:focus {\n  color: #555;\n  background-color: #e7e7e7;\n}\n.navbar-default .navbar-nav > .disabled > a,\n.navbar-default .navbar-nav > .disabled > a:hover,\n.navbar-default .navbar-nav > .disabled > a:focus {\n  color: #ccc;\n  background-color: transparent;\n}\n.navbar-default .navbar-toggle {\n  border-color: #ddd;\n}\n.navbar-default .navbar-toggle:hover,\n.navbar-default .navbar-toggle:focus {\n  background-color: #ddd;\n}\n.navbar-default .navbar-toggle .icon-bar {\n  background-color: #888;\n}\n.navbar-default .navbar-collapse,\n.navbar-default .navbar-form {\n  border-color: #e7e7e7;\n}\n.navbar-default .navbar-nav > .open > a,\n.navbar-default .navbar-nav > .open > a:hover,\n.navbar-default .navbar-nav > .open > a:focus {\n  background-color: #e7e7e7;\n  color: #555;\n}\n@media (max-width: 767px) {\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a {\n    color: #777;\n  }\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover,\n  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #333;\n    background-color: transparent;\n  }\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a,\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover,\n  .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {\n    color: #555;\n    background-color: #e7e7e7;\n  }\n  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a,\n  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:hover,\n  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n    color: #ccc;\n    background-color: transparent;\n  }\n}\n.navbar-default .navbar-link {\n  color: #777;\n}\n.navbar-default .navbar-link:hover {\n  color: #333;\n}\n.navbar-default .btn-link {\n  color: #777;\n}\n.navbar-default .btn-link:hover,\n.navbar-default .btn-link:focus {\n  color: #333;\n}\n.navbar-default .btn-link[disabled]:hover,\nfieldset[disabled] .navbar-default .btn-link:hover,\n.navbar-default .btn-link[disabled]:focus,\nfieldset[disabled] .navbar-default .btn-link:focus {\n  color: #ccc;\n}\n.navbar-inverse {\n  background-color: #222;\n  border-color: #080808;\n}\n.navbar-inverse .navbar-brand {\n  color: #9d9d9d;\n}\n.navbar-inverse .navbar-brand:hover,\n.navbar-inverse .navbar-brand:focus {\n  color: #fff;\n  background-color: transparent;\n}\n.navbar-inverse .navbar-text {\n  color: #9d9d9d;\n}\n.navbar-inverse .navbar-nav > li > a {\n  color: #9d9d9d;\n}\n.navbar-inverse .navbar-nav > li > a:hover,\n.navbar-inverse .navbar-nav > li > a:focus {\n  color: #fff;\n  background-color: transparent;\n}\n.navbar-inverse .navbar-nav > .active > a,\n.navbar-inverse .navbar-nav > .active > a:hover,\n.navbar-inverse .navbar-nav > .active > a:focus {\n  color: #fff;\n  background-color: #080808;\n}\n.navbar-inverse .navbar-nav > .disabled > a,\n.navbar-inverse .navbar-nav > .disabled > a:hover,\n.navbar-inverse .navbar-nav > .disabled > a:focus {\n  color: #444;\n  background-color: transparent;\n}\n.navbar-inverse .navbar-toggle {\n  border-color: #333;\n}\n.navbar-inverse .navbar-toggle:hover,\n.navbar-inverse .navbar-toggle:focus {\n  background-color: #333;\n}\n.navbar-inverse .navbar-toggle .icon-bar {\n  background-color: #fff;\n}\n.navbar-inverse .navbar-collapse,\n.navbar-inverse .navbar-form {\n  border-color: #101010;\n}\n.navbar-inverse .navbar-nav > .open > a,\n.navbar-inverse .navbar-nav > .open > a:hover,\n.navbar-inverse .navbar-nav > .open > a:focus {\n  background-color: #080808;\n  color: #fff;\n}\n@media (max-width: 767px) {\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header {\n    border-color: #080808;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu .divider {\n    background-color: #080808;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a {\n    color: #9d9d9d;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover,\n  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus {\n    color: #fff;\n    background-color: transparent;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a,\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:hover,\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:focus {\n    color: #fff;\n    background-color: #080808;\n  }\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a,\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover,\n  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus {\n    color: #444;\n    background-color: transparent;\n  }\n}\n.navbar-inverse .navbar-link {\n  color: #9d9d9d;\n}\n.navbar-inverse .navbar-link:hover {\n  color: #fff;\n}\n.navbar-inverse .btn-link {\n  color: #9d9d9d;\n}\n.navbar-inverse .btn-link:hover,\n.navbar-inverse .btn-link:focus {\n  color: #fff;\n}\n.navbar-inverse .btn-link[disabled]:hover,\nfieldset[disabled] .navbar-inverse .btn-link:hover,\n.navbar-inverse .btn-link[disabled]:focus,\nfieldset[disabled] .navbar-inverse .btn-link:focus {\n  color: #444;\n}\n.breadcrumb {\n  padding: 8px 15px;\n  margin-bottom: 20px;\n  list-style: none;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n}\n.breadcrumb > li {\n  display: inline-block;\n}\n.breadcrumb > li + li:before {\n  content: \"/\\A0\";\n  padding: 0 5px;\n  color: #ccc;\n}\n.breadcrumb > .active {\n  color: #777777;\n}\n.pagination {\n  display: inline-block;\n  padding-left: 0;\n  margin: 20px 0;\n  border-radius: 4px;\n}\n.pagination > li {\n  display: inline;\n}\n.pagination > li > a,\n.pagination > li > span {\n  position: relative;\n  float: left;\n  padding: 6px 12px;\n  line-height: 1.42857143;\n  text-decoration: none;\n  color: #0080B7;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  margin-left: -1px;\n}\n.pagination > li:first-child > a,\n.pagination > li:first-child > span {\n  margin-left: 0;\n  border-bottom-left-radius: 4px;\n  border-top-left-radius: 4px;\n}\n.pagination > li:last-child > a,\n.pagination > li:last-child > span {\n  border-bottom-right-radius: 4px;\n  border-top-right-radius: 4px;\n}\n.pagination > li > a:hover,\n.pagination > li > span:hover,\n.pagination > li > a:focus,\n.pagination > li > span:focus {\n  z-index: 2;\n  color: #004a6b;\n  background-color: #eeeeee;\n  border-color: #ddd;\n}\n.pagination > .active > a,\n.pagination > .active > span,\n.pagination > .active > a:hover,\n.pagination > .active > span:hover,\n.pagination > .active > a:focus,\n.pagination > .active > span:focus {\n  z-index: 3;\n  color: #fff;\n  background-color: #0080B7;\n  border-color: #0080B7;\n  cursor: default;\n}\n.pagination > .disabled > span,\n.pagination > .disabled > span:hover,\n.pagination > .disabled > span:focus,\n.pagination > .disabled > a,\n.pagination > .disabled > a:hover,\n.pagination > .disabled > a:focus {\n  color: #777777;\n  background-color: #fff;\n  border-color: #ddd;\n  cursor: not-allowed;\n}\n.pagination-lg > li > a,\n.pagination-lg > li > span {\n  padding: 10px 16px;\n  font-size: 18px;\n  line-height: 1.3333333;\n}\n.pagination-lg > li:first-child > a,\n.pagination-lg > li:first-child > span {\n  border-bottom-left-radius: 6px;\n  border-top-left-radius: 6px;\n}\n.pagination-lg > li:last-child > a,\n.pagination-lg > li:last-child > span {\n  border-bottom-right-radius: 6px;\n  border-top-right-radius: 6px;\n}\n.pagination-sm > li > a,\n.pagination-sm > li > span {\n  padding: 5px 10px;\n  font-size: 12px;\n  line-height: 1.5;\n}\n.pagination-sm > li:first-child > a,\n.pagination-sm > li:first-child > span {\n  border-bottom-left-radius: 3px;\n  border-top-left-radius: 3px;\n}\n.pagination-sm > li:last-child > a,\n.pagination-sm > li:last-child > span {\n  border-bottom-right-radius: 3px;\n  border-top-right-radius: 3px;\n}\n.pager {\n  padding-left: 0;\n  margin: 20px 0;\n  list-style: none;\n  text-align: center;\n}\n.pager li {\n  display: inline;\n}\n.pager li > a,\n.pager li > span {\n  display: inline-block;\n  padding: 5px 14px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 15px;\n}\n.pager li > a:hover,\n.pager li > a:focus {\n  text-decoration: none;\n  background-color: #eeeeee;\n}\n.pager .next > a,\n.pager .next > span {\n  float: right;\n}\n.pager .previous > a,\n.pager .previous > span {\n  float: left;\n}\n.pager .disabled > a,\n.pager .disabled > a:hover,\n.pager .disabled > a:focus,\n.pager .disabled > span {\n  color: #777777;\n  background-color: #fff;\n  cursor: not-allowed;\n}\n.label {\n  display: inline;\n  padding: .2em .6em .3em;\n  font-size: 75%;\n  font-weight: bold;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: baseline;\n  border-radius: .25em;\n}\na.label:hover,\na.label:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer;\n}\n.label:empty {\n  display: none;\n}\n.btn .label {\n  position: relative;\n  top: -1px;\n}\n.label-default {\n  background-color: #777777;\n}\n.label-default[href]:hover,\n.label-default[href]:focus {\n  background-color: #5e5e5e;\n}\n.label-primary {\n  background-color: #0080B7;\n}\n.label-primary[href]:hover,\n.label-primary[href]:focus {\n  background-color: #005c84;\n}\n.label-success {\n  background-color: #5cb85c;\n}\n.label-success[href]:hover,\n.label-success[href]:focus {\n  background-color: #449d44;\n}\n.label-info {\n  background-color: #6dcff6;\n}\n.label-info[href]:hover,\n.label-info[href]:focus {\n  background-color: #3dbff3;\n}\n.label-warning {\n  background-color: #f0ad4e;\n}\n.label-warning[href]:hover,\n.label-warning[href]:focus {\n  background-color: #ec971f;\n}\n.label-danger {\n  background-color: #d9534f;\n}\n.label-danger[href]:hover,\n.label-danger[href]:focus {\n  background-color: #c9302c;\n}\n.badge {\n  display: inline-block;\n  min-width: 10px;\n  padding: 3px 7px;\n  font-size: 12px;\n  font-weight: bold;\n  color: #fff;\n  line-height: 1;\n  vertical-align: middle;\n  white-space: nowrap;\n  text-align: center;\n  background-color: #777777;\n  border-radius: 10px;\n}\n.badge:empty {\n  display: none;\n}\n.btn .badge {\n  position: relative;\n  top: -1px;\n}\n.btn-xs .badge,\n.btn-group-xs > .btn .badge {\n  top: 0;\n  padding: 1px 5px;\n}\na.badge:hover,\na.badge:focus {\n  color: #fff;\n  text-decoration: none;\n  cursor: pointer;\n}\n.list-group-item.active > .badge,\n.nav-pills > .active > a > .badge {\n  color: #0080B7;\n  background-color: #fff;\n}\n.list-group-item > .badge {\n  float: right;\n}\n.list-group-item > .badge + .badge {\n  margin-right: 5px;\n}\n.nav-pills > li > a > .badge {\n  margin-left: 3px;\n}\n.jumbotron {\n  padding-top: 30px;\n  padding-bottom: 30px;\n  margin-bottom: 30px;\n  color: inherit;\n  background-color: #eeeeee;\n}\n.jumbotron h1,\n.jumbotron .h1 {\n  color: inherit;\n}\n.jumbotron p {\n  margin-bottom: 15px;\n  font-size: 21px;\n  font-weight: 200;\n}\n.jumbotron > hr {\n  border-top-color: #d5d5d5;\n}\n.container .jumbotron,\n.container-fluid .jumbotron {\n  border-radius: 6px;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n.jumbotron .container {\n  max-width: 100%;\n}\n@media screen and (min-width: 768px) {\n  .jumbotron {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n  .container .jumbotron,\n  .container-fluid .jumbotron {\n    padding-left: 60px;\n    padding-right: 60px;\n  }\n  .jumbotron h1,\n  .jumbotron .h1 {\n    font-size: 63px;\n  }\n}\n.thumbnail {\n  display: block;\n  padding: 4px;\n  margin-bottom: 20px;\n  line-height: 1.42857143;\n  background-color: #fff;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  -webkit-transition: border 0.2s ease-in-out;\n  -o-transition: border 0.2s ease-in-out;\n  transition: border 0.2s ease-in-out;\n}\n.thumbnail > img,\n.thumbnail a > img {\n  margin-left: auto;\n  margin-right: auto;\n}\na.thumbnail:hover,\na.thumbnail:focus,\na.thumbnail.active {\n  border-color: #0080B7;\n}\n.thumbnail .caption {\n  padding: 9px;\n  color: #333333;\n}\n.alert {\n  padding: 15px;\n  margin-bottom: 20px;\n  border: 1px solid transparent;\n  border-radius: 4px;\n}\n.alert h4 {\n  margin-top: 0;\n  color: inherit;\n}\n.alert .alert-link {\n  font-weight: bold;\n}\n.alert > p,\n.alert > ul {\n  margin-bottom: 0;\n}\n.alert > p + p {\n  margin-top: 5px;\n}\n.alert-dismissable,\n.alert-dismissible {\n  padding-right: 35px;\n}\n.alert-dismissable .close,\n.alert-dismissible .close {\n  position: relative;\n  top: -2px;\n  right: -21px;\n  color: inherit;\n}\n.alert-success {\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n  color: #3c763d;\n}\n.alert-success hr {\n  border-top-color: #c9e2b3;\n}\n.alert-success .alert-link {\n  color: #2b542c;\n}\n.alert-info {\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n  color: #31708f;\n}\n.alert-info hr {\n  border-top-color: #a6e1ec;\n}\n.alert-info .alert-link {\n  color: #245269;\n}\n.alert-warning {\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n  color: #8a6d3b;\n}\n.alert-warning hr {\n  border-top-color: #f7e1b5;\n}\n.alert-warning .alert-link {\n  color: #66512c;\n}\n.alert-danger {\n  background-color: #f2dede;\n  border-color: #ebccd1;\n  color: #a94442;\n}\n.alert-danger hr {\n  border-top-color: #e4b9c0;\n}\n.alert-danger .alert-link {\n  color: #843534;\n}\n@-webkit-keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0;\n  }\n  to {\n    background-position: 0 0;\n  }\n}\n@keyframes progress-bar-stripes {\n  from {\n    background-position: 40px 0;\n  }\n  to {\n    background-position: 0 0;\n  }\n}\n.progress {\n  overflow: hidden;\n  height: 20px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);\n}\n.progress-bar {\n  float: left;\n  width: 0%;\n  height: 100%;\n  font-size: 12px;\n  line-height: 20px;\n  color: #fff;\n  text-align: center;\n  background-color: #0080B7;\n  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  box-shadow: inset 0 -1px 0 rgba(0, 0, 0, 0.15);\n  -webkit-transition: width 0.6s ease;\n  -o-transition: width 0.6s ease;\n  transition: width 0.6s ease;\n}\n.progress-striped .progress-bar,\n.progress-bar-striped {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-size: 40px 40px;\n}\n.progress.active .progress-bar,\n.progress-bar.active {\n  -webkit-animation: progress-bar-stripes 2s linear infinite;\n  -o-animation: progress-bar-stripes 2s linear infinite;\n  animation: progress-bar-stripes 2s linear infinite;\n}\n.progress-bar-success {\n  background-color: #5cb85c;\n}\n.progress-striped .progress-bar-success {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n.progress-bar-info {\n  background-color: #6dcff6;\n}\n.progress-striped .progress-bar-info {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n.progress-bar-warning {\n  background-color: #f0ad4e;\n}\n.progress-striped .progress-bar-warning {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n.progress-bar-danger {\n  background-color: #d9534f;\n}\n.progress-striped .progress-bar-danger {\n  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: -o-linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n  background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);\n}\n.media {\n  margin-top: 15px;\n}\n.media:first-child {\n  margin-top: 0;\n}\n.media,\n.media-body {\n  zoom: 1;\n  overflow: hidden;\n}\n.media-body {\n  width: 10000px;\n}\n.media-object {\n  display: block;\n}\n.media-object.img-thumbnail {\n  max-width: none;\n}\n.media-right,\n.media > .pull-right {\n  padding-left: 10px;\n}\n.media-left,\n.media > .pull-left {\n  padding-right: 10px;\n}\n.media-left,\n.media-right,\n.media-body {\n  display: table-cell;\n  vertical-align: top;\n}\n.media-middle {\n  vertical-align: middle;\n}\n.media-bottom {\n  vertical-align: bottom;\n}\n.media-heading {\n  margin-top: 0;\n  margin-bottom: 5px;\n}\n.media-list {\n  padding-left: 0;\n  list-style: none;\n}\n.list-group {\n  margin-bottom: 20px;\n  padding-left: 0;\n}\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: 10px 15px;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid #ddd;\n}\n.list-group-item:first-child {\n  border-top-right-radius: 4px;\n  border-top-left-radius: 4px;\n}\n.list-group-item:last-child {\n  margin-bottom: 0;\n  border-bottom-right-radius: 4px;\n  border-bottom-left-radius: 4px;\n}\na.list-group-item,\nbutton.list-group-item {\n  color: #555;\n}\na.list-group-item .list-group-item-heading,\nbutton.list-group-item .list-group-item-heading {\n  color: #333;\n}\na.list-group-item:hover,\nbutton.list-group-item:hover,\na.list-group-item:focus,\nbutton.list-group-item:focus {\n  text-decoration: none;\n  color: #555;\n  background-color: #f5f5f5;\n}\nbutton.list-group-item {\n  width: 100%;\n  text-align: left;\n}\n.list-group-item.disabled,\n.list-group-item.disabled:hover,\n.list-group-item.disabled:focus {\n  background-color: #eeeeee;\n  color: #777777;\n  cursor: not-allowed;\n}\n.list-group-item.disabled .list-group-item-heading,\n.list-group-item.disabled:hover .list-group-item-heading,\n.list-group-item.disabled:focus .list-group-item-heading {\n  color: inherit;\n}\n.list-group-item.disabled .list-group-item-text,\n.list-group-item.disabled:hover .list-group-item-text,\n.list-group-item.disabled:focus .list-group-item-text {\n  color: #777777;\n}\n.list-group-item.active,\n.list-group-item.active:hover,\n.list-group-item.active:focus {\n  z-index: 2;\n  color: #fff;\n  background-color: #0080B7;\n  border-color: #0080B7;\n}\n.list-group-item.active .list-group-item-heading,\n.list-group-item.active:hover .list-group-item-heading,\n.list-group-item.active:focus .list-group-item-heading,\n.list-group-item.active .list-group-item-heading > small,\n.list-group-item.active:hover .list-group-item-heading > small,\n.list-group-item.active:focus .list-group-item-heading > small,\n.list-group-item.active .list-group-item-heading > .small,\n.list-group-item.active:hover .list-group-item-heading > .small,\n.list-group-item.active:focus .list-group-item-heading > .small {\n  color: inherit;\n}\n.list-group-item.active .list-group-item-text,\n.list-group-item.active:hover .list-group-item-text,\n.list-group-item.active:focus .list-group-item-text {\n  color: #84daff;\n}\n.list-group-item-success {\n  color: #3c763d;\n  background-color: #dff0d8;\n}\na.list-group-item-success,\nbutton.list-group-item-success {\n  color: #3c763d;\n}\na.list-group-item-success .list-group-item-heading,\nbutton.list-group-item-success .list-group-item-heading {\n  color: inherit;\n}\na.list-group-item-success:hover,\nbutton.list-group-item-success:hover,\na.list-group-item-success:focus,\nbutton.list-group-item-success:focus {\n  color: #3c763d;\n  background-color: #d0e9c6;\n}\na.list-group-item-success.active,\nbutton.list-group-item-success.active,\na.list-group-item-success.active:hover,\nbutton.list-group-item-success.active:hover,\na.list-group-item-success.active:focus,\nbutton.list-group-item-success.active:focus {\n  color: #fff;\n  background-color: #3c763d;\n  border-color: #3c763d;\n}\n.list-group-item-info {\n  color: #31708f;\n  background-color: #d9edf7;\n}\na.list-group-item-info,\nbutton.list-group-item-info {\n  color: #31708f;\n}\na.list-group-item-info .list-group-item-heading,\nbutton.list-group-item-info .list-group-item-heading {\n  color: inherit;\n}\na.list-group-item-info:hover,\nbutton.list-group-item-info:hover,\na.list-group-item-info:focus,\nbutton.list-group-item-info:focus {\n  color: #31708f;\n  background-color: #c4e3f3;\n}\na.list-group-item-info.active,\nbutton.list-group-item-info.active,\na.list-group-item-info.active:hover,\nbutton.list-group-item-info.active:hover,\na.list-group-item-info.active:focus,\nbutton.list-group-item-info.active:focus {\n  color: #fff;\n  background-color: #31708f;\n  border-color: #31708f;\n}\n.list-group-item-warning {\n  color: #8a6d3b;\n  background-color: #fcf8e3;\n}\na.list-group-item-warning,\nbutton.list-group-item-warning {\n  color: #8a6d3b;\n}\na.list-group-item-warning .list-group-item-heading,\nbutton.list-group-item-warning .list-group-item-heading {\n  color: inherit;\n}\na.list-group-item-warning:hover,\nbutton.list-group-item-warning:hover,\na.list-group-item-warning:focus,\nbutton.list-group-item-warning:focus {\n  color: #8a6d3b;\n  background-color: #faf2cc;\n}\na.list-group-item-warning.active,\nbutton.list-group-item-warning.active,\na.list-group-item-warning.active:hover,\nbutton.list-group-item-warning.active:hover,\na.list-group-item-warning.active:focus,\nbutton.list-group-item-warning.active:focus {\n  color: #fff;\n  background-color: #8a6d3b;\n  border-color: #8a6d3b;\n}\n.list-group-item-danger {\n  color: #a94442;\n  background-color: #f2dede;\n}\na.list-group-item-danger,\nbutton.list-group-item-danger {\n  color: #a94442;\n}\na.list-group-item-danger .list-group-item-heading,\nbutton.list-group-item-danger .list-group-item-heading {\n  color: inherit;\n}\na.list-group-item-danger:hover,\nbutton.list-group-item-danger:hover,\na.list-group-item-danger:focus,\nbutton.list-group-item-danger:focus {\n  color: #a94442;\n  background-color: #ebcccc;\n}\na.list-group-item-danger.active,\nbutton.list-group-item-danger.active,\na.list-group-item-danger.active:hover,\nbutton.list-group-item-danger.active:hover,\na.list-group-item-danger.active:focus,\nbutton.list-group-item-danger.active:focus {\n  color: #fff;\n  background-color: #a94442;\n  border-color: #a94442;\n}\n.list-group-item-heading {\n  margin-top: 0;\n  margin-bottom: 5px;\n}\n.list-group-item-text {\n  margin-bottom: 0;\n  line-height: 1.3;\n}\n.panel {\n  margin-bottom: 20px;\n  background-color: #fff;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n.panel-body {\n  padding: 15px;\n}\n.panel-heading {\n  padding: 10px 15px;\n  border-bottom: 1px solid transparent;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n.panel-heading > .dropdown .dropdown-toggle {\n  color: inherit;\n}\n.panel-title {\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 16px;\n  color: inherit;\n}\n.panel-title > a,\n.panel-title > small,\n.panel-title > .small,\n.panel-title > small > a,\n.panel-title > .small > a {\n  color: inherit;\n}\n.panel-footer {\n  padding: 10px 15px;\n  background-color: #f5f5f5;\n  border-top: 1px solid #ddd;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n.panel > .list-group,\n.panel > .panel-collapse > .list-group {\n  margin-bottom: 0;\n}\n.panel > .list-group .list-group-item,\n.panel > .panel-collapse > .list-group .list-group-item {\n  border-width: 1px 0;\n  border-radius: 0;\n}\n.panel > .list-group:first-child .list-group-item:first-child,\n.panel > .panel-collapse > .list-group:first-child .list-group-item:first-child {\n  border-top: 0;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n.panel > .list-group:last-child .list-group-item:last-child,\n.panel > .panel-collapse > .list-group:last-child .list-group-item:last-child {\n  border-bottom: 0;\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:first-child {\n  border-top-right-radius: 0;\n  border-top-left-radius: 0;\n}\n.panel-heading + .list-group .list-group-item:first-child {\n  border-top-width: 0;\n}\n.list-group + .panel-footer {\n  border-top-width: 0;\n}\n.panel > .table,\n.panel > .table-responsive > .table,\n.panel > .panel-collapse > .table {\n  margin-bottom: 0;\n}\n.panel > .table caption,\n.panel > .table-responsive > .table caption,\n.panel > .panel-collapse > .table caption {\n  padding-left: 15px;\n  padding-right: 15px;\n}\n.panel > .table:first-child,\n.panel > .table-responsive:first-child > .table:first-child {\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n}\n.panel > .table:first-child > thead:first-child > tr:first-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child {\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n.panel > .table:first-child > thead:first-child > tr:first-child td:first-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:first-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:first-child,\n.panel > .table:first-child > thead:first-child > tr:first-child th:first-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:first-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child th:first-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:first-child {\n  border-top-left-radius: 3px;\n}\n.panel > .table:first-child > thead:first-child > tr:first-child td:last-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:last-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:last-child,\n.panel > .table:first-child > thead:first-child > tr:first-child th:last-child,\n.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:last-child,\n.panel > .table:first-child > tbody:first-child > tr:first-child th:last-child,\n.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:last-child {\n  border-top-right-radius: 3px;\n}\n.panel > .table:last-child,\n.panel > .table-responsive:last-child > .table:last-child {\n  border-bottom-right-radius: 3px;\n  border-bottom-left-radius: 3px;\n}\n.panel > .table:last-child > tbody:last-child > tr:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child {\n  border-bottom-left-radius: 3px;\n  border-bottom-right-radius: 3px;\n}\n.panel > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:first-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:first-child,\n.panel > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:first-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child th:first-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:first-child {\n  border-bottom-left-radius: 3px;\n}\n.panel > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:last-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:last-child,\n.panel > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:last-child,\n.panel > .table:last-child > tfoot:last-child > tr:last-child th:last-child,\n.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:last-child {\n  border-bottom-right-radius: 3px;\n}\n.panel > .panel-body + .table,\n.panel > .panel-body + .table-responsive,\n.panel > .table + .panel-body,\n.panel > .table-responsive + .panel-body {\n  border-top: 1px solid #ddd;\n}\n.panel > .table > tbody:first-child > tr:first-child th,\n.panel > .table > tbody:first-child > tr:first-child td {\n  border-top: 0;\n}\n.panel > .table-bordered,\n.panel > .table-responsive > .table-bordered {\n  border: 0;\n}\n.panel > .table-bordered > thead > tr > th:first-child,\n.panel > .table-responsive > .table-bordered > thead > tr > th:first-child,\n.panel > .table-bordered > tbody > tr > th:first-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > th:first-child,\n.panel > .table-bordered > tfoot > tr > th:first-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > th:first-child,\n.panel > .table-bordered > thead > tr > td:first-child,\n.panel > .table-responsive > .table-bordered > thead > tr > td:first-child,\n.panel > .table-bordered > tbody > tr > td:first-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > td:first-child,\n.panel > .table-bordered > tfoot > tr > td:first-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > td:first-child {\n  border-left: 0;\n}\n.panel > .table-bordered > thead > tr > th:last-child,\n.panel > .table-responsive > .table-bordered > thead > tr > th:last-child,\n.panel > .table-bordered > tbody > tr > th:last-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > th:last-child,\n.panel > .table-bordered > tfoot > tr > th:last-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > th:last-child,\n.panel > .table-bordered > thead > tr > td:last-child,\n.panel > .table-responsive > .table-bordered > thead > tr > td:last-child,\n.panel > .table-bordered > tbody > tr > td:last-child,\n.panel > .table-responsive > .table-bordered > tbody > tr > td:last-child,\n.panel > .table-bordered > tfoot > tr > td:last-child,\n.panel > .table-responsive > .table-bordered > tfoot > tr > td:last-child {\n  border-right: 0;\n}\n.panel > .table-bordered > thead > tr:first-child > td,\n.panel > .table-responsive > .table-bordered > thead > tr:first-child > td,\n.panel > .table-bordered > tbody > tr:first-child > td,\n.panel > .table-responsive > .table-bordered > tbody > tr:first-child > td,\n.panel > .table-bordered > thead > tr:first-child > th,\n.panel > .table-responsive > .table-bordered > thead > tr:first-child > th,\n.panel > .table-bordered > tbody > tr:first-child > th,\n.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th {\n  border-bottom: 0;\n}\n.panel > .table-bordered > tbody > tr:last-child > td,\n.panel > .table-responsive > .table-bordered > tbody > tr:last-child > td,\n.panel > .table-bordered > tfoot > tr:last-child > td,\n.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > td,\n.panel > .table-bordered > tbody > tr:last-child > th,\n.panel > .table-responsive > .table-bordered > tbody > tr:last-child > th,\n.panel > .table-bordered > tfoot > tr:last-child > th,\n.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > th {\n  border-bottom: 0;\n}\n.panel > .table-responsive {\n  border: 0;\n  margin-bottom: 0;\n}\n.panel-group {\n  margin-bottom: 20px;\n}\n.panel-group .panel {\n  margin-bottom: 0;\n  border-radius: 4px;\n}\n.panel-group .panel + .panel {\n  margin-top: 5px;\n}\n.panel-group .panel-heading {\n  border-bottom: 0;\n}\n.panel-group .panel-heading + .panel-collapse > .panel-body,\n.panel-group .panel-heading + .panel-collapse > .list-group {\n  border-top: 1px solid #ddd;\n}\n.panel-group .panel-footer {\n  border-top: 0;\n}\n.panel-group .panel-footer + .panel-collapse .panel-body {\n  border-bottom: 1px solid #ddd;\n}\n.panel-default {\n  border-color: #ddd;\n}\n.panel-default > .panel-heading {\n  color: #333333;\n  background-color: #f5f5f5;\n  border-color: #ddd;\n}\n.panel-default > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #ddd;\n}\n.panel-default > .panel-heading .badge {\n  color: #f5f5f5;\n  background-color: #333333;\n}\n.panel-default > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #ddd;\n}\n.panel-primary {\n  border-color: #0080B7;\n}\n.panel-primary > .panel-heading {\n  color: #fff;\n  background-color: #0080B7;\n  border-color: #0080B7;\n}\n.panel-primary > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #0080B7;\n}\n.panel-primary > .panel-heading .badge {\n  color: #0080B7;\n  background-color: #fff;\n}\n.panel-primary > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #0080B7;\n}\n.panel-success {\n  border-color: #d6e9c6;\n}\n.panel-success > .panel-heading {\n  color: #3c763d;\n  background-color: #dff0d8;\n  border-color: #d6e9c6;\n}\n.panel-success > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #d6e9c6;\n}\n.panel-success > .panel-heading .badge {\n  color: #dff0d8;\n  background-color: #3c763d;\n}\n.panel-success > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #d6e9c6;\n}\n.panel-info {\n  border-color: #bce8f1;\n}\n.panel-info > .panel-heading {\n  color: #31708f;\n  background-color: #d9edf7;\n  border-color: #bce8f1;\n}\n.panel-info > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #bce8f1;\n}\n.panel-info > .panel-heading .badge {\n  color: #d9edf7;\n  background-color: #31708f;\n}\n.panel-info > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #bce8f1;\n}\n.panel-warning {\n  border-color: #faebcc;\n}\n.panel-warning > .panel-heading {\n  color: #8a6d3b;\n  background-color: #fcf8e3;\n  border-color: #faebcc;\n}\n.panel-warning > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #faebcc;\n}\n.panel-warning > .panel-heading .badge {\n  color: #fcf8e3;\n  background-color: #8a6d3b;\n}\n.panel-warning > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #faebcc;\n}\n.panel-danger {\n  border-color: #ebccd1;\n}\n.panel-danger > .panel-heading {\n  color: #a94442;\n  background-color: #f2dede;\n  border-color: #ebccd1;\n}\n.panel-danger > .panel-heading + .panel-collapse > .panel-body {\n  border-top-color: #ebccd1;\n}\n.panel-danger > .panel-heading .badge {\n  color: #f2dede;\n  background-color: #a94442;\n}\n.panel-danger > .panel-footer + .panel-collapse > .panel-body {\n  border-bottom-color: #ebccd1;\n}\n.embed-responsive {\n  position: relative;\n  display: block;\n  height: 0;\n  padding: 0;\n  overflow: hidden;\n}\n.embed-responsive .embed-responsive-item,\n.embed-responsive iframe,\n.embed-responsive embed,\n.embed-responsive object,\n.embed-responsive video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  height: 100%;\n  width: 100%;\n  border: 0;\n}\n.embed-responsive-16by9 {\n  padding-bottom: 56.25%;\n}\n.embed-responsive-4by3 {\n  padding-bottom: 75%;\n}\n.well {\n  min-height: 20px;\n  padding: 19px;\n  margin-bottom: 20px;\n  background-color: #f5f5f5;\n  border: 1px solid #e3e3e3;\n  border-radius: 4px;\n  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n.well blockquote {\n  border-color: #ddd;\n  border-color: rgba(0, 0, 0, 0.15);\n}\n.well-lg {\n  padding: 24px;\n  border-radius: 6px;\n}\n.well-sm {\n  padding: 9px;\n  border-radius: 3px;\n}\n.close {\n  float: right;\n  font-size: 21px;\n  font-weight: bold;\n  line-height: 1;\n  color: #000;\n  text-shadow: 0 1px 0 #fff;\n  opacity: 0.2;\n  filter: alpha(opacity=20);\n}\n.close:hover,\n.close:focus {\n  color: #000;\n  text-decoration: none;\n  cursor: pointer;\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n}\nbutton.close {\n  padding: 0;\n  cursor: pointer;\n  background: transparent;\n  border: 0;\n  -webkit-appearance: none;\n}\n.modal-open {\n  overflow: hidden;\n}\n.modal {\n  display: none;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1050;\n  -webkit-overflow-scrolling: touch;\n  outline: 0;\n}\n.modal.fade .modal-dialog {\n  -webkit-transform: translate(0, -25%);\n  -ms-transform: translate(0, -25%);\n  -o-transform: translate(0, -25%);\n  transform: translate(0, -25%);\n  -webkit-transition: -webkit-transform 0.3s ease-out;\n  -moz-transition: -moz-transform 0.3s ease-out;\n  -o-transition: -o-transform 0.3s ease-out;\n  transition: transform 0.3s ease-out;\n}\n.modal.in .modal-dialog {\n  -webkit-transform: translate(0, 0);\n  -ms-transform: translate(0, 0);\n  -o-transform: translate(0, 0);\n  transform: translate(0, 0);\n}\n.modal-open .modal {\n  overflow-x: hidden;\n  overflow-y: auto;\n}\n.modal-dialog {\n  position: relative;\n  width: auto;\n  margin: 10px;\n}\n.modal-content {\n  position: relative;\n  background-color: #fff;\n  border: 1px solid #999;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\n  background-clip: padding-box;\n  outline: 0;\n}\n.modal-backdrop {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 1040;\n  background-color: #000;\n}\n.modal-backdrop.fade {\n  opacity: 0;\n  filter: alpha(opacity=0);\n}\n.modal-backdrop.in {\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n}\n.modal-header {\n  padding: 15px;\n  border-bottom: 1px solid #e5e5e5;\n}\n.modal-header .close {\n  margin-top: -2px;\n}\n.modal-title {\n  margin: 0;\n  line-height: 1.42857143;\n}\n.modal-body {\n  position: relative;\n  padding: 15px;\n}\n.modal-footer {\n  padding: 15px;\n  text-align: right;\n  border-top: 1px solid #e5e5e5;\n}\n.modal-footer .btn + .btn {\n  margin-left: 5px;\n  margin-bottom: 0;\n}\n.modal-footer .btn-group .btn + .btn {\n  margin-left: -1px;\n}\n.modal-footer .btn-block + .btn-block {\n  margin-left: 0;\n}\n.modal-scrollbar-measure {\n  position: absolute;\n  top: -9999px;\n  width: 50px;\n  height: 50px;\n  overflow: scroll;\n}\n@media (min-width: 768px) {\n  .modal-dialog {\n    width: 600px;\n    margin: 30px auto;\n  }\n  .modal-content {\n    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\n  }\n  .modal-sm {\n    width: 300px;\n  }\n}\n@media (min-width: 992px) {\n  .modal-lg {\n    width: 900px;\n  }\n}\n.tooltip {\n  position: absolute;\n  z-index: 1070;\n  display: block;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.42857143;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 12px;\n  opacity: 0;\n  filter: alpha(opacity=0);\n}\n.tooltip.in {\n  opacity: 0.9;\n  filter: alpha(opacity=90);\n}\n.tooltip.top {\n  margin-top: -3px;\n  padding: 5px 0;\n}\n.tooltip.right {\n  margin-left: 3px;\n  padding: 0 5px;\n}\n.tooltip.bottom {\n  margin-top: 3px;\n  padding: 5px 0;\n}\n.tooltip.left {\n  margin-left: -3px;\n  padding: 0 5px;\n}\n.tooltip-inner {\n  max-width: 200px;\n  padding: 3px 8px;\n  color: #fff;\n  text-align: center;\n  background-color: #000;\n  border-radius: 4px;\n}\n.tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.tooltip.top .tooltip-arrow {\n  bottom: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000;\n}\n.tooltip.top-left .tooltip-arrow {\n  bottom: 0;\n  right: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000;\n}\n.tooltip.top-right .tooltip-arrow {\n  bottom: 0;\n  left: 5px;\n  margin-bottom: -5px;\n  border-width: 5px 5px 0;\n  border-top-color: #000;\n}\n.tooltip.right .tooltip-arrow {\n  top: 50%;\n  left: 0;\n  margin-top: -5px;\n  border-width: 5px 5px 5px 0;\n  border-right-color: #000;\n}\n.tooltip.left .tooltip-arrow {\n  top: 50%;\n  right: 0;\n  margin-top: -5px;\n  border-width: 5px 0 5px 5px;\n  border-left-color: #000;\n}\n.tooltip.bottom .tooltip-arrow {\n  top: 0;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000;\n}\n.tooltip.bottom-left .tooltip-arrow {\n  top: 0;\n  right: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000;\n}\n.tooltip.bottom-right .tooltip-arrow {\n  top: 0;\n  left: 5px;\n  margin-top: -5px;\n  border-width: 0 5px 5px;\n  border-bottom-color: #000;\n}\n.popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1060;\n  display: none;\n  max-width: 276px;\n  padding: 1px;\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-style: normal;\n  font-weight: normal;\n  letter-spacing: normal;\n  line-break: auto;\n  line-height: 1.42857143;\n  text-align: left;\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  white-space: normal;\n  word-break: normal;\n  word-spacing: normal;\n  word-wrap: normal;\n  font-size: 14px;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ccc;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 6px;\n  -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n}\n.popover.top {\n  margin-top: -10px;\n}\n.popover.right {\n  margin-left: 10px;\n}\n.popover.bottom {\n  margin-top: 10px;\n}\n.popover.left {\n  margin-left: -10px;\n}\n.popover-title {\n  margin: 0;\n  padding: 8px 14px;\n  font-size: 14px;\n  background-color: #f7f7f7;\n  border-bottom: 1px solid #ebebeb;\n  border-radius: 5px 5px 0 0;\n}\n.popover-content {\n  padding: 9px 14px;\n}\n.popover > .arrow,\n.popover > .arrow:after {\n  position: absolute;\n  display: block;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.popover > .arrow {\n  border-width: 11px;\n}\n.popover > .arrow:after {\n  border-width: 10px;\n  content: \"\";\n}\n.popover.top > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-bottom-width: 0;\n  border-top-color: #999999;\n  border-top-color: rgba(0, 0, 0, 0.25);\n  bottom: -11px;\n}\n.popover.top > .arrow:after {\n  content: \" \";\n  bottom: 1px;\n  margin-left: -10px;\n  border-bottom-width: 0;\n  border-top-color: #fff;\n}\n.popover.right > .arrow {\n  top: 50%;\n  left: -11px;\n  margin-top: -11px;\n  border-left-width: 0;\n  border-right-color: #999999;\n  border-right-color: rgba(0, 0, 0, 0.25);\n}\n.popover.right > .arrow:after {\n  content: \" \";\n  left: 1px;\n  bottom: -10px;\n  border-left-width: 0;\n  border-right-color: #fff;\n}\n.popover.bottom > .arrow {\n  left: 50%;\n  margin-left: -11px;\n  border-top-width: 0;\n  border-bottom-color: #999999;\n  border-bottom-color: rgba(0, 0, 0, 0.25);\n  top: -11px;\n}\n.popover.bottom > .arrow:after {\n  content: \" \";\n  top: 1px;\n  margin-left: -10px;\n  border-top-width: 0;\n  border-bottom-color: #fff;\n}\n.popover.left > .arrow {\n  top: 50%;\n  right: -11px;\n  margin-top: -11px;\n  border-right-width: 0;\n  border-left-color: #999999;\n  border-left-color: rgba(0, 0, 0, 0.25);\n}\n.popover.left > .arrow:after {\n  content: \" \";\n  right: 1px;\n  border-right-width: 0;\n  border-left-color: #fff;\n  bottom: -10px;\n}\n.carousel {\n  position: relative;\n}\n.carousel-inner {\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n}\n.carousel-inner > .item {\n  display: none;\n  position: relative;\n  -webkit-transition: 0.6s ease-in-out left;\n  -o-transition: 0.6s ease-in-out left;\n  transition: 0.6s ease-in-out left;\n}\n.carousel-inner > .item > img,\n.carousel-inner > .item > a > img {\n  line-height: 1;\n}\n@media all and (transform-3d), (-webkit-transform-3d) {\n  .carousel-inner > .item {\n    -webkit-transition: -webkit-transform 0.6s ease-in-out;\n    -moz-transition: -moz-transform 0.6s ease-in-out;\n    -o-transition: -o-transform 0.6s ease-in-out;\n    transition: transform 0.6s ease-in-out;\n    -webkit-backface-visibility: hidden;\n    -moz-backface-visibility: hidden;\n    backface-visibility: hidden;\n    -webkit-perspective: 1000px;\n    -moz-perspective: 1000px;\n    perspective: 1000px;\n  }\n  .carousel-inner > .item.next,\n  .carousel-inner > .item.active.right {\n    -webkit-transform: translate3d(100%, 0, 0);\n    transform: translate3d(100%, 0, 0);\n    left: 0;\n  }\n  .carousel-inner > .item.prev,\n  .carousel-inner > .item.active.left {\n    -webkit-transform: translate3d(-100%, 0, 0);\n    transform: translate3d(-100%, 0, 0);\n    left: 0;\n  }\n  .carousel-inner > .item.next.left,\n  .carousel-inner > .item.prev.right,\n  .carousel-inner > .item.active {\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n    left: 0;\n  }\n}\n.carousel-inner > .active,\n.carousel-inner > .next,\n.carousel-inner > .prev {\n  display: block;\n}\n.carousel-inner > .active {\n  left: 0;\n}\n.carousel-inner > .next,\n.carousel-inner > .prev {\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n.carousel-inner > .next {\n  left: 100%;\n}\n.carousel-inner > .prev {\n  left: -100%;\n}\n.carousel-inner > .next.left,\n.carousel-inner > .prev.right {\n  left: 0;\n}\n.carousel-inner > .active.left {\n  left: -100%;\n}\n.carousel-inner > .active.right {\n  left: 100%;\n}\n.carousel-control {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 15%;\n  opacity: 0.5;\n  filter: alpha(opacity=50);\n  font-size: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\n  background-color: rgba(0, 0, 0, 0);\n}\n.carousel-control.left {\n  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, rgba(0, 0, 0, 0.0001) 100%);\n  background-repeat: repeat-x;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);\n}\n.carousel-control.right {\n  left: auto;\n  right: 0;\n  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n  background-image: -o-linear-gradient(left, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.0001) 0%, rgba(0, 0, 0, 0.5) 100%);\n  background-repeat: repeat-x;\n  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);\n}\n.carousel-control:hover,\n.carousel-control:focus {\n  outline: 0;\n  color: #fff;\n  text-decoration: none;\n  opacity: 0.9;\n  filter: alpha(opacity=90);\n}\n.carousel-control .icon-prev,\n.carousel-control .icon-next,\n.carousel-control .glyphicon-chevron-left,\n.carousel-control .glyphicon-chevron-right {\n  position: absolute;\n  top: 50%;\n  margin-top: -10px;\n  z-index: 5;\n  display: inline-block;\n}\n.carousel-control .icon-prev,\n.carousel-control .glyphicon-chevron-left {\n  left: 50%;\n  margin-left: -10px;\n}\n.carousel-control .icon-next,\n.carousel-control .glyphicon-chevron-right {\n  right: 50%;\n  margin-right: -10px;\n}\n.carousel-control .icon-prev,\n.carousel-control .icon-next {\n  width: 20px;\n  height: 20px;\n  line-height: 1;\n  font-family: serif;\n}\n.carousel-control .icon-prev:before {\n  content: '\\2039';\n}\n.carousel-control .icon-next:before {\n  content: '\\203A';\n}\n.carousel-indicators {\n  position: absolute;\n  bottom: 10px;\n  left: 50%;\n  z-index: 15;\n  width: 60%;\n  margin-left: -30%;\n  padding-left: 0;\n  list-style: none;\n  text-align: center;\n}\n.carousel-indicators li {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  margin: 1px;\n  text-indent: -999px;\n  border: 1px solid #fff;\n  border-radius: 10px;\n  cursor: pointer;\n  background-color: #000 \\9;\n  background-color: rgba(0, 0, 0, 0);\n}\n.carousel-indicators .active {\n  margin: 0;\n  width: 12px;\n  height: 12px;\n  background-color: #fff;\n}\n.carousel-caption {\n  position: absolute;\n  left: 15%;\n  right: 15%;\n  bottom: 20px;\n  z-index: 10;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #fff;\n  text-align: center;\n  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.6);\n}\n.carousel-caption .btn {\n  text-shadow: none;\n}\n@media screen and (min-width: 768px) {\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-prev,\n  .carousel-control .icon-next {\n    width: 30px;\n    height: 30px;\n    margin-top: -10px;\n    font-size: 30px;\n  }\n  .carousel-control .glyphicon-chevron-left,\n  .carousel-control .icon-prev {\n    margin-left: -10px;\n  }\n  .carousel-control .glyphicon-chevron-right,\n  .carousel-control .icon-next {\n    margin-right: -10px;\n  }\n  .carousel-caption {\n    left: 20%;\n    right: 20%;\n    padding-bottom: 30px;\n  }\n  .carousel-indicators {\n    bottom: 20px;\n  }\n}\n.clearfix:before,\n.clearfix:after,\n.dl-horizontal dd:before,\n.dl-horizontal dd:after,\n.container:before,\n.container:after,\n.container-fluid:before,\n.container-fluid:after,\n.row:before,\n.row:after,\n.form-horizontal .form-group:before,\n.form-horizontal .form-group:after,\n.btn-toolbar:before,\n.btn-toolbar:after,\n.btn-group-vertical > .btn-group:before,\n.btn-group-vertical > .btn-group:after,\n.nav:before,\n.nav:after,\n.navbar:before,\n.navbar:after,\n.navbar-header:before,\n.navbar-header:after,\n.navbar-collapse:before,\n.navbar-collapse:after,\n.pager:before,\n.pager:after,\n.panel-body:before,\n.panel-body:after,\n.modal-header:before,\n.modal-header:after,\n.modal-footer:before,\n.modal-footer:after {\n  content: \" \";\n  display: table;\n}\n.clearfix:after,\n.dl-horizontal dd:after,\n.container:after,\n.container-fluid:after,\n.row:after,\n.form-horizontal .form-group:after,\n.btn-toolbar:after,\n.btn-group-vertical > .btn-group:after,\n.nav:after,\n.navbar:after,\n.navbar-header:after,\n.navbar-collapse:after,\n.pager:after,\n.panel-body:after,\n.modal-header:after,\n.modal-footer:after {\n  clear: both;\n}\n.center-block {\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n}\n.pull-right {\n  float: right !important;\n}\n.pull-left {\n  float: left !important;\n}\n.hide {\n  display: none !important;\n}\n.show {\n  display: block !important;\n}\n.invisible {\n  visibility: hidden;\n}\n.text-hide {\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0;\n}\n.hidden {\n  display: none !important;\n}\n.affix {\n  position: fixed;\n}\n@-ms-viewport {\n  width: device-width;\n}\n.visible-xs,\n.visible-sm,\n.visible-md,\n.visible-lg {\n  display: none !important;\n}\n.visible-xs-block,\n.visible-xs-inline,\n.visible-xs-inline-block,\n.visible-sm-block,\n.visible-sm-inline,\n.visible-sm-inline-block,\n.visible-md-block,\n.visible-md-inline,\n.visible-md-inline-block,\n.visible-lg-block,\n.visible-lg-inline,\n.visible-lg-inline-block {\n  display: none !important;\n}\n@media (max-width: 767px) {\n  .visible-xs {\n    display: block !important;\n  }\n  table.visible-xs {\n    display: table !important;\n  }\n  tr.visible-xs {\n    display: table-row !important;\n  }\n  th.visible-xs,\n  td.visible-xs {\n    display: table-cell !important;\n  }\n}\n@media (max-width: 767px) {\n  .visible-xs-block {\n    display: block !important;\n  }\n}\n@media (max-width: 767px) {\n  .visible-xs-inline {\n    display: inline !important;\n  }\n}\n@media (max-width: 767px) {\n  .visible-xs-inline-block {\n    display: inline-block !important;\n  }\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm {\n    display: block !important;\n  }\n  table.visible-sm {\n    display: table !important;\n  }\n  tr.visible-sm {\n    display: table-row !important;\n  }\n  th.visible-sm,\n  td.visible-sm {\n    display: table-cell !important;\n  }\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-block {\n    display: block !important;\n  }\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline {\n    display: inline !important;\n  }\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .visible-sm-inline-block {\n    display: inline-block !important;\n  }\n}\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md {\n    display: block !important;\n  }\n  table.visible-md {\n    display: table !important;\n  }\n  tr.visible-md {\n    display: table-row !important;\n  }\n  th.visible-md,\n  td.visible-md {\n    display: table-cell !important;\n  }\n}\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-block {\n    display: block !important;\n  }\n}\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline {\n    display: inline !important;\n  }\n}\n@media (min-width: 992px) and (max-width: 1199px) {\n  .visible-md-inline-block {\n    display: inline-block !important;\n  }\n}\n@media (min-width: 1200px) {\n  .visible-lg {\n    display: block !important;\n  }\n  table.visible-lg {\n    display: table !important;\n  }\n  tr.visible-lg {\n    display: table-row !important;\n  }\n  th.visible-lg,\n  td.visible-lg {\n    display: table-cell !important;\n  }\n}\n@media (min-width: 1200px) {\n  .visible-lg-block {\n    display: block !important;\n  }\n}\n@media (min-width: 1200px) {\n  .visible-lg-inline {\n    display: inline !important;\n  }\n}\n@media (min-width: 1200px) {\n  .visible-lg-inline-block {\n    display: inline-block !important;\n  }\n}\n@media (max-width: 767px) {\n  .hidden-xs {\n    display: none !important;\n  }\n}\n@media (min-width: 768px) and (max-width: 991px) {\n  .hidden-sm {\n    display: none !important;\n  }\n}\n@media (min-width: 992px) and (max-width: 1199px) {\n  .hidden-md {\n    display: none !important;\n  }\n}\n@media (min-width: 1200px) {\n  .hidden-lg {\n    display: none !important;\n  }\n}\n.visible-print {\n  display: none !important;\n}\n@media print {\n  .visible-print {\n    display: block !important;\n  }\n  table.visible-print {\n    display: table !important;\n  }\n  tr.visible-print {\n    display: table-row !important;\n  }\n  th.visible-print,\n  td.visible-print {\n    display: table-cell !important;\n  }\n}\n.visible-print-block {\n  display: none !important;\n}\n@media print {\n  .visible-print-block {\n    display: block !important;\n  }\n}\n.visible-print-inline {\n  display: none !important;\n}\n@media print {\n  .visible-print-inline {\n    display: inline !important;\n  }\n}\n.visible-print-inline-block {\n  display: none !important;\n}\n@media print {\n  .visible-print-inline-block {\n    display: inline-block !important;\n  }\n}\n@media print {\n  .hidden-print {\n    display: none !important;\n  }\n}\n@font-face {\n  font-family: 'fontello';\n  src: url(" + __webpack_require__(53) + ");\n  src: url(" + __webpack_require__(53) + "#iefix) format('embedded-opentype'),\n       url(" + __webpack_require__(127) + ") format('woff2'),\n       url(" + __webpack_require__(128) + ") format('woff'),\n       url(" + __webpack_require__(126) + ") format('truetype'),\n       url(" + __webpack_require__(125) + "#fontello) format('svg');\n  font-weight: normal;\n  font-style: normal;\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?26862252#fontello') format('svg');\n  }\n}\n*/\n \n [class^=\"icon-\"]:before, [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n \n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n \n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n \n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n \n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n \n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n \n  /* Font smoothing. That was taken from TWBS */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n \n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n \n.icon-usb:before { content: '\\E800'; } /* '' */\n.icon-search:before { content: '\\E801'; } /* '' */\n.icon-star:before { content: '\\E802'; } /* '' */\n.icon-star-empty:before { content: '\\E803'; } /* '' */\n.icon-ok:before { content: '\\E804'; } /* '' */\n.icon-ok-circled:before { content: '\\E805'; } /* '' */\n.icon-cancel:before { content: '\\E806'; } /* '' */\n.icon-cancel-circled-1:before { content: '\\E807'; } /* '' */\n.icon-cancel-circled2:before { content: '\\E808'; } /* '' */\n.icon-plus:before { content: '\\E809'; } /* '' */\n.icon-plus-circled:before { content: '\\E80A'; } /* '' */\n.icon-help:before { content: '\\E80B'; } /* '' */\n.icon-info:before { content: '\\E80C'; } /* '' */\n.icon-link-1:before { content: '\\E80D'; } /* '' */\n.icon-unlink:before { content: '\\E80E'; } /* '' */\n.icon-lock:before { content: '\\E80F'; } /* '' */\n.icon-lock-open:before { content: '\\E810'; } /* '' */\n.icon-lock-open-alt:before { content: '\\E811'; } /* '' */\n.icon-edit:before { content: '\\E812'; } /* '' */\n.icon-attention-alt:before { content: '\\E813'; } /* '' */\n.icon-attention:before { content: '\\E814'; } /* '' */\n.icon-attention-circled:before { content: '\\E815'; } /* '' */\n.icon-trash:before { content: '\\E816'; } /* '' */\n.icon-trash-empty:before { content: '\\E817'; } /* '' */\n.icon-cog-1:before { content: '\\E818'; } /* '' */\n.icon-cog-alt:before { content: '\\E819'; } /* '' */\n.icon-wrench:before { content: '\\E81A'; } /* '' */\n.icon-down-circled2:before { content: '\\E81B'; } /* '' */\n.icon-down-dir:before { content: '\\E81C'; } /* '' */\n.icon-right-dir:before { content: '\\E81D'; } /* '' */\n.icon-down:before { content: '\\E81E'; } /* '' */\n.icon-up:before { content: '\\E81F'; } /* '' */\n.icon-ccw:before { content: '\\E820'; } /* '' */\n.icon-arrows-cw:before { content: '\\E821'; } /* '' */\n.icon-exchange:before { content: '\\E822'; } /* '' */\n.icon-play:before { content: '\\E823'; } /* '' */\n.icon-play-circled:before { content: '\\E824'; } /* '' */\n.icon-play-circled2:before { content: '\\E825'; } /* '' */\n.icon-stop:before { content: '\\E826'; } /* '' */\n.icon-pause:before { content: '\\E827'; } /* '' */\n.icon-to-end:before { content: '\\E828'; } /* '' */\n.icon-signal:before { content: '\\E829'; } /* '' */\n.icon-wifi:before { content: '\\E82A'; } /* '' */\n.icon-columns:before { content: '\\E82B'; } /* '' */\n.icon-ellipsis-vert:before { content: '\\E82C'; } /* '' */\n.icon-toggle-off:before { content: '\\E82D'; } /* '' */\n.icon-toggle-on:before { content: '\\E82E'; } /* '' */\n.icon-check:before { content: '\\E82F'; } /* '' */\n.icon-circle:before { content: '\\E830'; } /* '' */\n.icon-floppy:before { content: '\\E831'; } /* '' */\n.icon-key:before { content: '\\E832'; } /* '' */\n.icon-sitemap:before { content: '\\E833'; } /* '' */\n.icon-shield:before { content: '\\E834'; } /* '' */\n.icon-database:before { content: '\\E835'; } /* '' */\n.icon-plug:before { content: '\\E836'; } /* '' */\n.icon-css3:before { content: '\\E837'; } /* '' */\n.icon-html5:before { content: '\\E838'; } /* '' */\n.icon-link:before { content: '\\E839'; } /* '' */\n.icon-cog:before { content: '\\E83A'; } /* '' */\n.icon-list-add:before { content: '\\E83B'; } /* '' */\n.icon-floppy-1:before { content: '\\E83C'; } /* '' */\n.icon-cancel-circled:before { content: '\\E83D'; } /* '' */\n.icon-flash:before { content: '\\E83E'; } /* '' */\n.icon-indent-right:before { content: '\\E83F'; } /* '' */\n.icon-doc-text:before { content: '\\E840'; } /* '' */\n.icon-spin5:before { content: '\\E841'; } /* '' */\n/*\n   Animation example, for spinners\n*/\n.animate-spin {\n  -moz-animation: spin 2s infinite linear;\n  -o-animation: spin 2s infinite linear;\n  -webkit-animation: spin 2s infinite linear;\n  animation: spin 2s infinite linear;\n  display: inline-block;\n}\n@-moz-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-webkit-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-o-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@-ms-keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n@keyframes spin {\n  0% {\n    -moz-transform: rotate(0deg);\n    -o-transform: rotate(0deg);\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -moz-transform: rotate(359deg);\n    -o-transform: rotate(359deg);\n    -webkit-transform: rotate(359deg);\n    transform: rotate(359deg);\n  }\n}\n\n/* Copyright (c) 2016 Nordic Semiconductor. All Rights Reserved.\n *\n * The information contained herein is property of Nordic Semiconductor ASA.\n * Terms and conditions of usage are described in detail in NORDIC\n * SEMICONDUCTOR STANDARD SOFTWARE LICENSE AGREEMENT.\n *\n * Licensees are granted free, non-transferable use of the information. NO\n * WARRANTY of ANY KIND is provided. This heading must NOT be removed from\n * the file.\n *\n */\n", ""]);
	
	// exports


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "745358f9e942108db1c4c3b34d17e3cc.png";

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e31fcf1885e371e19f5786c2bdfeae1b.ttf";

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "b03c5eb442028f11bc008e89f46861f6.ttf";

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "549ec3575943fef98f76b46924ff5efa.ttf";

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "4356190d747fe8bea2bc7c83f25102fa.ttf";

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "df7b648ce5356ea1ebce435b3459fd60.ttf";

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cf4449c1884598b292630aa9f4007c19.ttf";

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "c54ae58ff604e10ae5026bbb2b49b252.svg";

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "bc92a023542406c4368f75e0d50d98a7.ttf";

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "280af0d7bb9e461b76656723f0e07363.woff2";

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "3bdeb68c1bdc116779397d9986a74c35.woff";

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "89889688147bd7575d6327160d64e760.svg";

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "e18bbf611f2a2e43afc071aa2f4e1512.ttf";

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "fa2772327f55d8198301fdb8bcfc8158.woff";

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "448c34a56d699c29117adc64c43affeb.woff2";

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "789196b051a613ae3ba3673dadb25b1d.png";

/***/ },
/* 134 */,
/* 135 */,
/* 136 */,
/* 137 */,
/* 138 */,
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(115);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(34)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/less-loader/index.js!./styles.less", function() {
				var newContent = require("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/less-loader/index.js!./styles.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(116);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(34)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/less-loader/index.js!./colordefinitions.less", function() {
				var newContent = require("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/less-loader/index.js!./colordefinitions.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(117);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(34)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/less-loader/index.js!./styles.less", function() {
				var newContent = require("!!./../../../node_modules/css-loader/index.js!./../../../node_modules/less-loader/index.js!./styles.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 142 */
/***/ function(module, exports) {

	module.exports = require("atom-keymap");

/***/ },
/* 143 */
/***/ function(module, exports) {

	module.exports = require("babel-polyfill");

/***/ },
/* 144 */
/***/ function(module, exports) {

	module.exports = require("change-case");

/***/ },
/* 145 */
/***/ function(module, exports) {

	module.exports = require("child_process");

/***/ },
/* 146 */
/***/ function(module, exports) {

	module.exports = require("d3");

/***/ },
/* 147 */
/***/ function(module, exports) {

	module.exports = require("events");

/***/ },
/* 148 */
/***/ function(module, exports) {

	module.exports = require("jquery");

/***/ },
/* 149 */
/***/ function(module, exports) {

	module.exports = require("moment");

/***/ },
/* 150 */
/***/ function(module, exports) {

	module.exports = require("react-d3-components");

/***/ },
/* 151 */
/***/ function(module, exports) {

	module.exports = require("react-infinite");

/***/ },
/* 152 */
/***/ function(module, exports) {

	module.exports = require("react-onclickoutside");

/***/ },
/* 153 */
/***/ function(module, exports) {

	module.exports = require("react-sizeme");

/***/ },
/* 154 */
/***/ function(module, exports) {

	module.exports = require("react-textarea-autosize");

/***/ },
/* 155 */
/***/ function(module, exports) {

	module.exports = require("semver");

/***/ },
/* 156 */
/***/ function(module, exports) {

	module.exports = require("serialport");

/***/ },
/* 157 */
/***/ function(module, exports) {

	module.exports = require("sqlite3");

/***/ },
/* 158 */
/***/ function(module, exports) {

	module.exports = require("tween.js");

/***/ },
/* 159 */
/***/ function(module, exports) {

	module.exports = require("util");

/***/ },
/* 160 */
/***/ function(module, exports) {

	module.exports = require("winston");

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map