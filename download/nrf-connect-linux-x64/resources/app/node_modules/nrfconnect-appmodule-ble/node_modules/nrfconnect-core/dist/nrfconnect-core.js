(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"), require("react-bootstrap"), require("immutable"), require("redux"), require("react-redux"), require("redux-devtools"), require("redux-devtools-dock-monitor"), require("redux-devtools-log-monitor"), require("redux-logger"), require("redux-thunk"));
	else if(typeof define === 'function' && define.amd)
		define(["react", "react-bootstrap", "immutable", "redux", "react-redux", "redux-devtools", "redux-devtools-dock-monitor", "redux-devtools-log-monitor", "redux-logger", "redux-thunk"], factory);
	else if(typeof exports === 'object')
		exports["nrfconnect-core"] = factory(require("react"), require("react-bootstrap"), require("immutable"), require("redux"), require("react-redux"), require("redux-devtools"), require("redux-devtools-dock-monitor"), require("redux-devtools-log-monitor"), require("redux-logger"), require("redux-thunk"));
	else
		root["nrfconnect-core"] = factory(root["react"], root["react-bootstrap"], root["immutable"], root["redux"], root["react-redux"], root["redux-devtools"], root["redux-devtools-dock-monitor"], root["redux-devtools-log-monitor"], root["redux-logger"], root["redux-thunk"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_19__, __WEBPACK_EXTERNAL_MODULE_20__, __WEBPACK_EXTERNAL_MODULE_21__, __WEBPACK_EXTERNAL_MODULE_22__, __WEBPACK_EXTERNAL_MODULE_23__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "./dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(15);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("react-bootstrap");

/***/ },
/* 3 */
/***/ function(module, exports) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.showErrorDialog = showErrorDialog;
	exports.addError = addError;
	exports.closeErrorDialog = closeErrorDialog;
	exports.toggleDebug = toggleDebug;
	const CLOSE = exports.CLOSE = 'ERROR_CLOSE_ERROR_DIALOG';
	const SHOW_ERROR_MESSAGES = exports.SHOW_ERROR_MESSAGES = 'ERROR_SHOW_ERROR_MESSAGES';
	const ADD_ERROR_MESSAGE = exports.ADD_ERROR_MESSAGE = 'ERROR_ADD_ERROR_MESSAGE';
	const TOGGLE_DEBUG = exports.TOGGLE_DEBUG = 'ERROR_TOGGLE_DEBUG';
	
	function closeErrorDialogAction() {
	    return {
	        type: CLOSE
	    };
	}
	
	function showErrorDialogAction(errors) {
	    console.log(errors);
	    return {
	        type: SHOW_ERROR_MESSAGES,
	        errors
	    };
	}
	
	function addErrorAction(error) {
	    return {
	        type: ADD_ERROR_MESSAGE,
	        error
	    };
	}
	
	function toggleDebugAction() {
	    return {
	        type: TOGGLE_DEBUG
	    };
	}
	
	// Exported action creators
	function showErrorDialog(errors) {
	    return showErrorDialogAction(errors);
	}
	
	function addError(error) {
	    return addErrorAction(error);
	}
	
	function closeErrorDialog() {
	    return closeErrorDialogAction();
	}
	
	function toggleDebug() {
	    return toggleDebugAction();
	}

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	if (process.env.NODE_ENV === 'development') {
	    module.exports = __webpack_require__(12);
	} else {
	    module.exports = __webpack_require__(13);
	}

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("immutable");

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = require("redux");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class Spinner extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	        const image = _props.image,
	              size = _props.size,
	              visible = _props.visible,
	              className = _props.className;
	
	        const style = {
	            visibility: visible ? 'visible' : 'hidden'
	        };
	
	        return _react2.default.createElement('img', { className: className, src: image, height: size, width: size, style: style });
	    }
	}
	exports.default = Spinner; /* Copyright (c) 2016, Nordic Semiconductor ASA
	                            *
	                            * All rights reserved.
	                            *
	                            * Redistribution and use in source and binary forms, with or without modification,
	                            * are permitted provided that the following conditions are met:
	                            *
	                            *   1. Redistributions of source code must retain the above copyright notice, this
	                            *   list of conditions and the following disclaimer.
	                            *
	                            *   2. Redistributions in binary form, except as embedded into a Nordic
	                            *   Semiconductor ASA integrated circuit in a product or a software update for
	                            *   such product, must reproduce the above copyright notice, this list of
	                            *   conditions and the following disclaimer in the documentation and/or other
	                            *   materials provided with the distribution.
	                            *
	                            *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                            *   contributors may be used to endorse or promote products derived from this
	                            *   software without specific prior written permission.
	                            *
	                            *   4. This software, with or without modification, must only be used with a
	                            *   Nordic Semiconductor ASA integrated circuit.
	                            *
	                            *   5. Any software provided in binary form under this license must not be
	                            *   reverse engineered, decompiled, modified and/or disassembled.
	                            *
	                            *
	                            * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                            * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                            * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                            * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                            * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                            * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                            * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                            * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                            * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                            * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                            */
	
	Spinner.propTypes = {
	    image: _react.PropTypes.string.isRequired,
	    size: _react.PropTypes.number,
	    visible: _react.PropTypes.bool,
	    className: _react.PropTypes.string
	};
	Spinner.defaultProps = {
	    size: 16,
	    visible: false,
	    className: 'spinner'
	};
	module.exports = exports['default'];

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	class LabeledInputGroup extends _react2.default.Component {
	
	    render() {
	        var _props = this.props;
	        const label = _props.label,
	              children = _props.children,
	              labelClassName = _props.labelClassName,
	              wrapperClassName = _props.wrapperClassName;
	
	        return _react2.default.createElement(
	            _reactBootstrap.FormGroup,
	            null,
	            _react2.default.createElement(
	                _reactBootstrap.ControlLabel,
	                { className: labelClassName },
	                label
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.InputGroup,
	                { className: wrapperClassName },
	                children
	            )
	        );
	    }
	}
	
	LabeledInputGroup.propTypes = {
	    label: _react.PropTypes.string.isRequired,
	    labelClassName: _react.PropTypes.string,
	    wrapperClassName: _react.PropTypes.string
	};
	LabeledInputGroup.defaultProps = {
	    labelClassName: 'col-md-3 text-right',
	    wrapperClassName: 'col-md-9'
	};
	exports.default = LabeledInputGroup;
	module.exports = exports['default'];

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                                              * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                                              *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                                              *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                                              *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                                              *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                                              *   materials provided with the distribution.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                                              *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                                              *   software without specific prior written permission.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                                              *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                                              *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                                              * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                                              * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                                              * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                                              * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                                              * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                                              * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                                              * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                                              * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                                              * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                                              */
	
	class SelectList extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	
	        const id = _props.id,
	              label = _props.label,
	              children = _props.children,
	              labelClassName = _props.labelClassName,
	              wrapperClassName = _props.wrapperClassName,
	              props = _objectWithoutProperties(_props, ['id', 'label', 'children', 'labelClassName', 'wrapperClassName']);
	
	        return _react2.default.createElement(
	            _reactBootstrap.FormGroup,
	            { controlId: id },
	            label && _react2.default.createElement(
	                _reactBootstrap.ControlLabel,
	                { className: labelClassName },
	                label
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.InputGroup,
	                { className: wrapperClassName },
	                _react2.default.createElement(
	                    _reactBootstrap.FormControl,
	                    _extends({ componentClass: 'select' }, props),
	                    children
	                )
	            )
	        );
	    }
	}
	
	SelectList.propTypes = {
	    id: _react.PropTypes.string,
	    label: _react.PropTypes.string.isRequired,
	    labelClassName: _react.PropTypes.string,
	    wrapperClassName: _react.PropTypes.string
	};
	SelectList.defaultProps = {
	    labelClassName: 'col-md-3 text-right',
	    wrapperClassName: 'col-md-9'
	};
	exports.default = SelectList;
	module.exports = exports['default'];

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                                              * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                                              *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                                              *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                                              *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                                              *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                                              *   materials provided with the distribution.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                                              *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                                              *   software without specific prior written permission.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                                              *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                                              *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                                              * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                                              * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                                              * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                                              * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                                              * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                                              * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                                              * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                                              * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                                              * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                                              */
	
	class TextArea extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	
	        const id = _props.id,
	              label = _props.label,
	              labelClassName = _props.labelClassName,
	              wrapperClassName = _props.wrapperClassName,
	              props = _objectWithoutProperties(_props, ['id', 'label', 'labelClassName', 'wrapperClassName']);
	
	        return _react2.default.createElement(
	            _reactBootstrap.FormGroup,
	            { controlId: id },
	            label && _react2.default.createElement(
	                _reactBootstrap.ControlLabel,
	                { className: labelClassName },
	                label
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.InputGroup,
	                { className: wrapperClassName },
	                _react2.default.createElement(_reactBootstrap.FormControl, _extends({ componentClass: 'textarea' }, props))
	            )
	        );
	    }
	}
	
	TextArea.propTypes = {
	    id: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    labelClassName: _react.PropTypes.string,
	    wrapperClassName: _react.PropTypes.string
	};
	TextArea.defaultProps = {
	    labelClassName: 'col-md-3 text-right',
	    wrapperClassName: 'col-md-9'
	};
	exports.default = TextArea;
	module.exports = exports['default'];

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /* Copyright (c) 2016, Nordic Semiconductor ASA
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * All rights reserved.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * Redistribution and use in source and binary forms, with or without modification,
	                                                                                                                                                                                                                              * are permitted provided that the following conditions are met:
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   1. Redistributions of source code must retain the above copyright notice, this
	                                                                                                                                                                                                                              *   list of conditions and the following disclaimer.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   2. Redistributions in binary form, except as embedded into a Nordic
	                                                                                                                                                                                                                              *   Semiconductor ASA integrated circuit in a product or a software update for
	                                                                                                                                                                                                                              *   such product, must reproduce the above copyright notice, this list of
	                                                                                                                                                                                                                              *   conditions and the following disclaimer in the documentation and/or other
	                                                                                                                                                                                                                              *   materials provided with the distribution.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	                                                                                                                                                                                                                              *   contributors may be used to endorse or promote products derived from this
	                                                                                                                                                                                                                              *   software without specific prior written permission.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   4. This software, with or without modification, must only be used with a
	                                                                                                                                                                                                                              *   Nordic Semiconductor ASA integrated circuit.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *   5. Any software provided in binary form under this license must not be
	                                                                                                                                                                                                                              *   reverse engineered, decompiled, modified and/or disassembled.
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              *
	                                                                                                                                                                                                                              * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	                                                                                                                                                                                                                              * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	                                                                                                                                                                                                                              * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	                                                                                                                                                                                                                              * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	                                                                                                                                                                                                                              * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	                                                                                                                                                                                                                              * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	                                                                                                                                                                                                                              * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	                                                                                                                                                                                                                              * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	                                                                                                                                                                                                                              * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	                                                                                                                                                                                                                              * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	                                                                                                                                                                                                                              */
	
	class TextInput extends _react2.default.PureComponent {
	
	    render() {
	        var _props = this.props;
	
	        const id = _props.id,
	              label = _props.label,
	              hasFeedback = _props.hasFeedback,
	              validationState = _props.validationState,
	              buttonAfter = _props.buttonAfter,
	              labelClassName = _props.labelClassName,
	              wrapperClassName = _props.wrapperClassName,
	              inline = _props.inline,
	              props = _objectWithoutProperties(_props, ['id', 'label', 'hasFeedback', 'validationState', 'buttonAfter', 'labelClassName', 'wrapperClassName', 'inline']);
	
	        let bsClassProp = inline && { bsClass: 'form-inline' };
	
	        return _react2.default.createElement(
	            _reactBootstrap.FormGroup,
	            _extends({ controlId: id, validationState: validationState }, bsClassProp),
	            label && _react2.default.createElement(
	                _reactBootstrap.ControlLabel,
	                { className: labelClassName },
	                label
	            ),
	            _react2.default.createElement(
	                _reactBootstrap.InputGroup,
	                { className: wrapperClassName },
	                _react2.default.createElement(_reactBootstrap.FormControl, props),
	                hasFeedback && _react2.default.createElement(_reactBootstrap.FormControl.Feedback, null),
	                buttonAfter && _react2.default.createElement(
	                    _reactBootstrap.InputGroup.Button,
	                    null,
	                    buttonAfter
	                )
	            )
	        );
	    }
	}
	
	TextInput.propTypes = {
	    id: _react.PropTypes.string,
	    label: _react.PropTypes.string,
	    validationState: _react.PropTypes.string,
	    buttonAfter: _react.PropTypes.node,
	    hasFeedback: _react.PropTypes.bool,
	    labelClassName: _react.PropTypes.string,
	    wrapperClassName: _react.PropTypes.string,
	    inline: _react.PropTypes.bool
	};
	TextInput.defaultProps = {
	    labelClassName: 'col-md-3 text-right',
	    wrapperClassName: 'col-md-9'
	};
	exports.default = TextInput;
	module.exports = exports['default'];

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reduxDevtools = __webpack_require__(19);
	
	var _reduxDevtoolsLogMonitor = __webpack_require__(21);
	
	var _reduxDevtoolsLogMonitor2 = _interopRequireDefault(_reduxDevtoolsLogMonitor);
	
	var _reduxDevtoolsDockMonitor = __webpack_require__(20);
	
	var _reduxDevtoolsDockMonitor2 = _interopRequireDefault(_reduxDevtoolsDockMonitor);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = (0, _reduxDevtools.createDevTools)(_react2.default.createElement(
	  _reduxDevtoolsDockMonitor2.default,
	  { toggleVisibilityKey: 'H',
	    changePositionKey: 'Q' },
	  _react2.default.createElement(_reduxDevtoolsLogMonitor2.default, null)
	));
	module.exports = exports['default'];

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class Root extends _react2.default.PureComponent {
	    render() {
	        return;
	    }
	}
	exports.default = Root;
	module.exports = exports['default'];

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.ErrorDialog = undefined;
	
	var _react = __webpack_require__(1);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(18);
	
	var _redux = __webpack_require__(6);
	
	var _errorDialogActions = __webpack_require__(3);
	
	var ErrorActions = _interopRequireWildcard(_errorDialogActions);
	
	var _reactBootstrap = __webpack_require__(2);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	class ErrorDialog extends _react2.default.PureComponent {
	    constructor(props) {
	        super(props);
	    }
	
	    _createErrorHtml(index, error) {
	        const debug = this.props.debug;
	
	
	        let html;
	
	        if (debug === true) {
	            html = _react2.default.createElement(
	                'p',
	                { key: index },
	                error.stack
	            );
	        } else {
	            html = _react2.default.createElement(
	                'p',
	                { key: index },
	                error.message
	            );
	        }
	
	        return html;
	    }
	
	    render() {
	        var _props = this.props;
	        const visible = _props.visible,
	              errors = _props.errors,
	              closeErrorDialog = _props.closeErrorDialog;
	
	
	        let _errors = [];
	
	        errors.forEach((error, index) => _errors.push(this._createErrorHtml(index, error)));
	
	        return _react2.default.createElement(
	            'div',
	            null,
	            _react2.default.createElement(
	                _reactBootstrap.Modal,
	                { show: visible, onHide: () => closeErrorDialog() },
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Header,
	                    { closeButton: true },
	                    _react2.default.createElement(
	                        _reactBootstrap.Modal.Title,
	                        null,
	                        'Error!'
	                    )
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Body,
	                    null,
	                    _errors
	                ),
	                _react2.default.createElement(
	                    _reactBootstrap.Modal.Footer,
	                    null,
	                    _react2.default.createElement(
	                        _reactBootstrap.Button,
	                        { autoFocus: true, onClick: () => closeErrorDialog() },
	                        'OK'
	                    )
	                )
	            )
	        );
	    }
	}
	
	exports.ErrorDialog = ErrorDialog;
	ErrorDialog.propTypes = {
	    errors: _react.PropTypes.object.isRequired,
	    visible: _react.PropTypes.bool.isRequired,
	    closeErrorDialog: _react.PropTypes.func.isRequired,
	    toggleDebug: _react.PropTypes.func.isRequired
	};
	
	function mapStateToProps(state) {
	    const errorDialog = state.errorDialog;
	
	
	    return {
	        visible: errorDialog.visible,
	        errors: errorDialog.errors,
	        debug: errorDialog.debug
	    };
	}
	
	function mapDispatchToProps(dispatch) {
	    const retval = Object.assign({}, (0, _redux.bindActionCreators)(ErrorActions, dispatch));
	
	    return retval;
	}
	
	exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ErrorDialog);

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	const actions = {
	    errorDialogActions: __webpack_require__(3)
	};
	
	const components = {
	    Spinner: __webpack_require__(7),
	    LabeledInputGroup: __webpack_require__(8),
	    SelectList: __webpack_require__(9),
	    TextArea: __webpack_require__(10),
	    TextInput: __webpack_require__(11)
	};
	
	const containers = {
	    DevTools: __webpack_require__(4).default,
	    ErrorDialog: __webpack_require__(14).default
	};
	
	const reducers = {
	    errorDialogReducer: __webpack_require__(16)
	};
	
	const store = {
	    configureStore: __webpack_require__(17)
	};
	
	module.exports = Object.assign({}, actions, components, containers, reducers, store);

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = errorDialog;
	
	var _errorDialogActions = __webpack_require__(3);
	
	var ErrorDialogActions = _interopRequireWildcard(_errorDialogActions);
	
	var _immutable = __webpack_require__(5);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	const InitialState = (0, _immutable.Record)({
	    visible: false,
	    errors: (0, _immutable.List)(),
	    debug: false
	});
	
	const initialState = new InitialState();
	
	function hideAndClearErrors(state) {
	    // Only clear the list of errors if we are not in debug mode.
	    if (state.debug !== true) {
	        state = state.set('errors', state.errors.clear());
	    }
	
	    return state.set('visible', false);
	}
	
	function showErrors(state, errors) {
	    if (errors !== undefined) {
	        if (errors.constructor !== Array) {
	            state = addErrorMessage(state, errors);
	        } else {
	            errors.forEach(error => {
	                state = addErrorMessage(state, error);
	            });
	        }
	    }
	
	    return state.set('visible', true);
	}
	
	function addErrorMessage(state, error) {
	    return state.set('errors', state.errors.push(error));
	}
	
	function errorDialog() {
	    let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
	    let action = arguments[1];
	
	    switch (action.type) {
	        case ErrorDialogActions.CLOSE:
	            return hideAndClearErrors(state);
	        case ErrorDialogActions.SHOW_ERROR_MESSAGES:
	            return showErrors(state, action.errors);
	        case ErrorDialogActions.ADD_ERROR_MESSAGE:
	            return addErrorMessage(state, action.error);
	        case ErrorDialogActions.TOGGLE_DEBUG:
	            return toggleDebug(state);
	        default:
	            return state;
	    }
	}
	module.exports = exports['default'];

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* Copyright (c) 2016, Nordic Semiconductor ASA
	 *
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without modification,
	 * are permitted provided that the following conditions are met:
	 *
	 *   1. Redistributions of source code must retain the above copyright notice, this
	 *   list of conditions and the following disclaimer.
	 *
	 *   2. Redistributions in binary form, except as embedded into a Nordic
	 *   Semiconductor ASA integrated circuit in a product or a software update for
	 *   such product, must reproduce the above copyright notice, this list of
	 *   conditions and the following disclaimer in the documentation and/or other
	 *   materials provided with the distribution.
	 *
	 *   3. Neither the name of Nordic Semiconductor ASA nor the names of its
	 *   contributors may be used to endorse or promote products derived from this
	 *   software without specific prior written permission.
	 *
	 *   4. This software, with or without modification, must only be used with a
	 *   Nordic Semiconductor ASA integrated circuit.
	 *
	 *   5. Any software provided in binary form under this license must not be
	 *   reverse engineered, decompiled, modified and/or disassembled.
	 *
	 *
	 * THIS SOFTWARE IS PROVIDED BY NORDIC SEMICONDUCTOR ASA "AS IS" AND ANY EXPRESS OR
	 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
	 * MERCHANTABILITY, NONINFRINGEMENT, AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL NORDIC SEMICONDUCTOR ASA OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
	 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
	 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
	 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
	 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	 */
	
	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = configureStore;
	
	var _reduxThunk = __webpack_require__(23);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _redux = __webpack_require__(6);
	
	var _reduxLogger = __webpack_require__(22);
	
	var _reduxLogger2 = _interopRequireDefault(_reduxLogger);
	
	var _DevTools = __webpack_require__(4);
	
	var _DevTools2 = _interopRequireDefault(_DevTools);
	
	var _immutable = __webpack_require__(5);
	
	var _immutable2 = _interopRequireDefault(_immutable);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function configureStore(initialState, rootReducer) {
	    const middleware = [_reduxThunk2.default];
	
	    const isProduction = process.env.NODE_ENV !== 'development';
	
	    let finalCreateStore;
	
	    if (isProduction) {
	        finalCreateStore = _redux.applyMiddleware.apply(undefined, middleware)(_redux.createStore);
	    } else {
	        const logger = (0, _reduxLogger2.default)({
	            collapsed: true,
	            stateTransformer: state => {
	                var newState = {};
	
	                for (var i of Object.keys(state)) {
	                    if (_immutable2.default.Iterable.isIterable(state[i])) {
	                        newState[i] = state[i].toJS();
	                    } else {
	                        newState[i] = state[i];
	                    }
	                }
	
	                return newState;
	            }
	        });
	
	        // Logger must be the last middleware in chain.
	        middleware.push(logger);
	
	        finalCreateStore = (0, _redux.compose)(_redux.applyMiddleware.apply(undefined, middleware), _DevTools2.default.instrument())(_redux.createStore);
	    }
	
	    return finalCreateStore(rootReducer, initialState);
	}
	module.exports = exports['default'];

/***/ },
/* 18 */
/***/ function(module, exports) {

	module.exports = require("react-redux");

/***/ },
/* 19 */
/***/ function(module, exports) {

	module.exports = require("redux-devtools");

/***/ },
/* 20 */
/***/ function(module, exports) {

	module.exports = require("redux-devtools-dock-monitor");

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = require("redux-devtools-log-monitor");

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = require("redux-logger");

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = require("redux-thunk");

/***/ }
/******/ ])
});
;
//# sourceMappingURL=nrfconnect-core.js.map